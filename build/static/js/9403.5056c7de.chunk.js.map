{"version":3,"file":"static/js/9403.5056c7de.chunk.js","mappings":"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","sources":["components/Notification.js","components/Shop.jsx","components/common/Back.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst NotificationBanner = ({ message, show, onClose }) => {\r\n  useEffect(() => {\r\n    if (show) {\r\n      const timer = setTimeout(() => {\r\n        onClose();\r\n      }, 5000); \r\n      return () => clearTimeout(timer); \r\n    }\r\n  }, [show, onClose]);\r\n\r\n  if (!show) return null;\r\n\r\n  return (\r\n    <div className=\"notification-banner\">\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationBanner;\r\n","// import React, { useEffect, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { Link, useLocation, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { toast, ToastContainer } from \"react-toastify\";\r\n// import { Badge, Input, Select, Slider, Menu, Breadcrumb, message } from \"antd\";\r\n// import { Card, CardContent, Typography } from \"@mui/material\";\r\n// import { Search, ChevronRight, ChevronDown } from \"lucide-react\";\r\n// import { addToCart, removeFromCart } from \"../redux/CartSlice\";\r\n// import Back from \"./common/Back\";\r\n// import NotificationBanner from \"./Notification\";\r\n// import Cookies from \"js-cookie\";\r\n// import CryptoJS from \"crypto-js\";\r\n\r\n// import { addToCart1, addToCarts1, removeFromCart1 } from \"../redux/CartSlice1\";\r\n// import banner from \"./../assets/bacola-banner-18.jpg\";\r\n\r\n// const { SubMenu } = Menu;\r\n\r\n// const Shop = () => {\r\n//   const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n//   const dispatch = useDispatch();\r\n//   const cart = useSelector((state) => state.cart);\r\n//   const cart1 = useSelector((state) => state.cart1);\r\n//   const encryptedUser = Cookies.get(\"user\");\r\n//   const user = encryptedUser\r\n//     ? JSON.parse(\r\n//         CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n//           CryptoJS.enc.Utf8\r\n//         )\r\n//       )\r\n//     : null;\r\n\r\n//   const encryptedToken = Cookies.get(\"token\");\r\n//   const token = encryptedToken\r\n//     ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(\r\n//         CryptoJS.enc.Utf8\r\n//       )\r\n//     : null;\r\n//   const navigate = useNavigate();\r\n//   const [data, setData] = useState([]);\r\n\r\n//   let showText = Cookies.get(\"AllTextHead\");\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const itemsPerPage = 9;\r\n//   const location = useLocation();\r\n//   const { title } = location?.state || \"\";\r\n//   const { categoryId } = location?.state || \"\";\r\n//   // console.log(title, categoryId, \"test\");\r\n\r\n//   const [categoryData, setCategoryData] = useState([]);\r\n//   const [subcategoryData, setSubcategoryData] = useState([]);\r\n//   const [selectedCategory, setSelectedCategory] = useState(title);\r\n//   const [selectedSubCategory, setSelectedSubCategory] = useState(\"\");\r\n//   const [selectedWeight, setSelectedWeight] = useState({});\r\n//   const [priceRange, setPriceRange] = useState([0, 5000]);\r\n//   const [sortOrder, setSortOrder] = useState(\"Sort\");\r\n\r\n//   const [categoryCounts, setCategoryCounts] = useState({});\r\n//   const [subcategoryCounts, setSubcategoryCounts] = useState({});\r\n//   const [filteredCategories, setFilteredCategories] = useState([]);\r\n//   const [filteredSubcategories, setFilteredSubcategories] = useState([]);\r\n//   const [categoryMap, setCategoryMap] = useState({});\r\n//   const [subCategoryMap, setSubCategoryMap] = useState({});\r\n//   const [selectedCategoryId, setSelectedCategoryId] = useState(categoryId);\r\n//   const [selectedSubCategoryId, setSelectedSubCategoryId] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     window.scrollTo({\r\n//       top: 0,\r\n//       behavior: \"smooth\",\r\n//     });\r\n//     setSelectedCategoryId(categoryId);\r\n//   }, [categoryId]);\r\n//   useEffect(() => {\r\n//     if (\r\n//       data.length > 0 &&\r\n//       categoryData.length > 0 &&\r\n//       subcategoryData.length > 0\r\n//     ) {\r\n//       const categoriesWithProducts = categoryData.filter((category) =>\r\n//         data.some((product) => product.category === category._id)\r\n//       );\r\n//       setFilteredCategories(categoriesWithProducts);\r\n\r\n//       const subcategoriesWithProducts = subcategoryData.filter((subcategory) =>\r\n//         data.some(\r\n//           (product) =>\r\n//             product.subcategory === subcategory._id &&\r\n//             product.category === subcategory.categoryId\r\n//         )\r\n//       );\r\n//       setFilteredSubcategories(subcategoriesWithProducts);\r\n\r\n//       const catCounts = {};\r\n//       const subCatCounts = {};\r\n\r\n//       data.forEach((product) => {\r\n//         catCounts[product.category] = (catCounts[product.category] || 0) + 1;\r\n//         subCatCounts[product.subcategory] =\r\n//           (subCatCounts[product.subcategory] || 0) + 1;\r\n//       });\r\n\r\n//       setCategoryCounts(catCounts);\r\n//       setSubcategoryCounts(subCatCounts);\r\n//     }\r\n//   }, [data, categoryData, subcategoryData]);\r\n//   useEffect(() => {\r\n//     getCategories();\r\n//     getSubcategories();\r\n//     getProducts();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const catCounts = {};\r\n//     const subCatCounts = {};\r\n\r\n//     data.forEach((product) => {\r\n//       catCounts[product.category] = (catCounts[product.category] || 0) + 1;\r\n//       subCatCounts[product.subcategory] =\r\n//         (subCatCounts[product.subcategory] || 0) + 1;\r\n//     });\r\n\r\n//     setCategoryCounts(catCounts);\r\n//     setSubcategoryCounts(subCatCounts);\r\n//   }, [data]);\r\n\r\n//   const getCategories = async () => {\r\n//     try {\r\n//       const res = await axios.get(\r\n//         \"https://majesticmall.net/api/admin/getCategory\",\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       if (res.status === 200) {\r\n//         setCategoryData(\r\n//           res.data?.category.filter((item) => item.status === \"Active\")\r\n//         );\r\n\r\n//         const categoryMapping = {};\r\n//         res.data?.category\r\n//           .filter((item) => item.status === \"Active\")\r\n//           .forEach((cat) => {\r\n//             categoryMapping[cat._id] = cat.categoryName;\r\n//           });\r\n//         setCategoryMap(categoryMapping);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching categories:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const getSubcategories = async () => {\r\n//     try {\r\n//       const res = await axios.get(\r\n//         \"https://majesticmall.net/api/admin/getSubcategory\",\r\n//         {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       if (res.status === 200) {\r\n//         setSubcategoryData(\r\n//           res.data?.Subcategory.filter((item) => item.status === \"Active\")\r\n//         );\r\n\r\n//         const subCategoryMapping = {};\r\n//         res.data?.Subcategory.filter(\r\n//           (item) => item.status === \"Active\"\r\n//         ).forEach((subcat) => {\r\n//           subCategoryMapping[subcat._id] = subcat.SubcategoryName;\r\n//         });\r\n//         setSubCategoryMap(subCategoryMapping);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching subcategories:\", error);\r\n//     }\r\n//   };\r\n//   const [letsted, setleted] = useState([]);\r\n//   const getProducts = async () => {\r\n//     const res = await axios.get(\r\n//       \"https://majesticmall.net/api/admin/Getproductlist\",\r\n//       {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//       }\r\n//     );\r\n//     if (res.status === 200) {\r\n//       const activeProducts = res.data.ProductList.filter(\r\n//         (item) => item.status === \"Active\"\r\n//       );\r\n//       setleted(activeProducts);\r\n//       setData(activeProducts);\r\n\r\n//       const initialSelectedWeight = {};\r\n//       activeProducts.forEach((product) => {\r\n//         initialSelectedWeight[product._id] = !user?.club\r\n//           ? product.weight?.[0]\r\n//           : product.Clubweight?.[0];\r\n//       });\r\n//       setSelectedWeight(initialSelectedWeight);\r\n//     }\r\n//   };\r\n\r\n//   const categoryid = categoryData?.find(\r\n//     (ele) => ele?.categoryName == \"Fruits & Vegetables\"\r\n//   );\r\n\r\n//   const [itemQuantities, setItemQuantities] = useState({});\r\n\r\n//   const handleQuantityChange = (item, change) => {\r\n//     if (\r\n//       item.stock - item?.sellproduct <= 0 ||\r\n//       item.stock - item?.sellproduct < change\r\n//     )\r\n//       return message.error(\"Out of stock\");\r\n//     setItemQuantities((prev) => ({\r\n//       ...prev,\r\n//       [item._id]: Math.max((prev[item._id] || 1) + change, 1),\r\n//     }));\r\n//   };\r\n//   const [notification, setNotification] = useState({\r\n//     show: false,\r\n//     message: \"\",\r\n//   });\r\n//   // console.log(\"user?.club\",user,user?.club);\r\n//   const handleAddToCart = (item) => {\r\n//     if (item.stock - item?.sellproduct <= 0)\r\n//       return message.error(\"Out of stock\");\r\n//     if (Object.keys(item).length == 0)\r\n//       return message.error(\"Product not found\");\r\n//     item.weight[0].discount = item?.discount;\r\n//     item.Clubweight[0].discount = item?.clubdiscount;\r\n\r\n//     const weightToAdd =\r\n//       selectedWeight?.[item._id] ??\r\n//       (!user?.club && item?.weight?.[0]) ??\r\n//       (user?.club && item?.Clubweight?.[0]) ??\r\n//       null;\r\n\r\n//     const quantity = itemQuantities[item._id] || 1;\r\n//     // setNotification({\r\n//     //   show: true,\r\n//     //   message: `Success: You have added ${item.productname} to your cart!`,\r\n//     // });\r\n//     message.success(\r\n//       `Success: You have added ${item?.productname} to your cart!`\r\n//     );\r\n//     if (categoryid?._id == item?.category) {\r\n//       dispatch(\r\n//         addToCart1({\r\n//           ...item,\r\n//           selectedWeight: weightToAdd,\r\n//           quantity,\r\n//         })\r\n//       );\r\n//     } else {\r\n//       dispatch(\r\n//         addToCart({\r\n//           ...item,\r\n//           selectedWeight: weightToAdd,\r\n//           quantity,\r\n//         })\r\n//       );\r\n//     }\r\n//   };\r\n//   const handleRemoveFromCart = (item) => {\r\n//     const weightToRemove =\r\n//       selectedWeight[item._id] ||\r\n//       (!user?.club ? item.weight[0] : item.Clubweight[0]);\r\n\r\n//     if (categoryid?._id == item?.category) {\r\n//       dispatch(\r\n//         removeFromCart1({\r\n//           _id: item._id,\r\n//           selectedWeight: weightToRemove,\r\n//         })\r\n//       );\r\n//     } else {\r\n//       dispatch(\r\n//         removeFromCart({\r\n//           _id: item._id,\r\n//           selectedWeight: weightToRemove,\r\n//         })\r\n//       );\r\n//     }\r\n\r\n//     setItemQuantities((prev) => ({\r\n//       ...prev,\r\n//       [item._id]: Math.max((prev[item._id] || 0) - 1, 0),\r\n//     }));\r\n//   };\r\n\r\n//   const handleSubscribe = (val) => {\r\n//     if (!user) {\r\n//       toast.info(\"Please login as a user to subscribe.\");\r\n//     } else {\r\n//       navigate(`/subscribe/${val._id}`, {\r\n//         state: { selectedWeight: selectedWeight[val._id] },\r\n//       });\r\n//       window.scrollTo({\r\n//         top: 0,\r\n//         behavior: \"smooth\",\r\n//       });\r\n//     }\r\n//   };\r\n//   const getFirstPrice = (product) => {\r\n//     if (!user?.club) {\r\n//       const firstWeight = product.weight?.[0];\r\n//       if (!firstWeight) return 0;\r\n//       return firstWeight.price - firstWeight.price * (product.discount / 100);\r\n//     } else {\r\n//       const firstClubWeight = product.Clubweight?.[0];\r\n//       if (!firstClubWeight) return 0;\r\n//       return (\r\n//         firstClubWeight.price -\r\n//         firstClubWeight.price * (product.clubdiscount / 100)\r\n//       );\r\n//     }\r\n//   };\r\n//   const filteredItems = data.filter((product) => {\r\n//     const matchesCategory =\r\n//       !selectedCategoryId || product.category === selectedCategoryId;\r\n//     const matchesSubCategory =\r\n//       !selectedSubCategoryId || product.subcategory === selectedSubCategoryId;\r\n\r\n//     const firstPrice = getFirstPrice(product);\r\n//     const matchesPrice =\r\n//       firstPrice >= priceRange[0] && firstPrice <= priceRange[1];\r\n\r\n//     return matchesCategory && matchesSubCategory && matchesPrice;\r\n//   });\r\n//   const totalPages = Math.ceil(filteredItems.length / itemsPerPage);\r\n\r\n//   const getVisiblePages = () => {\r\n//     const maxVisible = 5;\r\n//     const pages = [];\r\n\r\n//     if (totalPages <= maxVisible) {\r\n//       return [...Array(totalPages).keys()].map((n) => n + 1);\r\n//     }\r\n\r\n//     if (currentPage <= 3) {\r\n//       pages.push(1, 2, 3, \"...\", totalPages);\r\n//     } else if (currentPage >= totalPages - 2) {\r\n//       pages.push(1, \"...\", totalPages - 2, totalPages - 1, totalPages);\r\n//     } else {\r\n//       pages.push(\r\n//         1,\r\n//         \"...\",\r\n//         currentPage - 1,\r\n//         currentPage,\r\n//         currentPage + 1,\r\n//         \"...\",\r\n//         totalPages\r\n//       );\r\n//     }\r\n\r\n//     return pages;\r\n//   };\r\n\r\n//   const handleClick = (pageNumber) => {\r\n//     if (pageNumber !== \"...\" && pageNumber > 0 && pageNumber <= totalPages) {\r\n//       setCurrentPage(pageNumber);\r\n//     }\r\n//   };\r\n//   const sortedItems = [...filteredItems].sort((a, b) => {\r\n//     if (sortOrder === \"asc\") {\r\n//       return a.productname.localeCompare(b.productname);\r\n//     } else if (sortOrder === \"desc\") {\r\n//       return b.productname.localeCompare(a.productname);\r\n//     } else if (sortOrder === \"price_asc\") {\r\n//       return getFirstPrice(a) - getFirstPrice(b);\r\n//     } else if (sortOrder === \"price_desc\") {\r\n//       return getFirstPrice(b) - getFirstPrice(a);\r\n//     }\r\n//     return 0;\r\n//   });\r\n\r\n//   const currentItems = sortedItems.slice(\r\n//     (currentPage - 1) * itemsPerPage,\r\n//     currentPage * itemsPerPage\r\n//   );\r\n//   const scrollToTop = (val) => {\r\n//     if (categoryid?._id == val?.category) {\r\n//       navigate(`/shop-detail1/${val?._id}`);\r\n//     } else {\r\n//       navigate(`/shop-detail/${val?._id}`);\r\n//     }\r\n//     window.scrollTo({\r\n//       top: 0,\r\n//       behavior: \"smooth\",\r\n//     });\r\n//   };\r\n\r\n//   const textEncy = Cookies.get(\"AllText\");\r\n//   const AllText = textEncy\r\n//     ? JSON.parse(\r\n//         CryptoJS.AES.decrypt(textEncy, encryptionKey).toString(\r\n//           CryptoJS.enc.Utf8\r\n//         )\r\n//       )\r\n//     : null;\r\n\r\n//   // console.log(\"categoryid\", categoryid);\r\n//   const isItemInCart = (item) => {\r\n//     if (categoryid?._id == item?.category) {\r\n//       return cart1?.items1?.some((cartItem) => cartItem._id === item._id);\r\n//     } else {\r\n//       return cart?.items.some((cartItem) => cartItem._id === item._id);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <NotificationBanner\r\n//         message={notification.message}\r\n//         show={notification.show}\r\n//         onClose={() => setNotification({ ...notification, show: false })}\r\n//       />\r\n//       {/* <section className=\"back\">\r\n//         <div className=\"overlay-back\"></div>\r\n\r\n//         <h1>Products</h1>\r\n//         <div style={{ marginTop: \"-10px\" }}>\r\n//           <div\r\n//             style={{\r\n//               display: \"flex\",\r\n//               justifyContent: \"center\",\r\n//               marginBottom: \"10px\",\r\n//             }}\r\n//           >\r\n//             <div style={{ color: \"#fff\" }}>\r\n//               <h2 onClick={() => navigate(\"/\")}>\r\n//                 Home\r\n//                 {selectedCategoryId && (\r\n//                   <>\r\n//                      {categoryMap[selectedCategoryId]}\r\n//                   </>\r\n//                 )}\r\n//                 {selectedSubCategoryId && (\r\n//                   <>\r\n//                     {subCategoryMap[selectedSubCategoryId]}\r\n//                   </>\r\n//                 )}\r\n//               </h2>\r\n//             </div>\r\n\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"relative -z-10 \">\r\n//           <img src={banner} alt=\"\" className=\"w-full my-3 lg:object-fit-center \" />\r\n//           <div className=\"flex items-center justify-center\">\r\n//             <h1 className=\"text absolute text-sm text-white w-[550px] leading-snug mt-16\">Delivery On Next Day !!! Order  today before 9PM.\r\n//             </h1>\r\n//           </div>\r\n//         </div>\r\n//       </section> */}\r\n\r\n//       <div className=\"relative\">\r\n//         <img\r\n//           src={banner}\r\n//           alt=\"\"\r\n//           className=\"w-full my-3 h-[200px] lg:object-center object-cover\"\r\n//           onError={(e) => {\r\n//             e.target.src = \"../img/example.jpg\"; // Replace with your default image URL\r\n//           }}\r\n//         />\r\n//         <div className=\"absolute inset-0 flex items-center justify-center\">\r\n//           <h1 className=\"text-center lg:text-4xl text-md text-black w-[550px] leading-relaxed\">\r\n//             Delivery On Next Day!!!{\" \"}\r\n//             <span className=\"block\">Order today before 9PM.</span>\r\n//           </h1>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* <ToastContainer /> */}\r\n//       <div className=\"flex flex-col md:flex-row \">\r\n//         <div className=\"w-full p-2 mt-0 mb-4 bg-white rounded-lg shadow-lg md:w-1/4 md:mb-0 lg:mt-60\">\r\n//           <Card bordered={false} className=\"mb-4 \">\r\n//             <CardContent>\r\n//               <Typography\r\n//                 variant=\"h5\"\r\n//                 className=\"mb-4 font-bold\"\r\n//                 style={{ color: \"#000\" }}\r\n//               >\r\n//                 Categories\r\n//               </Typography>\r\n//               <Menu\r\n//                 mode=\"inline\"\r\n//                 openKeys={selectedCategoryId ? [selectedCategoryId] : []}\r\n//                 selectedKeys={[selectedSubCategoryId]}\r\n//                 className=\"border-none\"\r\n//               >\r\n//                 {filteredCategories.map((category) => {\r\n//                   const categorySubcategories = filteredSubcategories.filter(\r\n//                     (sub) => sub.categoryId === category._id\r\n//                   );\r\n\r\n//                   if (categorySubcategories.length === 0) return null;\r\n\r\n//                   return (\r\n//                     <SubMenu\r\n//                       key={category._id}\r\n//                       title={\r\n//                         <span className=\"flex items-center justify-between text-gray-600 hover:text-[#000] transition-all duration-200\">\r\n//                           <span className=\"flex items-center\">\r\n//                             <ChevronRight\r\n//                               size={16}\r\n//                               className=\"mr-2 text-gray-400\"\r\n//                             />\r\n//                             {categoryMap[category._id]}\r\n//                           </span>\r\n//                           <span className=\"text-sm text-gray-400\">\r\n//                             ({categoryCounts[category._id] || 0})\r\n//                           </span>\r\n//                         </span>\r\n//                       }\r\n//                       onTitleClick={() => {\r\n//                         if (selectedCategoryId === category._id) {\r\n//                           setSelectedCategoryId(\"\");\r\n//                           setSelectedSubCategoryId(\"\");\r\n//                         } else {\r\n//                           setSelectedCategoryId(category._id);\r\n//                           setSelectedSubCategoryId(\"\");\r\n//                         }\r\n//                       }}\r\n//                     >\r\n//                       {categorySubcategories.map((subcategory) => (\r\n//                         <Menu.Item\r\n//                           key={subcategory._id}\r\n//                           onClick={() =>\r\n//                             setSelectedSubCategoryId(subcategory._id)\r\n//                           }\r\n//                           className=\"text-gray-500 transition-all duration-150 hover:bg-blue-50 hover:text-blue-600\"\r\n//                         >\r\n//                           <span className=\"flex items-center justify-between\">\r\n//                             {subCategoryMap[subcategory._id]}\r\n//                             <span className=\"text-sm text-gray-400\">\r\n//                               ({subcategoryCounts[subcategory._id] || 0})\r\n//                             </span>\r\n//                           </span>\r\n//                         </Menu.Item>\r\n//                       ))}\r\n//                     </SubMenu>\r\n//                   );\r\n//                 })}\r\n//               </Menu>\r\n//             </CardContent>\r\n//           </Card>\r\n\r\n//           <Card bordered={false} className=\"mb-4 rounded-lg shadow-sm\">\r\n//             <CardContent>\r\n//               <Typography\r\n//                 variant=\"h6\"\r\n//                 className=\"mb-4 font-semibold text-gray-700\"\r\n//                 style={{ color: \"#000\" }}\r\n//               >\r\n//                 Price Range\r\n//               </Typography>\r\n//               <Slider\r\n//                 range\r\n//                 min={0}\r\n//                 max={10000}\r\n//                 step={1}\r\n//                 value={priceRange}\r\n//                 onChange={(value) => setPriceRange(value)}\r\n//                 className=\"text-[#000]\"\r\n//                 trackStyle={[{ backgroundColor: \"#000\" }]}\r\n//                 handleStyle={[{ borderColor: \"#000\" }, { borderColor: \"#000\" }]}\r\n//               />\r\n//               <div className=\"flex justify-between mt-2 text-gray-600\">\r\n//                 <Typography>₹{priceRange[0]}</Typography>\r\n//                 <Typography>₹{priceRange[1]}</Typography>\r\n//               </div>\r\n//             </CardContent>\r\n//           </Card>\r\n\r\n//           {/* <Card bordered={false} className=\"mb-4 rounded-lg shadow-sm\">\r\n//             <CardContent>\r\n//               <Typography\r\n//                 variant=\"h6\"\r\n//                 className=\"mb-4 font-semibold text-gray-700\"\r\n//                 style={{ color: \"#000\" }}\r\n//               >\r\n//                 Banners\r\n//               </Typography>\r\n//               <div className=\"shop-banner\">\r\n//                 <Banner />\r\n//               </div>\r\n\r\n//             </CardContent>\r\n//           </Card> */}\r\n\r\n//           <Card className=\"p-2\">\r\n//             <Typography\r\n//               variant=\"h6\"\r\n//               className=\"mb-4 font-semibold text-gray-700\"\r\n//               style={{ color: \"#000\" }}\r\n//             >\r\n//               Bestseller Products\r\n//             </Typography>\r\n//             <hr className=\"my-2\" />\r\n//             {letsted\r\n//               ?.filter((ele) => ele?.bestsellerstatus === true)\r\n//               ?.slice(0, 3)\r\n//               ?.map((val) => {\r\n//                 const currentSelectedWeight = selectedWeight[val._id];\r\n//                 const itemQuantity = itemQuantities[val._id] || 1;\r\n//                 // console.log(\"check==>\",AllText?.category&&val.category==categoryid?._id);\r\n//                 const inCart = isItemInCart(val);\r\n//                 return (\r\n//                   <div\r\n//                     key={val?._id}\r\n//                     className=\"flex items-center justify-center gap-3 mb-2\"\r\n//                   >\r\n//                     <div\r\n//                       className=\"w-full lg:w-1/2\"\r\n//                       style={{ cursor: \"pointer\" }}\r\n//                       onClick={() => scrollToTop(val)}\r\n//                     >\r\n//                       {\" \"}\r\n//                       <img\r\n//                         src={`https://majesticmall.net/product/${val?.Photos[0]?.file}`}\r\n//                         alt=\"product\"\r\n//                         onError={(e) => {\r\n//                           e.target.src = \"../img/example.jpg\"; // Replace with your default image URL\r\n//                         }}\r\n//                       />\r\n//                     </div>\r\n//                     <div className=\"w-full lg:w-1/2\">\r\n//                       <h5> {val.productname.slice(0, 20)}</h5>\r\n//                       <select\r\n//                         name=\"option[504]\"\r\n//                         id=\"input-option504\"\r\n//                         className=\"form-control1 weight resp-select-box\"\r\n//                         style={{\r\n//                           maxWidth: \"200px\",\r\n//                           fontSize: \"12px\",\r\n//                           border: \"1px solid #88ac46\",\r\n//                         }}\r\n//                         onChange={(e) => {\r\n//                           const selectedWeightData = JSON.parse(e.target.value);\r\n\r\n//                           const selectedDiscount =\r\n//                             selectedWeightData.discountType === \"discount\"\r\n//                               ? val.discount\r\n//                               : val.clubdiscount;\r\n//                           setSelectedWeight((prev) => ({\r\n//                             ...prev,\r\n//                             [val._id]: {\r\n//                               ...selectedWeightData,\r\n//                               discount: selectedDiscount,\r\n//                               discountType: selectedWeightData.discountType,\r\n//                             },\r\n//                           }));\r\n//                         }}\r\n//                         value={JSON.stringify(currentSelectedWeight)}\r\n//                       >\r\n//                         {!user?.club &&\r\n//                           val.weight?.map((e) => (\r\n//                             <option\r\n//                               key={`weight-${e.id}`}\r\n//                               style={{ fontSize: \"12px\" }}\r\n//                               value={JSON.stringify({\r\n//                                 ...e,\r\n//                                 discount: val.discount,\r\n//                                 discountType: \"discount\",\r\n//                               })}\r\n//                             >\r\n//                               {e.value} {e.units} - Rs{\" \"}\r\n//                               {(\r\n//                                 e.price -\r\n//                                 e.price * (val.discount / 100)\r\n//                               ).toFixed(2)}\r\n//                             </option>\r\n//                           ))}\r\n//                         {val.Clubweight?.map((e) => (\r\n//                           <option\r\n//                             key={`clubweight-${e.id}`}\r\n//                             value={JSON.stringify({\r\n//                               ...e,\r\n//                               discount: val.clubdiscount,\r\n//                               discountType: \"clubdiscount\",\r\n//                             })}\r\n//                             disabled={!user || user.club === false}\r\n//                             style={{\r\n//                               color:\r\n//                                 !user || user.club === false\r\n//                                   ? \"#aaa\"\r\n//                                   : \"inherit\",\r\n//                               fontSize: \"12px\",\r\n//                             }}\r\n//                           >\r\n//                             {e.value} {e.units} - Rs{\" \"}\r\n//                             {(\r\n//                               e.price -\r\n//                               e.price * (val.clubdiscount / 100)\r\n//                             ).toFixed(2)}{\" \"}\r\n//                             {!user?.club && \" (Club Members Only)\"}\r\n//                           </option>\r\n//                         ))}\r\n//                       </select>\r\n//                       {val.stock - val?.sellproduct <= 0 ? (\r\n//                         <div className=\"flex items-center justify-center\">\r\n//                           <button\r\n//                             className=\"bg-[#be343b] text-white rounded-full py-2 px-2 my-4\"\r\n//                             // style={{\r\n//                             //   color: \"red\",\r\n//                             //   paddingTop: \"27px\",\r\n//                             //   textAlign: \"center\",\r\n//                             //   fontWeight: \"500\",\r\n//                             // }}\r\n//                           >\r\n//                             Out of Stock\r\n//                           </button>\r\n//                         </div>\r\n//                       ) : (\r\n//                         <div className=\"flex flex-row items-center justify-center gap-2 lg:flex-col\">\r\n//                           <div className=\"flex items-center justify-between flex-grow mt-4\">\r\n//                             {val.subscribe === \"Subscription\" ? (\r\n//                               <button\r\n//                                 onClick={() => {\r\n//                                   !AllText?.category\r\n//                                     ? val.category == categoryid?._id\r\n//                                       ? showText\r\n//                                         ? message.error(showText)\r\n//                                         : handleAddToCart(val)\r\n//                                       : handleAddToCart(val)\r\n//                                     : handleAddToCart(val);\r\n//                                 }}\r\n//                                 // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n//                                 // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n//                                 className=\"lg:text-xs sm:text-sm font-semibold text-[#f7ab27] py-2 px-2 rounded-full truncate\"\r\n//                                 style={{\r\n//                                   backgroundColor:\r\n//                                     !AllText?.category &&\r\n//                                     val.category == categoryid?._id\r\n//                                       ? showText\r\n//                                         ? \"rgb(204 225 166)\"\r\n//                                         : \"#000\"\r\n//                                       : \"#000\",\r\n//                                   color:\r\n//                                     AllText?.category &&\r\n//                                     val.category == categoryid?._id\r\n//                                       ? \"black\"\r\n//                                       : \"#fff\",\r\n//                                 }}\r\n//                               >\r\n//                                 Buy Once\r\n//                               </button>\r\n//                             ) : (\r\n//                               <>\r\n//                                 {inCart ? (\r\n//                                   <button\r\n//                                     onClick={() => handleAddToCart(val)}\r\n//                                     className=\"font-semibold px-3 py-2 text-xs truncate text-white rounded-full bg-[#f7ab27]\"\r\n//                                     // style={{\r\n//                                     //   backgroundColor: \"#f7ab27\",\r\n//                                     //   color: \"#fff\",\r\n//                                     // }}\r\n//                                   >\r\n//                                     Update cart\r\n//                                   </button>\r\n//                                 ) : (\r\n//                                   <button\r\n//                                     onClick={() => {\r\n//                                       !AllText?.category &&\r\n//                                       val.category == categoryid?._id\r\n//                                         ? showText\r\n//                                           ? message.error(showText)\r\n//                                           : handleAddToCart(val)\r\n//                                         : handleAddToCart(val);\r\n//                                     }}\r\n//                                     // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n//                                     className=\" font-semibold px-3 py-2 text-xs text-white rounded-2xl bg-[#000]\"\r\n//                                     style={{\r\n//                                       backgroundColor:\r\n//                                         !AllText?.category &&\r\n//                                         val.category == categoryid?._id\r\n//                                           ? showText\r\n//                                             ? \"rgb(204 225 166)\"\r\n//                                             : \"#000\"\r\n//                                           : \"#000\",\r\n//                                       color:\r\n//                                         AllText?.category &&\r\n//                                         val.category == categoryid?._id\r\n//                                           ? \"black\"\r\n//                                           : \"#fff\",\r\n//                                     }}\r\n//                                   >\r\n//                                     Add to cart\r\n//                                   </button>\r\n//                                 )}\r\n//                               </>\r\n//                             )}\r\n//                           </div>\r\n//                           {val.subscribe === \"Subscription\" && (\r\n//                             <button\r\n//                               onClick={() => handleSubscribe(val)}\r\n//                               // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n//                               className=\"lg:text-xs sm:text-sm font-semibold text-[white] py-2 px-2 rounded-full  mt-4\"\r\n//                               style={{\r\n//                                 backgroundColor: \"#0c363b\",\r\n//                                 marginRight: \"10px\",\r\n//                               }}\r\n//                             >\r\n//                               Subscribe\r\n//                             </button>\r\n//                           )}\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 );\r\n//               })}\r\n//           </Card>\r\n//         </div>\r\n//         <div>\r\n//           <div\r\n//             style={{\r\n//               display: \"flex\",\r\n//               justifyContent: \"flex-end\",\r\n//               padding: \"16px\",\r\n//             }}\r\n//           >\r\n//             <div className=\"flex flex-col w-full lg:flex-row lg:justify-between lg:items-center \">\r\n//               <h6 className=\"ml-10 text-sm\">\r\n//                 <Link to=\"/\" className=\"cursor-pointer\">\r\n//                   Home\r\n//                 </Link>{\" \"}\r\n//                 &gt; <span className=\"text-gray-500\">My Shop</span>\r\n//               </h6>\r\n\r\n//               <Card\r\n//                 bordered={false}\r\n//                 className=\"flex items-center justify-between w-full ml-10 rounded-lg shadow-sm lg:ml-0\"\r\n//                 style={{ width: \"200px\" }}\r\n//               >\r\n//                 <Select\r\n//                   style={{ width: \"100%\" }}\r\n//                   value={sortOrder}\r\n//                   onChange={(value) => setSortOrder(value)}\r\n//                   className=\"text-gray-700\"\r\n//                   dropdownStyle={{ borderRadius: \"8px\" }}\r\n//                 >\r\n//                   <Select.Option value=\"asc\">A-Z</Select.Option>\r\n//                   <Select.Option value=\"desc\">Z-A</Select.Option>\r\n//                   <Select.Option value=\"price_asc\">\r\n//                     Price: Low to High\r\n//                   </Select.Option>\r\n//                   <Select.Option value=\"price_desc\">\r\n//                     Price: High to Low\r\n//                   </Select.Option>\r\n//                 </Select>\r\n//               </Card>\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"grid grid-cols-1 gap-2 mx-5 md:grid-cols-3 xl:grid-cols-3 xl:gap-x-3 xl:gap-y-0\">\r\n//             {currentItems.map((val) => {\r\n//               const currentSelectedWeight = selectedWeight[val._id];\r\n//               const itemQuantity = itemQuantities[val._id] || 1;\r\n//               // console.log(\"check==>\",AllText?.category&&val.category==categoryid?._id);\r\n//               const inCart = isItemInCart(val);\r\n//               return (\r\n//                 <Badge.Ribbon text={val.tag} color=\"#f7ab27\">\r\n//                   <div\r\n//                     key={val._id}\r\n//                     className=\"box border rounded-lg border-#f7ab27-400 mx-auto w-full  max-w-xs shadow-lg hover:shadow-xl transition-shadow duration-300 bg-white\"\r\n//                     style={{ height: \"300px\", marginBottom: \"5px\" }}\r\n//                   >\r\n//                     <div className=\"relative overflow-clip\">\r\n//                       <img\r\n//                         className=\"w-full transition-transform duration-500 ease-in-out rounded-lg shadow-lg hover:scale-105\"\r\n//                         src={`https://majesticmall.net/product/${val?.Photos[0]?.file}`}\r\n//                         loading=\"lazy\"\r\n//                         alt=\"Product\"\r\n//                         style={{\r\n//                           height: \"130px\",\r\n//                           width: \"350px\",\r\n//                           marginTop: \"10px\",\r\n//                           objectFit: \"contain\",\r\n//                           boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n//                           cursor: \"pointer\",\r\n//                         }}\r\n//                         onError={(e) => {\r\n//                           e.target.src = \"../img/example.jpg\"; // Replace with your default image URL\r\n//                         }}\r\n//                         onClick={() => scrollToTop(val)}\r\n//                       />\r\n\r\n//                       {/* <span\r\n//                   className=\"absolute px-1 py-1 text-white top-1 rounded-xl\"\r\n//                   style={{ backgroundColor: \"#ffb524\", fontSize: \"13px\" }}\r\n//                 >\r\n//                   {val.tag}\r\n//                 </span> */}\r\n//                     </div>\r\n//                     <div className=\"text-center\">\r\n//                       <h3\r\n//                         className=\"mt-4 font-semibold text-l\"\r\n//                         style={{ color: \"#45595b\", cursor: \"pointer\" }}\r\n//                         onClick={() => scrollToTop(val)}\r\n//                       >\r\n//                         {val.productname.slice(0, 20)}\r\n//                       </h3>\r\n\r\n//                       <select\r\n//                         name=\"option[504]\"\r\n//                         id=\"input-option504\"\r\n//                         className=\"form-control1 weight resp-select-box\"\r\n//                         style={{\r\n//                           maxWidth: \"200px\",\r\n//                           fontSize: \"12px\",\r\n//                           border: \"1px solid #88ac46\",\r\n//                         }}\r\n//                         onChange={(e) => {\r\n//                           const selectedWeightData = JSON.parse(e.target.value);\r\n\r\n//                           const selectedDiscount =\r\n//                             selectedWeightData.discountType === \"discount\"\r\n//                               ? val.discount\r\n//                               : val.clubdiscount;\r\n//                           setSelectedWeight((prev) => ({\r\n//                             ...prev,\r\n//                             [val._id]: {\r\n//                               ...selectedWeightData,\r\n//                               discount: selectedDiscount,\r\n//                               discountType: selectedWeightData.discountType,\r\n//                             },\r\n//                           }));\r\n//                         }}\r\n//                         value={JSON.stringify(currentSelectedWeight)}\r\n//                       >\r\n//                         {!user?.club &&\r\n//                           val.weight?.map((e) => (\r\n//                             <option\r\n//                               key={`weight-${e.id}`}\r\n//                               style={{ fontSize: \"12px\" }}\r\n//                               value={JSON.stringify({\r\n//                                 ...e,\r\n//                                 discount: val.discount,\r\n//                                 discountType: \"discount\",\r\n//                               })}\r\n//                             >\r\n//                               {e.value} {e.units} - Rs{\" \"}\r\n//                               {(\r\n//                                 e.price -\r\n//                                 e.price * (val.discount / 100)\r\n//                               ).toFixed(2)}\r\n//                             </option>\r\n//                           ))}\r\n//                         {val.Clubweight?.map((e) => (\r\n//                           <option\r\n//                             key={`clubweight-${e.id}`}\r\n//                             value={JSON.stringify({\r\n//                               ...e,\r\n//                               discount: val.clubdiscount,\r\n//                               discountType: \"clubdiscount\",\r\n//                             })}\r\n//                             disabled={!user || user.club === false}\r\n//                             style={{\r\n//                               color:\r\n//                                 !user || user.club === false\r\n//                                   ? \"#aaa\"\r\n//                                   : \"inherit\",\r\n//                               fontSize: \"12px\",\r\n//                             }}\r\n//                           >\r\n//                             {e.value} {e.units} - Rs{\" \"}\r\n//                             {(\r\n//                               e.price -\r\n//                               e.price * (val.clubdiscount / 100)\r\n//                             ).toFixed(2)}{\" \"}\r\n//                             {!user?.club && \" (Club Members Only)\"}\r\n//                           </option>\r\n//                         ))}\r\n//                       </select>\r\n//                     </div>\r\n//                     {val.stock - val?.sellproduct <= 0 ? (\r\n//                       <div className=\"flex items-center justify-center\">\r\n//                         <button\r\n//                           className=\"px-2 py-2 my-4 text-white bg-red-500 rounded-full\"\r\n//                           // style={{\r\n//                           //   color: \"red\",\r\n//                           //   paddingTop: \"27px\",\r\n//                           //   textAlign: \"center\",\r\n//                           //   fontWeight: \"500\",\r\n//                           // }}\r\n//                         >\r\n//                           Out of Stock\r\n//                         </button>\r\n//                       </div>\r\n//                     ) : (\r\n//                       <div className=\"flex items-baseline justify-between\">\r\n//                         <div className=\"flex items-center justify-between flex-grow p-3 mb-4\">\r\n//                           {val.subscribe === \"Subscription\" ? (\r\n//                             <button\r\n//                               onClick={() => {\r\n//                                 !AllText?.category\r\n//                                   ? val.category == categoryid?._id\r\n//                                     ? showText\r\n//                                       ? message.error(showText)\r\n//                                       : handleAddToCart(val)\r\n//                                     : handleAddToCart(val)\r\n//                                   : handleAddToCart(val);\r\n//                               }}\r\n//                               // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n//                               // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n//                               className=\"lg:text-xs sm:text-sm font-semibold text-[#f7ab27] py-2 px-2 rounded-full\"\r\n//                               style={{\r\n//                                 backgroundColor:\r\n//                                   !AllText?.category &&\r\n//                                   val.category == categoryid?._id\r\n//                                     ? showText\r\n//                                       ? \"rgb(204 225 166)\"\r\n//                                       : \"#000\"\r\n//                                     : \"#000\",\r\n//                                 color:\r\n//                                   AllText?.category &&\r\n//                                   val.category == categoryid?._id\r\n//                                     ? \"black\"\r\n//                                     : \"#fff\",\r\n//                               }}\r\n//                             >\r\n//                               Buy Once\r\n//                             </button>\r\n//                           ) : (\r\n//                             <>\r\n//                               <div className=\"flex items-center\">\r\n//                                 <button\r\n//                                   // className=\"px-2 py-1 text-sm font-semibold\"\r\n//                                   className=\"lg:text-lg md:text-md sm:text-sm font-semibold bg-[#ffb524] text-white rounded-full size-7 flex justify-center items-center \"\r\n//                                   style={{\r\n//                                     backgroundColor: \"#ffb524\",\r\n//                                     color: \"#fff\",\r\n//                                     borderRadius: \"50%\",\r\n//                                   }}\r\n//                                   onClick={() => {\r\n//                                     !AllText?.category\r\n//                                       ? val.category == categoryid?._id\r\n//                                         ? showText\r\n//                                           ? message.error(showText)\r\n//                                           : handleRemoveFromCart(val, 1)\r\n//                                         : handleRemoveFromCart(val, 1)\r\n//                                       : handleRemoveFromCart(val, 1);\r\n//                                   }}\r\n//                                 >\r\n//                                   -\r\n//                                 </button>\r\n//                                 <span className=\"px-3\">{itemQuantity}</span>\r\n//                                 <button\r\n//                                   // className=\"px-2 py-1 text-sm font-semibold\"\r\n//                                   className=\"lg:text-lg md:text-md sm:text-sm font-semibold bg-[#ffb524] text-white rounded-full size-7 flex justify-center items-center \"\r\n//                                   style={{\r\n//                                     backgroundColor: \"#ffb524\",\r\n//                                     color: \"#fff\",\r\n//                                     borderRadius: \"50%\",\r\n//                                   }}\r\n//                                   onClick={() => {\r\n//                                     !AllText?.category\r\n//                                       ? val.category == categoryid?._id\r\n//                                         ? showText\r\n//                                           ? message.error(showText)\r\n//                                           : handleQuantityChange(val, 1)\r\n//                                         : handleQuantityChange(val, 1)\r\n//                                       : handleQuantityChange(val, 1);\r\n//                                   }}\r\n//                                 >\r\n//                                   +\r\n//                                 </button>\r\n//                               </div>\r\n//                               {inCart ? (\r\n//                                 <button\r\n//                                   onClick={() => handleAddToCart(val)}\r\n//                                   className=\"font-semibold px-3 py-2 text-xs text-white rounded-2xl bg-[#f7ab27]\"\r\n//                                   // style={{\r\n//                                   //   backgroundColor: \"#f7ab27\",\r\n//                                   //   color: \"#fff\",\r\n//                                   // }}\r\n//                                 >\r\n//                                   Update cart\r\n//                                 </button>\r\n//                               ) : (\r\n//                                 <button\r\n//                                   onClick={() => {\r\n//                                     !AllText?.category &&\r\n//                                     val.category == categoryid?._id\r\n//                                       ? showText\r\n//                                         ? message.error(showText)\r\n//                                         : handleAddToCart(val)\r\n//                                       : handleAddToCart(val);\r\n//                                   }}\r\n//                                   // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n//                                   className=\" font-semibold px-3 py-2 text-xs text-white rounded-2xl bg-[#000]\"\r\n//                                   style={{\r\n//                                     backgroundColor:\r\n//                                       !AllText?.category &&\r\n//                                       val.category == categoryid?._id\r\n//                                         ? showText\r\n//                                           ? \"rgb(204 225 166)\"\r\n//                                           : \"#000\"\r\n//                                         : \"#000\",\r\n//                                     color:\r\n//                                       AllText?.category &&\r\n//                                       val.category == categoryid?._id\r\n//                                         ? \"black\"\r\n//                                         : \"#fff\",\r\n//                                   }}\r\n//                                 >\r\n//                                   Add to cart\r\n//                                 </button>\r\n//                               )}\r\n//                             </>\r\n//                           )}\r\n//                         </div>\r\n//                         {val.subscribe === \"Subscription\" && (\r\n//                           <button\r\n//                             onClick={() => handleSubscribe(val)}\r\n//                             // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n//                             className=\"px-3 py-2 mt-2 font-semibold text-white text-md rounded-2xl\"\r\n//                             style={{\r\n//                               backgroundColor: \"#0c363b\",\r\n//                               marginRight: \"15px\",\r\n//                             }}\r\n//                           >\r\n//                             Subscribe\r\n//                           </button>\r\n//                         )}\r\n//                       </div>\r\n//                     )}\r\n//                   </div>\r\n//                 </Badge.Ribbon>\r\n//               );\r\n//             })}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <ul className=\"flex items-center justify-center mx-2 mt-6 space-x-2 lg:mx-4 lg:space-x-2\">\r\n//         {/* Previous Button */}\r\n//         <li\r\n//           className={`px-2 py-2 lg:px-4 border border-#f7ab27-400 rounded-lg cursor-pointer ${\r\n//             currentPage === 1\r\n//               ? \"opacity-50 cursor-not-allowed\"\r\n//               : \"hover:bg-#f7ab27-200\"\r\n//           }`}\r\n//           onClick={() => handleClick(currentPage - 1)}\r\n//         >\r\n//           &#8656;\r\n//         </li>\r\n\r\n//         {/* Page Numbers */}\r\n//         {getVisiblePages().map((page, index) => (\r\n//           <li\r\n//             key={index}\r\n//             className={`py-2 px-2 lg:px-4 border border-#f7ab27-400 rounded-lg cursor-pointer ${\r\n//               currentPage === page\r\n//                 ? \"bg-[#000] text-white\"\r\n//                 : \"hover:bg-#f7ab27-200\"\r\n//             }`}\r\n//             onClick={() => handleClick(page)}\r\n//           >\r\n//             {page}\r\n//           </li>\r\n//         ))}\r\n\r\n//         {/* Next Button */}\r\n//         <li\r\n//           className={`py-2 px-2 lg:px-4 border border-#f7ab27-400 rounded-lg cursor-pointer ${\r\n//             currentPage === totalPages\r\n//               ? \"opacity-50 cursor-not-allowed\"\r\n//               : \"hover:bg-#f7ab27-200\"\r\n//           }`}\r\n//           onClick={() => handleClick(currentPage + 1)}\r\n//         >\r\n//           &#8658;\r\n//         </li>\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Shop;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { Badge, Input, Select, Slider, Menu, Breadcrumb, message } from \"antd\";\r\nimport { Card, CardContent, Typography } from \"@mui/material\";\r\nimport { Search, ChevronRight, ChevronDown } from \"lucide-react\";\r\nimport { addToCart, removeFromCart } from \"../redux/CartSlice\";\r\nimport Back from \"./common/Back\";\r\nimport NotificationBanner from \"./Notification\";\r\nimport Cookies from \"js-cookie\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nimport { addToCart1, addToCarts1, removeFromCart1 } from \"../redux/CartSlice1\";\r\nimport banner from \"./../assets/shop_banner.png\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst Shop = () => {\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const cart1 = useSelector((state) => state.cart1);\r\n  const encryptedUser = Cookies.get(\"user\");\r\n  const user = encryptedUser\r\n    ? JSON.parse(\r\n        CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n          CryptoJS.enc.Utf8\r\n        )\r\n      )\r\n    : null;\r\n\r\n  const encryptedToken = Cookies.get(\"token\");\r\n  const token = encryptedToken\r\n    ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(\r\n        CryptoJS.enc.Utf8\r\n      )\r\n    : null;\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n\r\n  let showText = Cookies.get(\"AllTextHead\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 9;\r\n  const location = useLocation();\r\n  const { title } = location?.state || \"\";\r\n  const { categoryId } = location?.state || \"\";\r\n  // console.log(title, categoryId, \"test\");\r\n\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const [subcategoryData, setSubcategoryData] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(title);\r\n  const [selectedSubCategory, setSelectedSubCategory] = useState(\"\");\r\n  const [selectedWeight, setSelectedWeight] = useState({});\r\n  const [priceRange, setPriceRange] = useState([0, 5000]);\r\n  const [sortOrder, setSortOrder] = useState(\"Sort\");\r\n\r\n  const [categoryCounts, setCategoryCounts] = useState({});\r\n  const [subcategoryCounts, setSubcategoryCounts] = useState({});\r\n  const [filteredCategories, setFilteredCategories] = useState([]);\r\n  const [filteredSubcategories, setFilteredSubcategories] = useState([]);\r\n  const [categoryMap, setCategoryMap] = useState({});\r\n  const [subCategoryMap, setSubCategoryMap] = useState({});\r\n  const [selectedCategoryId, setSelectedCategoryId] = useState(categoryId);\r\n  const [selectedSubCategoryId, setSelectedSubCategoryId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n    setSelectedCategoryId(categoryId);\r\n  }, [categoryId]);\r\n  useEffect(() => {\r\n    if (\r\n      data.length > 0 &&\r\n      categoryData.length > 0 &&\r\n      subcategoryData.length > 0\r\n    ) {\r\n      const categoriesWithProducts = categoryData.filter((category) =>\r\n        data.some((product) => product.category === category._id)\r\n      );\r\n      setFilteredCategories(categoriesWithProducts);\r\n\r\n      const subcategoriesWithProducts = subcategoryData.filter((subcategory) =>\r\n        data.some(\r\n          (product) =>\r\n            product.subcategory === subcategory._id &&\r\n            product.category === subcategory.categoryId\r\n        )\r\n      );\r\n      setFilteredSubcategories(subcategoriesWithProducts);\r\n\r\n      const catCounts = {};\r\n      const subCatCounts = {};\r\n\r\n      data.forEach((product) => {\r\n        catCounts[product.category] = (catCounts[product.category] || 0) + 1;\r\n        subCatCounts[product.subcategory] =\r\n          (subCatCounts[product.subcategory] || 0) + 1;\r\n      });\r\n\r\n      setCategoryCounts(catCounts);\r\n      setSubcategoryCounts(subCatCounts);\r\n    }\r\n  }, [data, categoryData, subcategoryData]);\r\n  useEffect(() => {\r\n    getCategories();\r\n    getSubcategories();\r\n    getProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const catCounts = {};\r\n    const subCatCounts = {};\r\n\r\n    data.forEach((product) => {\r\n      catCounts[product.category] = (catCounts[product.category] || 0) + 1;\r\n      subCatCounts[product.subcategory] =\r\n        (subCatCounts[product.subcategory] || 0) + 1;\r\n    });\r\n\r\n    setCategoryCounts(catCounts);\r\n    setSubcategoryCounts(subCatCounts);\r\n  }, [data]);\r\n\r\n  const getCategories = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://majesticmall.net/api/admin/getCategory\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        setCategoryData(\r\n          res.data?.category.filter((item) => item.status === \"Active\")\r\n        );\r\n\r\n        const categoryMapping = {};\r\n        res.data?.category\r\n          .filter((item) => item.status === \"Active\")\r\n          .forEach((cat) => {\r\n            categoryMapping[cat._id] = cat.categoryName;\r\n          });\r\n        setCategoryMap(categoryMapping);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching categories:\", error);\r\n    }\r\n  };\r\n\r\n  const getSubcategories = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"https://majesticmall.net/api/admin/getSubcategory\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        setSubcategoryData(\r\n          res.data?.Subcategory.filter((item) => item.status === \"Active\")\r\n        );\r\n\r\n        const subCategoryMapping = {};\r\n        res.data?.Subcategory.filter(\r\n          (item) => item.status === \"Active\"\r\n        ).forEach((subcat) => {\r\n          subCategoryMapping[subcat._id] = subcat.SubcategoryName;\r\n        });\r\n        setSubCategoryMap(subCategoryMapping);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching subcategories:\", error);\r\n    }\r\n  };\r\n  const [letsted, setleted] = useState([]);\r\n  const getProducts = async () => {\r\n    const res = await axios.get(\r\n      \"https://majesticmall.net/api/admin/Getproductlist\",\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.status === 200) {\r\n      const activeProducts = res.data.ProductList.filter(\r\n        (item) => item.status === \"Active\"\r\n      );\r\n      setleted(activeProducts);\r\n      setData(activeProducts);\r\n\r\n      const initialSelectedWeight = {};\r\n      activeProducts.forEach((product) => {\r\n        initialSelectedWeight[product._id] = !user?.club\r\n          ? product.weight?.[0]\r\n          : product.Clubweight?.[0];\r\n      });\r\n      setSelectedWeight(initialSelectedWeight);\r\n    }\r\n  };\r\n\r\n  const categoryid = categoryData?.find(\r\n    (ele) => ele?.categoryName == \"Fruits & Vegetables\"\r\n  );\r\n\r\n  const [itemQuantities, setItemQuantities] = useState({});\r\n\r\n  const handleQuantityChange = (item, change) => {\r\n    if (\r\n      item.stock - item?.sellproduct <= 0 ||\r\n      item.stock - item?.sellproduct < change\r\n    )\r\n      return message.error(\"Out of stock\");\r\n    setItemQuantities((prev) => ({\r\n      ...prev,\r\n      [item._id]: Math.max((prev[item._id] || 1) + change, 1),\r\n    }));\r\n  };\r\n  const [notification, setNotification] = useState({\r\n    show: false,\r\n    message: \"\",\r\n  });\r\n  // console.log(\"user?.club\",user,user?.club);\r\n  const handleAddToCart = (item) => {\r\n    if (item.stock - item?.sellproduct <= 0)\r\n      return message.error(\"Out of stock\");\r\n    if (Object.keys(item).length == 0)\r\n      return message.error(\"Product not found\");\r\n    item.weight[0].discount = item?.discount;\r\n    item.Clubweight[0].discount = item?.clubdiscount;\r\n\r\n    const weightToAdd =\r\n      selectedWeight?.[item._id] ??\r\n      (!user?.club && item?.weight?.[0]) ??\r\n      (user?.club && item?.Clubweight?.[0]) ??\r\n      null;\r\n\r\n    const quantity = itemQuantities[item._id] || 1;\r\n    // setNotification({\r\n    //   show: true,\r\n    //   message: `Success: You have added ${item.productname} to your cart!`,\r\n    // });\r\n\r\n    if (weightToAdd?.stock - quantity <= 0)\r\n      return message.error(\"Out of stock\");\r\n    message.success(\r\n      `Success: You have added ${item?.productname} to your cart!`\r\n    );\r\n    if (categoryid?._id == item?.category) {\r\n      dispatch(\r\n        addToCart1({\r\n          ...item,\r\n          selectedWeight: weightToAdd,\r\n          quantity,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addToCart({\r\n          ...item,\r\n          selectedWeight: weightToAdd,\r\n          quantity,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleRemoveFromCart = (item) => {\r\n    const weightToRemove =\r\n      selectedWeight[item._id] ||\r\n      (!user?.club ? item.weight[0] : item.Clubweight[0]);\r\n\r\n    if (categoryid?._id == item?.category) {\r\n      dispatch(\r\n        removeFromCart1({\r\n          _id: item._id,\r\n          selectedWeight: weightToRemove,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        removeFromCart({\r\n          _id: item._id,\r\n          selectedWeight: weightToRemove,\r\n        })\r\n      );\r\n    }\r\n\r\n    setItemQuantities((prev) => ({\r\n      ...prev,\r\n      [item._id]: Math.max((prev[item._id] || 0) - 1, 0),\r\n    }));\r\n  };\r\n\r\n  const handleSubscribe = (val) => {\r\n    if (!user) {\r\n      toast.info(\"Please login as a user to subscribe.\");\r\n    } else {\r\n      navigate(`/subscribe/${val._id}`, {\r\n        state: { selectedWeight: selectedWeight[val._id] },\r\n      });\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n  const getFirstPrice = (product) => {\r\n    if (!user?.club) {\r\n      const firstWeight = product.weight?.[0];\r\n      if (!firstWeight) return 0;\r\n      return firstWeight.price - firstWeight.price * (product.discount / 100);\r\n    } else {\r\n      const firstClubWeight = product.Clubweight?.[0];\r\n      if (!firstClubWeight) return 0;\r\n      return (\r\n        firstClubWeight.price -\r\n        firstClubWeight.price * (product.clubdiscount / 100)\r\n      );\r\n    }\r\n  };\r\n  const filteredItems = data.filter((product) => {\r\n    const matchesCategory =\r\n      !selectedCategoryId || product.category === selectedCategoryId;\r\n    const matchesSubCategory =\r\n      !selectedSubCategoryId || product.subcategory === selectedSubCategoryId;\r\n\r\n    const firstPrice = getFirstPrice(product);\r\n    const matchesPrice =\r\n      firstPrice >= priceRange[0] && firstPrice <= priceRange[1];\r\n\r\n    return matchesCategory && matchesSubCategory && matchesPrice;\r\n  });\r\n  const totalPages = Math.ceil(filteredItems.length / itemsPerPage);\r\n\r\n  const getVisiblePages = () => {\r\n    const maxVisible = 5;\r\n    const pages = [];\r\n\r\n    if (totalPages <= maxVisible) {\r\n      return [...Array(totalPages).keys()].map((n) => n + 1);\r\n    }\r\n\r\n    if (currentPage <= 3) {\r\n      pages.push(1, 2, 3, \"...\", totalPages);\r\n    } else if (currentPage >= totalPages - 2) {\r\n      pages.push(1, \"...\", totalPages - 2, totalPages - 1, totalPages);\r\n    } else {\r\n      pages.push(\r\n        1,\r\n        \"...\",\r\n        currentPage - 1,\r\n        currentPage,\r\n        currentPage + 1,\r\n        \"...\",\r\n        totalPages\r\n      );\r\n    }\r\n\r\n    return pages;\r\n  };\r\n\r\n  const handleClick = (pageNumber) => {\r\n    if (pageNumber !== \"...\" && pageNumber > 0 && pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n  const sortedItems = [...filteredItems].sort((a, b) => {\r\n    if (sortOrder === \"asc\") {\r\n      return a.productname.localeCompare(b.productname);\r\n    } else if (sortOrder === \"desc\") {\r\n      return b.productname.localeCompare(a.productname);\r\n    } else if (sortOrder === \"price_asc\") {\r\n      return getFirstPrice(a) - getFirstPrice(b);\r\n    } else if (sortOrder === \"price_desc\") {\r\n      return getFirstPrice(b) - getFirstPrice(a);\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  const currentItems = sortedItems.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n  const scrollToTop = (val) => {\r\n    if (categoryid?._id == val?.category) {\r\n      navigate(`/shop-detail1/${val?._id}`);\r\n    } else {\r\n      navigate(`/shop-detail/${val?._id}`);\r\n    }\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const textEncy = Cookies.get(\"AllText\");\r\n  const AllText = textEncy\r\n    ? JSON.parse(\r\n        CryptoJS.AES.decrypt(textEncy, encryptionKey).toString(\r\n          CryptoJS.enc.Utf8\r\n        )\r\n      )\r\n    : null;\r\n\r\n  // console.log(\"categoryid\", categoryid);\r\n  const isItemInCart = (item) => {\r\n    if (categoryid?._id == item?.category) {\r\n      return cart1?.items1?.some((cartItem) => cartItem._id === item._id);\r\n    } else {\r\n      return cart?.items.some((cartItem) => cartItem._id === item._id);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NotificationBanner\r\n        message={notification.message}\r\n        show={notification.show}\r\n        onClose={() => setNotification({ ...notification, show: false })}\r\n      />\r\n      {/* <section className=\"back\">\r\n        <div className=\"overlay-back\"></div>\r\n\r\n        <h1>Products</h1>\r\n        <div style={{ marginTop: \"-10px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginBottom: \"10px\",\r\n            }}\r\n          >\r\n            <div style={{ color: \"#fff\" }}>\r\n              <h2 onClick={() => navigate(\"/\")}>\r\n                Home\r\n                {selectedCategoryId && (\r\n                  <>\r\n                     {categoryMap[selectedCategoryId]}\r\n                  </>\r\n                )}\r\n                {selectedSubCategoryId && (\r\n                  <>\r\n                    {subCategoryMap[selectedSubCategoryId]}\r\n                  </>\r\n                )}\r\n              </h2>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"relative -z-10 \">\r\n          <img src={banner} alt=\"\" className=\"w-full my-3 lg:object-fit-center \" />\r\n          <div className=\"flex items-center justify-center\">\r\n            <h1 className=\"text absolute text-sm text-white w-[550px] leading-snug mt-16\">Delivery On Next Day !!! Order  today before 9PM.\r\n            </h1>\r\n          </div>\r\n        </div>\r\n      </section> */}\r\n\r\n      <div className=\"relative\">\r\n        <img\r\n          src={banner}\r\n          alt=\"\"\r\n          className=\"w-full h-auto my-3 lg:object-center \"\r\n          onError={(e) => {\r\n            e.target.src = \"../img/example.jpg\"; // Replace with your default image URL\r\n          }}\r\n        />\r\n        <div className=\"absolute inset-0 flex items-center justify-center\">\r\n          <h1 className=\"text-center lg:text-4xl text-md text-white w-[550px] leading-relaxed\">\r\n            Delivery On Next Day!!!{\" \"}\r\n            <span className=\"block\">Order today before 9PM.</span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n\r\n      <ToastContainer />\r\n      <div className=\"flex flex-col md:flex-row \">\r\n        <div className=\"w-full p-2 mt-0 mb-4 bg-white rounded-lg shadow-lg md:w-1/4 md:mb-0 lg:mt-60\">\r\n          <Card bordered={false} className=\"mb-4 \">\r\n            <CardContent>\r\n              <Typography\r\n                variant=\"h5\"\r\n                className=\"mb-4 font-bold\"\r\n                style={{ color: \"#5C870C\" }}\r\n              >\r\n                Categories\r\n              </Typography>\r\n              <Menu\r\n                mode=\"inline\"\r\n                openKeys={selectedCategoryId ? [selectedCategoryId] : []}\r\n                selectedKeys={[selectedSubCategoryId]}\r\n                className=\"border-none\"\r\n              >\r\n                {filteredCategories.map((category) => {\r\n                  const categorySubcategories = filteredSubcategories.filter(\r\n                    (sub) => sub.categoryId === category._id\r\n                  );\r\n\r\n                  if (categorySubcategories.length === 0) return null;\r\n\r\n                  return (\r\n                    <SubMenu\r\n                      key={category._id}\r\n                      title={\r\n                        <span className=\"flex items-center justify-between text-gray-600 hover:text-[#5c870c] transition-all duration-200\">\r\n                          <span className=\"flex items-center\">\r\n                            <ChevronRight\r\n                              size={16}\r\n                              className=\"mr-2 text-gray-400\"\r\n                            />\r\n                            {categoryMap[category._id]}\r\n                          </span>\r\n                          <span className=\"text-sm text-gray-400\">\r\n                            ({categoryCounts[category._id] || 0})\r\n                          </span>\r\n                        </span>\r\n                      }\r\n                      onTitleClick={() => {\r\n                        if (selectedCategoryId === category._id) {\r\n                          setSelectedCategoryId(\"\");\r\n                          setSelectedSubCategoryId(\"\");\r\n                        } else {\r\n                          setSelectedCategoryId(category._id);\r\n                          setSelectedSubCategoryId(\"\");\r\n                        }\r\n                      }}\r\n                    >\r\n                      {categorySubcategories.map((subcategory) => (\r\n                        <Menu.Item\r\n                          key={subcategory._id}\r\n                          onClick={() =>\r\n                            setSelectedSubCategoryId(subcategory._id)\r\n                          }\r\n                          className=\"text-gray-500 transition-all duration-150 hover:bg-blue-50 hover:text-blue-600\"\r\n                        >\r\n                          <span className=\"flex items-center justify-between\">\r\n                            {subCategoryMap[subcategory._id]}\r\n                            <span className=\"text-sm text-gray-400\">\r\n                              ({subcategoryCounts[subcategory._id] || 0})\r\n                            </span>\r\n                          </span>\r\n                        </Menu.Item>\r\n                      ))}\r\n                    </SubMenu>\r\n                  );\r\n                })}\r\n              </Menu>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card bordered={false} className=\"mb-4 rounded-lg shadow-sm\">\r\n            <CardContent>\r\n              <Typography\r\n                variant=\"h6\"\r\n                className=\"mb-4 font-semibold text-gray-700\"\r\n                style={{ color: \"#5C870C\" }}\r\n              >\r\n                Price Range\r\n              </Typography>\r\n              <Slider\r\n                range\r\n                min={0}\r\n                max={10000}\r\n                step={1}\r\n                value={priceRange}\r\n                onChange={(value) => setPriceRange(value)}\r\n                className=\"text-[#5c870c]\"\r\n                trackStyle={[{ backgroundColor: \"#5C870C\" }]}\r\n                handleStyle={[\r\n                  { borderColor: \"#5C870C\" },\r\n                  { borderColor: \"#5C870C\" },\r\n                ]}\r\n              />\r\n              <div className=\"flex justify-between mt-2 text-gray-600\">\r\n                <Typography>₹{priceRange[0]}</Typography>\r\n                <Typography>₹{priceRange[1]}</Typography>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* <Card bordered={false} className=\"mb-4 rounded-lg shadow-sm\">\r\n            <CardContent>\r\n              <Typography\r\n                variant=\"h6\"\r\n                className=\"mb-4 font-semibold text-gray-700\"\r\n                style={{ color: \"#5C870C\" }}\r\n              >\r\n                Banners\r\n              </Typography>\r\n              <div className=\"shop-banner\">\r\n                <Banner />\r\n              </div>\r\n\r\n            </CardContent>\r\n          </Card> */}\r\n\r\n          <Card className=\"p-2\">\r\n            <Typography\r\n              variant=\"h6\"\r\n              className=\"mb-4 font-semibold text-gray-700\"\r\n              style={{ color: \"#5C870C\" }}\r\n            >\r\n              Bestseller Products\r\n            </Typography>\r\n            <hr className=\"my-2\" />\r\n            {letsted\r\n              ?.filter((ele) => ele?.bestsellerstatus === true)\r\n              ?.slice(0, 3)\r\n              ?.map((val) => {\r\n                const currentSelectedWeight = selectedWeight[val._id];\r\n                const itemQuantity = itemQuantities[val._id] || 1;\r\n                // console.log(\"check==>\",AllText?.category&&val.category==categoryid?._id);\r\n                const inCart = isItemInCart(val);\r\n                return (\r\n                  <div\r\n                    key={val?._id}\r\n                    className=\"flex items-center justify-center gap-3 mb-2\"\r\n                  >\r\n                    <div\r\n                      className=\"w-full lg:w-1/2\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => scrollToTop(val)}\r\n                    >\r\n                      {\" \"}\r\n                      <img\r\n                        src={`https://majesticmall.net/product/${val?.Photos[0]?.file}`}\r\n                        alt=\"product\"\r\n                        onError={(e) => {\r\n                          e.target.src = \"../img/example.jpg\"; // Replace with your default image URL\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"w-full lg:w-1/2\">\r\n                      <h5> {val.productname.slice(0, 20)}</h5>\r\n                      <select\r\n                        name=\"option[504]\"\r\n                        id=\"input-option504\"\r\n                        className=\"form-control1 weight resp-select-box\"\r\n                        style={{\r\n                          maxWidth: \"200px\",\r\n                          fontSize: \"12px\",\r\n                          border: \"1px solid #88ac46\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                          const selectedWeightData = JSON.parse(e.target.value);\r\n\r\n                          const selectedDiscount =\r\n                            selectedWeightData.discountType === \"discount\"\r\n                              ? val.discount\r\n                              : val.clubdiscount;\r\n                          setSelectedWeight((prev) => ({\r\n                            ...prev,\r\n                            [val._id]: {\r\n                              ...selectedWeightData,\r\n                              discount: selectedDiscount,\r\n                              discountType: selectedWeightData.discountType,\r\n                            },\r\n                          }));\r\n                        }}\r\n                        value={JSON.stringify(currentSelectedWeight)}\r\n                      >\r\n                        {!user?.club &&\r\n                          val.weight?.map((e) => (\r\n                            <option\r\n                              key={`weight-${e.id}`}\r\n                              style={{ fontSize: \"12px\" }}\r\n                              value={JSON.stringify({\r\n                                ...e,\r\n                                discount: val.discount,\r\n                                discountType: \"discount\",\r\n                              })}\r\n                            >\r\n                              {e.value} {e.units} - Rs{\" \"}\r\n                              {(\r\n                                e.price -\r\n                                e.price * (val.discount / 100)\r\n                              ).toFixed(2)}\r\n                            </option>\r\n                          ))}\r\n                        {val.Clubweight?.map((e) => (\r\n                          <option\r\n                            key={`clubweight-${e.id}`}\r\n                            value={JSON.stringify({\r\n                              ...e,\r\n                              discount: val.clubdiscount,\r\n                              discountType: \"clubdiscount\",\r\n                            })}\r\n                            disabled={!user || user.club === false}\r\n                            style={{\r\n                              color:\r\n                                !user || user.club === false\r\n                                  ? \"#aaa\"\r\n                                  : \"inherit\",\r\n                              fontSize: \"12px\",\r\n                            }}\r\n                          >\r\n                            {e.value} {e.units} - Rs{\" \"}\r\n                            {(\r\n                              e.price -\r\n                              e.price * (val.clubdiscount / 100)\r\n                            ).toFixed(2)}{\" \"}\r\n                            {!user?.club && \" (Club Members Only)\"}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                      {val.stock - val?.sellproduct <= 0 ? (\r\n                        <div className=\"flex items-center justify-center\">\r\n                          <button\r\n                            className=\"bg-[#be343b] text-white rounded-full py-2 px-2 my-4\"\r\n                            // style={{\r\n                            //   color: \"red\",\r\n                            //   paddingTop: \"27px\",\r\n                            //   textAlign: \"center\",\r\n                            //   fontWeight: \"500\",\r\n                            // }}\r\n                          >\r\n                            Out of Stock\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className=\"flex flex-row items-center justify-center gap-2 lg:flex-col\">\r\n                          <div className=\"flex items-center justify-between flex-grow mt-4\">\r\n                            {val.subscribe === \"Subscription\" ? (\r\n                              <button\r\n                                onClick={() => {\r\n                                  !AllText?.category\r\n                                    ? val.category == categoryid?._id\r\n                                      ? showText\r\n                                        ? message.error(showText)\r\n                                        : handleAddToCart(val)\r\n                                      : handleAddToCart(val)\r\n                                    : handleAddToCart(val);\r\n                                }}\r\n                                // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n                                // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n                                className=\"lg:text-xs sm:text-sm font-semibold text-[orange] py-2 px-2 rounded-full truncate\"\r\n                                style={{\r\n                                  backgroundColor:\r\n                                    !AllText?.category &&\r\n                                    val.category == categoryid?._id\r\n                                      ? showText\r\n                                        ? \"rgb(204 225 166)\"\r\n                                        : \"#5C870C\"\r\n                                      : \"#5C870C\",\r\n                                  color:\r\n                                    AllText?.category &&\r\n                                    val.category == categoryid?._id\r\n                                      ? \"black\"\r\n                                      : \"#fff\",\r\n                                }}\r\n                              >\r\n                                Buy Once\r\n                              </button>\r\n                            ) : (\r\n                              <>\r\n                                {inCart ? (\r\n                                  <button\r\n                                    onClick={() => handleAddToCart(val)}\r\n                                    className=\"font-semibold px-3 py-2 text-xs truncate text-white rounded-full bg-[orange]\"\r\n                                    // style={{\r\n                                    //   backgroundColor: \"orange\",\r\n                                    //   color: \"#fff\",\r\n                                    // }}\r\n                                  >\r\n                                    Update cart\r\n                                  </button>\r\n                                ) : (\r\n                                  <button\r\n                                    onClick={() => {\r\n                                      !AllText?.category &&\r\n                                      val.category == categoryid?._id\r\n                                        ? showText\r\n                                          ? message.error(showText)\r\n                                          : handleAddToCart(val)\r\n                                        : handleAddToCart(val);\r\n                                    }}\r\n                                    // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n                                    className=\" font-semibold px-3 py-2 text-xs text-white rounded-2xl bg-[#5C870C]\"\r\n                                    style={{\r\n                                      backgroundColor:\r\n                                        !AllText?.category &&\r\n                                        val.category == categoryid?._id\r\n                                          ? showText\r\n                                            ? \"rgb(204 225 166)\"\r\n                                            : \"#5C870C\"\r\n                                          : \"#5C870C\",\r\n                                      color:\r\n                                        AllText?.category &&\r\n                                        val.category == categoryid?._id\r\n                                          ? \"black\"\r\n                                          : \"#fff\",\r\n                                    }}\r\n                                  >\r\n                                    Add to cart\r\n                                  </button>\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                          {val.subscribe === \"Subscription\" && (\r\n                            <button\r\n                              onClick={() => handleSubscribe(val)}\r\n                              // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n                              className=\"lg:text-xs sm:text-sm font-semibold text-[white] py-2 px-2 rounded-full  mt-4\"\r\n                              style={{\r\n                                backgroundColor: \"#0c363b\",\r\n                                marginRight: \"10px\",\r\n                              }}\r\n                            >\r\n                              Subscribe\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </Card>\r\n        </div>\r\n        <div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              padding: \"16px\",\r\n            }}\r\n          >\r\n            <div className=\"flex flex-col w-full lg:flex-row lg:justify-between lg:items-center \">\r\n              <h6 className=\"ml-10 text-sm\">\r\n                <Link to=\"/\" className=\"cursor-pointer\">\r\n                  Home\r\n                </Link>{\" \"}\r\n                &gt; <span className=\"text-gray-500\">My Shop</span>\r\n              </h6>\r\n\r\n              <Card\r\n                bordered={false}\r\n                className=\"flex items-center justify-between w-full ml-10 rounded-lg shadow-sm lg:ml-0\"\r\n                style={{ width: \"200px\" }}\r\n              >\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  value={sortOrder}\r\n                  onChange={(value) => setSortOrder(value)}\r\n                  className=\"text-gray-700\"\r\n                  dropdownStyle={{ borderRadius: \"8px\" }}\r\n                >\r\n                  <Select.Option value=\"asc\">A-Z</Select.Option>\r\n                  <Select.Option value=\"desc\">Z-A</Select.Option>\r\n                  <Select.Option value=\"price_asc\">\r\n                    Price: Low to High\r\n                  </Select.Option>\r\n                  <Select.Option value=\"price_desc\">\r\n                    Price: High to Low\r\n                  </Select.Option>\r\n                </Select>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 gap-2 mx-5 md:grid-cols-3 xl:grid-cols-3 xl:gap-x-3 xl:gap-y-0\">\r\n            {currentItems.map((val) => {\r\n              const currentSelectedWeight = selectedWeight[val._id];\r\n              const itemQuantity = itemQuantities[val._id] || 1;\r\n              // console.log(\"check==>\",AllText?.category&&val.category==categoryid?._id);\r\n              const inCart = isItemInCart(val);\r\n              return (\r\n                <Badge.Ribbon text={val.tag} color=\"orange\">\r\n                  <div\r\n                    key={val._id}\r\n                    className=\"w-full max-w-xs mx-auto transition-shadow duration-300 bg-white border border-orange-400 rounded-lg shadow-lg box hover:shadow-xl\"\r\n                    style={{ height: \"300px\", marginBottom: \"5px\" }}\r\n                  >\r\n                    <div className=\"relative overflow-clip\">\r\n                      <img\r\n                        className=\"w-full transition-transform duration-500 ease-in-out rounded-lg shadow-lg hover:scale-105\"\r\n                        src={`https://majesticmall.net/product/${val?.Photos[0]?.file}`}\r\n                        loading=\"lazy\"\r\n                        alt=\"Product\"\r\n                        style={{\r\n                          height: \"130px\",\r\n                          width: \"350px\",\r\n                          marginTop: \"10px\",\r\n                          objectFit: \"contain\",\r\n                          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                        onError={(e) => {\r\n                          e.target.src = \"../img/example.jpg\"; // Replace with your default image URL\r\n                        }}\r\n                        onClick={() => scrollToTop(val)}\r\n                      />\r\n\r\n                      {/* <span\r\n                  className=\"absolute px-1 py-1 text-white top-1 rounded-xl\"\r\n                  style={{ backgroundColor: \"#ffb524\", fontSize: \"13px\" }}\r\n                >\r\n                  {val.tag}\r\n                </span> */}\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                      <h3\r\n                        className=\"mt-4 font-semibold text-l\"\r\n                        style={{ color: \"#45595b\", cursor: \"pointer\" }}\r\n                        onClick={() => scrollToTop(val)}\r\n                      >\r\n                        {val.productname.slice(0, 20)}\r\n                      </h3>\r\n\r\n                      <select\r\n                        name=\"option[504]\"\r\n                        id=\"input-option504\"\r\n                        className=\"form-control1 weight resp-select-box\"\r\n                        style={{\r\n                          maxWidth: \"200px\",\r\n                          fontSize: \"12px\",\r\n                          border: \"1px solid #88ac46\",\r\n                        }}\r\n                        onChange={(e) => {\r\n                          const selectedWeightData = JSON.parse(e.target.value);\r\n\r\n                          const selectedDiscount =\r\n                            selectedWeightData.discountType === \"discount\"\r\n                              ? val.discount\r\n                              : val.clubdiscount;\r\n                          setSelectedWeight((prev) => ({\r\n                            ...prev,\r\n                            [val._id]: {\r\n                              ...selectedWeightData,\r\n                              discount: selectedDiscount,\r\n                              discountType: selectedWeightData.discountType,\r\n                            },\r\n                          }));\r\n                        }}\r\n                        value={JSON.stringify(currentSelectedWeight)}\r\n                      >\r\n                        {!user?.club &&\r\n                          val.weight?.map((e) => (\r\n                            <option\r\n                              key={`weight-${e.id}`}\r\n                              style={{ fontSize: \"12px\" }}\r\n                              value={JSON.stringify({\r\n                                ...e,\r\n                                discount: val.discount,\r\n                                discountType: \"discount\",\r\n                              })}\r\n                            >\r\n                              {e.value} {e.units} - Rs{\" \"}\r\n                              {(\r\n                                e.price -\r\n                                e.price * (val.discount / 100)\r\n                              ).toFixed(2)}\r\n                            </option>\r\n                          ))}\r\n                        {val.Clubweight?.map((e) => (\r\n                          <option\r\n                            key={`clubweight-${e.id}`}\r\n                            value={JSON.stringify({\r\n                              ...e,\r\n                              discount: val.clubdiscount,\r\n                              discountType: \"clubdiscount\",\r\n                            })}\r\n                            disabled={!user || user.club === false}\r\n                            style={{\r\n                              color:\r\n                                !user || user.club === false\r\n                                  ? \"#aaa\"\r\n                                  : \"inherit\",\r\n                              fontSize: \"12px\",\r\n                            }}\r\n                          >\r\n                            {e.value} {e.units} - Rs{\" \"}\r\n                            {(\r\n                              e.price -\r\n                              e.price * (val.clubdiscount / 100)\r\n                            ).toFixed(2)}{\" \"}\r\n                            {!user?.club && \" (Club Members Only)\"}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    {val.stock - val?.sellproduct <= 0 ? (\r\n                      <div className=\"flex items-center justify-center\">\r\n                        <button\r\n                          className=\"px-2 py-2 my-4 text-white bg-red-500 rounded-full\"\r\n                          // style={{\r\n                          //   color: \"red\",\r\n                          //   paddingTop: \"27px\",\r\n                          //   textAlign: \"center\",\r\n                          //   fontWeight: \"500\",\r\n                          // }}\r\n                        >\r\n                          Out of Stock\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"flex items-baseline justify-between\">\r\n                        <div className=\"flex items-center justify-between flex-grow p-3 mb-4\">\r\n                          {val.subscribe === \"Subscription\" ? (\r\n                            <button\r\n                              onClick={() => {\r\n                                !AllText?.category\r\n                                  ? val.category == categoryid?._id\r\n                                    ? showText\r\n                                      ? message.error(showText)\r\n                                      : handleAddToCart(val)\r\n                                    : handleAddToCart(val)\r\n                                  : handleAddToCart(val);\r\n                              }}\r\n                              // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n                              // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n                              className=\"lg:text-xs sm:text-sm font-semibold text-[orange] py-2 px-2 rounded-full\"\r\n                              style={{\r\n                                backgroundColor:\r\n                                  !AllText?.category &&\r\n                                  val.category == categoryid?._id\r\n                                    ? showText\r\n                                      ? \"rgb(204 225 166)\"\r\n                                      : \"#5C870C\"\r\n                                    : \"#5C870C\",\r\n                                color:\r\n                                  AllText?.category &&\r\n                                  val.category == categoryid?._id\r\n                                    ? \"black\"\r\n                                    : \"#fff\",\r\n                              }}\r\n                            >\r\n                              Buy Once\r\n                            </button>\r\n                          ) : (\r\n                            <>\r\n                              <div className=\"flex items-center\">\r\n                                <button\r\n                                  // className=\"px-2 py-1 text-sm font-semibold\"\r\n                                  className=\"lg:text-lg md:text-md sm:text-sm font-semibold bg-[#ffb524] text-white rounded-full size-7 flex justify-center items-center \"\r\n                                  style={{\r\n                                    backgroundColor: \"#ffb524\",\r\n                                    color: \"#fff\",\r\n                                    borderRadius: \"50%\",\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    !AllText?.category\r\n                                      ? val.category == categoryid?._id\r\n                                        ? showText\r\n                                          ? message.error(showText)\r\n                                          : handleRemoveFromCart(val, 1)\r\n                                        : handleRemoveFromCart(val, 1)\r\n                                      : handleRemoveFromCart(val, 1);\r\n                                  }}\r\n                                >\r\n                                  -\r\n                                </button>\r\n                                <span className=\"px-3\">{itemQuantity}</span>\r\n                                <button\r\n                                  // className=\"px-2 py-1 text-sm font-semibold\"\r\n                                  className=\"lg:text-lg md:text-md sm:text-sm font-semibold bg-[#ffb524] text-white rounded-full size-7 flex justify-center items-center \"\r\n                                  style={{\r\n                                    backgroundColor: \"#ffb524\",\r\n                                    color: \"#fff\",\r\n                                    borderRadius: \"50%\",\r\n                                  }}\r\n                                  onClick={() => {\r\n                                    !AllText?.category\r\n                                      ? val.category == categoryid?._id\r\n                                        ? showText\r\n                                          ? message.error(showText)\r\n                                          : handleQuantityChange(val, 1)\r\n                                        : handleQuantityChange(val, 1)\r\n                                      : handleQuantityChange(val, 1);\r\n                                  }}\r\n                                >\r\n                                  +\r\n                                </button>\r\n                              </div>\r\n                              {inCart ? (\r\n                                <button\r\n                                  onClick={() => handleAddToCart(val)}\r\n                                  className=\"font-semibold px-3 py-2 text-xs text-white rounded-2xl bg-[orange]\"\r\n                                  // style={{\r\n                                  //   backgroundColor: \"orange\",\r\n                                  //   color: \"#fff\",\r\n                                  // }}\r\n                                >\r\n                                  Update cart\r\n                                </button>\r\n                              ) : (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    !AllText?.category &&\r\n                                    val.category == categoryid?._id\r\n                                      ? showText\r\n                                        ? message.error(showText)\r\n                                        : handleAddToCart(val)\r\n                                      : handleAddToCart(val);\r\n                                  }}\r\n                                  // disabled={!AllText?.category&&val.category==categoryid?._id}\r\n                                  className=\" font-semibold px-3 py-2 text-xs text-white rounded-2xl bg-[#5C870C]\"\r\n                                  style={{\r\n                                    backgroundColor:\r\n                                      !AllText?.category &&\r\n                                      val.category == categoryid?._id\r\n                                        ? showText\r\n                                          ? \"rgb(204 225 166)\"\r\n                                          : \"#5C870C\"\r\n                                        : \"#5C870C\",\r\n                                    color:\r\n                                      AllText?.category &&\r\n                                      val.category == categoryid?._id\r\n                                        ? \"black\"\r\n                                        : \"#fff\",\r\n                                  }}\r\n                                >\r\n                                  Add to cart\r\n                                </button>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        {val.subscribe === \"Subscription\" && (\r\n                          <button\r\n                            onClick={() => handleSubscribe(val)}\r\n                            // className=\"px-3 py-1 text-xs font-semibold text-white rounded-2xl\"\r\n                            className=\"px-3 py-2 mt-2 font-semibold text-white text-md rounded-2xl\"\r\n                            style={{\r\n                              backgroundColor: \"#0c363b\",\r\n                              marginRight: \"15px\",\r\n                            }}\r\n                          >\r\n                            Subscribe\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Badge.Ribbon>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ul className=\"flex items-center justify-center mx-2 mt-6 space-x-2 lg:mx-4 lg:space-x-2\">\r\n        {/* Previous Button */}\r\n        <li\r\n          className={`px-2 py-2 lg:px-4 border border-orange-400 rounded-lg cursor-pointer ${\r\n            currentPage === 1\r\n              ? \"opacity-50 cursor-not-allowed\"\r\n              : \"hover:bg-orange-200\"\r\n          }`}\r\n          onClick={() => handleClick(currentPage - 1)}\r\n        >\r\n          &#8656;\r\n        </li>\r\n\r\n        {/* Page Numbers */}\r\n        {getVisiblePages().map((page, index) => (\r\n          <li\r\n            key={index}\r\n            className={`py-2 px-2 lg:px-4 border border-orange-400 rounded-lg cursor-pointer ${\r\n              currentPage === page\r\n                ? \"bg-[#5c870c] text-white\"\r\n                : \"hover:bg-orange-200\"\r\n            }`}\r\n            onClick={() => handleClick(page)}\r\n          >\r\n            {page}\r\n          </li>\r\n        ))}\r\n\r\n        {/* Next Button */}\r\n        <li\r\n          className={`py-2 px-2 lg:px-4 border border-orange-400 rounded-lg cursor-pointer ${\r\n            currentPage === totalPages\r\n              ? \"opacity-50 cursor-not-allowed\"\r\n              : \"hover:bg-orange-200\"\r\n          }`}\r\n          onClick={() => handleClick(currentPage + 1)}\r\n        >\r\n          &#8658;\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst Back = ({title}) => {\r\n    const location = useLocation();\r\n    return (\r\n        <>\r\n            <section className=\"back\">\r\n                <div className=\"overlay-back\"></div>\r\n                <h1>{title}</h1>\r\n                <h2><Link to='/'>Home </Link>/ {location.pathname.split('/')[1]}</h2>\r\n            </section>\r\n            <div style={{margin:\"3%\"}}></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Back\r\n"],"names":["_ref","message","show","onClose","useEffect","timer","setTimeout","clearTimeout","_jsx","className","children","SubMenu","Menu","Shop","_letsted$filter","_letsted$filter$slice","encryptionKey","process","dispatch","useDispatch","cart","useSelector","state","cart1","encryptedUser","Cookies","get","user","JSON","parse","CryptoJS","decrypt","toString","Utf8","encryptedToken","token","navigate","useNavigate","data","setData","useState","showText","currentPage","setCurrentPage","location","useLocation","title","categoryId","categoryData","setCategoryData","subcategoryData","setSubcategoryData","selectedCategory","setSelectedCategory","selectedSubCategory","setSelectedSubCategory","selectedWeight","setSelectedWeight","priceRange","setPriceRange","sortOrder","setSortOrder","categoryCounts","setCategoryCounts","subcategoryCounts","setSubcategoryCounts","filteredCategories","setFilteredCategories","filteredSubcategories","setFilteredSubcategories","categoryMap","setCategoryMap","subCategoryMap","setSubCategoryMap","selectedCategoryId","setSelectedCategoryId","selectedSubCategoryId","setSelectedSubCategoryId","window","scrollTo","top","behavior","length","categoriesWithProducts","filter","category","some","product","_id","subcategoriesWithProducts","subcategory","catCounts","subCatCounts","forEach","getCategories","getSubcategories","getProducts","async","res","axios","headers","Authorization","status","_res$data","_res$data2","item","categoryMapping","cat","categoryName","error","console","_res$data3","_res$data4","Subcategory","subCategoryMapping","subcat","SubcategoryName","letsted","setleted","activeProducts","ProductList","initialSelectedWeight","_product$weight","_product$Clubweight","club","Clubweight","weight","categoryid","find","ele","itemQuantities","setItemQuantities","handleQuantityChange","change","stock","sellproduct","prev","Math","max","notification","setNotification","handleAddToCart","_ref2","_selectedWeight$item$","_item$weight","_item$Clubweight","Object","keys","discount","clubdiscount","weightToAdd","quantity","success","productname","addToCart1","addToCart","handleRemoveFromCart","weightToRemove","removeFromCart1","removeFromCart","handleSubscribe","val","toast","info","getFirstPrice","_product$Clubweight2","firstClubWeight","price","_product$weight2","firstWeight","filteredItems","matchesCategory","matchesSubCategory","firstPrice","matchesPrice","totalPages","ceil","handleClick","pageNumber","currentItems","sort","a","b","localeCompare","slice","scrollToTop","textEncy","AllText","isItemInCart","_cart1$items","items1","cartItem","items","_jsxs","NotificationBanner","src","banner","alt","onError","e","target","ToastContainer","Card","bordered","CardContent","Typography","variant","style","color","mode","openKeys","selectedKeys","map","categorySubcategories","sub","ChevronRight","size","onTitleClick","Item","onClick","Slider","range","min","step","value","onChange","trackStyle","backgroundColor","handleStyle","borderColor","bestsellerstatus","_val$Photos$","_val$weight","_val$Clubweight","currentSelectedWeight","inCart","cursor","Photos","file","name","id","maxWidth","fontSize","border","selectedWeightData","selectedDiscount","discountType","stringify","units","toFixed","disabled","subscribe","_Fragment","marginRight","display","justifyContent","padding","Link","to","width","Select","dropdownStyle","borderRadius","Option","_val$Photos$2","_val$weight2","_val$Clubweight2","itemQuantity","Badge","Ribbon","text","tag","height","marginBottom","loading","marginTop","objectFit","boxShadow","getVisiblePages","pages","Array","n","push","page","index","pathname","split","margin"],"sourceRoot":""}
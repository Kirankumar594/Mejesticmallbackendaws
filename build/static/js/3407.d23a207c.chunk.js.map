{"version":3,"file":"static/js/3407.d23a207c.chunk.js","mappings":"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","sources":["components/Checkout.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { clearCart } from \"../redux/CartSlice\";\r\nimport { clearCart1 } from \"../redux/CartSlice1\";\r\nimport { RiDeleteBack2Line } from \"react-icons/ri\";\r\nimport {\r\n  FaShippingFast,\r\n  FaCreditCard,\r\n  FaPercent,\r\n  FaComment,\r\n  FaCheckCircle,\r\n  FaClipboard,\r\n  FaRegCopy,\r\n} from \"react-icons/fa\";\r\nimport { MdMyLocation } from \"react-icons/md\";\r\nimport { LoadScript, Autocomplete } from \"@react-google-maps/api\";\r\n\r\nimport { AiFillCheckCircle } from \"react-icons/ai\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Cookies from \"js-cookie\";\r\nimport CryptoJS from \"crypto-js\";\r\nconst GOOGLE_API_KEY = process.env.REACT_APP_GOOGLE_API_KEY; // Replace with your Google Maps API key\r\n\r\nconst Checkout = () => {\r\n  const dispatch = useDispatch();\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 2,\r\n    slidesToScroll: 2,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n    responsive: [\r\n      { breakpoint: 768, settings: { slidesToShow: 1, slidesToScroll: 1 } },\r\n    ],\r\n  };\r\n\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const encryptedToken = Cookies.get(\"token\");\r\n  const token = encryptedToken\r\n    ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(\r\n        CryptoJS.enc.Utf8\r\n      )\r\n    : null;\r\n\r\n  const [shipToDifferentAddress, setShipToDifferentAddress] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState(\"\");\r\n  const [paymentMethod, setPaymentMethod] = useState(\"\");\r\n  const [addresses, setAddresses] = useState([]);\r\n  const [newAddress, setNewAddress] = useState({\r\n    fullName: \"\",\r\n    street: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    pincode: \"\",\r\n    number: \"\",\r\n    anumber: \"\",\r\n    email: \"\",\r\n  });\r\n  const [autocomplete, setAutocomplete] = useState(null);\r\n  const handlePlaceSelect = () => {\r\n    if (!autocomplete) return;\r\n\r\n    const place = autocomplete.getPlace();\r\n    if (!place.geometry || !place.address_components) return;\r\n\r\n    const addressComponents = place.address_components;\r\n\r\n    let street = place?.name;\r\n    let city = \"\";\r\n    let state = \"\";\r\n    let country = \"\";\r\n    let pincode = \"\";\r\n    let lat = place.geometry.location.lat();\r\n    let lng = place.geometry.location.lng();\r\n\r\n    // Extract address components\r\n    addressComponents.forEach((component) => {\r\n      const types = component.types;\r\n\r\n      if (types.includes(\"locality\")) {\r\n        city = component.long_name;\r\n      }\r\n      if (types.includes(\"administrative_area_level_1\")) {\r\n        state = component.short_name;\r\n      }\r\n      if (types.includes(\"country\")) {\r\n        country = component.long_name;\r\n      }\r\n      if (types.includes(\"postal_code\")) {\r\n        pincode = component.long_name;\r\n      }\r\n    });\r\n\r\n    // Update state with extracted data\r\n    setNewAddress({\r\n      ...newAddress,\r\n      street,\r\n      city,\r\n      state,\r\n      country,\r\n      pincode,\r\n      lat,\r\n      lng,\r\n    });\r\n  };\r\n\r\n  const getAddressFromCoordinates = (lat, lng) => {\r\n    fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${GOOGLE_API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.status === \"OK\" && data.results.length > 0) {\r\n          const place = data.results[0];\r\n          const components = place.address_components;\r\n\r\n          let street = place?.formatted_address || \"\";\r\n          let city = \"\";\r\n          let state = \"\";\r\n          let country = \"\";\r\n          let pincode = \"\";\r\n\r\n          components.forEach((component) => {\r\n            const types = component.types;\r\n            if (types.includes(\"locality\")) city = component.long_name;\r\n            if (types.includes(\"administrative_area_level_1\"))\r\n              state = component.long_name;\r\n            if (types.includes(\"country\")) country = component.long_name;\r\n            if (types.includes(\"postal_code\")) pincode = component.long_name;\r\n          });\r\n\r\n          setNewAddress({\r\n            ...newAddress,\r\n            street,\r\n            city,\r\n            state,\r\n            country,\r\n            pincode,\r\n            lat,\r\n            lng,\r\n          });\r\n        } else {\r\n          toast.info(\"Unable to fetch address details.\");\r\n        }\r\n      })\r\n      .catch(() => toast.info(\"Failed to fetch address\"));\r\n  };\r\n\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          getAddressFromCoordinates(latitude, longitude);\r\n        },\r\n        (err) => toast.info(err.message)\r\n      );\r\n    } else {\r\n      toast.info(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  };\r\n\r\n  const [coupon, setCoupon] = useState(\"\");\r\n  const [couponDiscount, setCouponDiscount] = useState(0);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const [additionalInstructions, setAdditionalInstructions] = useState(\"\");\r\n  const encryptedUser = Cookies.get(\"user\");\r\n  const user = encryptedUser\r\n    ? JSON.parse(\r\n        CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n          CryptoJS.enc.Utf8\r\n        )\r\n      )\r\n    : null;\r\n\r\n  const items = useSelector((state) => state.cart.items);\r\n  const items1 = useSelector((state) => state.cart1.items1);\r\n  const subtotal = useSelector((state) => state.cart.subtotal);\r\n  const location = useLocation();\r\n  const { orderType, deliveryCharge, minKm, perkmprice, minAmount } =\r\n    location.state || {};\r\n\r\n  const total = useSelector((state) => state.cart.total);\r\n  const subtotal1 = useSelector((state) => state.cart1.subtotal1);\r\n  const total1 = useSelector((state) => state.cart1.total1);\r\n  const [AllCupons, setAllCoupons] = useState([]);\r\n  const getAllCupons = async () => {\r\n    try {\r\n      let res = await axios.get(\r\n        `https://majesticmall.net/api/admin/getavailablecoupons`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        setAllCoupons(res.data.availableCoupons);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const openship = () => {\r\n    setShipToDifferentAddress(!shipToDifferentAddress);\r\n    setSelectedAddress(\"\");\r\n  };\r\n\r\n  const getAddresses = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `https://majesticmall.net/api/user/address/${user._id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        setAddresses(res.data.success);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching addresses:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddressChange = (e) => {\r\n    setSelectedAddress(JSON.parse(e.target.value));\r\n    setShipToDifferentAddress(false);\r\n    // calculateDistance(\r\n    //   `${\r\n    //     selectedAddress.address1\r\n    //       ? selectedAddress.address1\r\n    //       : selectedAddress.street\r\n    //   } ${\r\n    //     selectedAddress.address2\r\n    //       ? selectedAddress.address2\r\n    //       : selectedAddress.city\r\n    //   } ${selectedAddress.state} ${selectedAddress.pincode}`\r\n    // );\r\n  };\r\n\r\n  const handleNewAddressChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewAddress({ ...newAddress, [name]: value });\r\n    if (name === \"fullName\") {\r\n      if (!/^[a-zA-Z]*$/.test(value)) {\r\n        // console.log(\"Invalid name: Only alphabets are allowed\");\r\n        return;\r\n      }\r\n      if (value.length < 3) {\r\n        // console.log(\"Invalid name: Minimum 3 characters\");\r\n        return;\r\n      }\r\n    }\r\n    if (name === \"city\") {\r\n      if (!/^[a-zA-Z]*$/.test(value)) {\r\n        // console.log(\"Invalid city: Only alphabets are allowed\");\r\n        return;\r\n      }\r\n      if (value.length < 3) {\r\n        // console.log(\"Invalid city: Minimum 3 characters\");\r\n        return;\r\n      }\r\n    }\r\n    if (name === \"street\" && value.length < 3) {\r\n      // console.log(\"Invalid street: Minimum 3 characters\");\r\n      return;\r\n    }\r\n    if (name === \"state\") {\r\n      if (!/^[a-zA-Z]*$/.test(value)) {\r\n        // console.log(\"Invalid state: Only alphabets are allowed\");\r\n        return;\r\n      }\r\n      if (value.length < 3) {\r\n        // console.log(\"Invalid state: Minimum 3 characters\");\r\n        return;\r\n      }\r\n    }\r\n    if (name === \"country\") {\r\n      if (!/^[a-zA-Z]*$/.test(value)) {\r\n        // console.log(\"Invalid country: Only alphabets are allowed\");\r\n        return;\r\n      }\r\n      if (value.length < 3) {\r\n        // console.log(\"Invalid country: Minimum 3 characters\");\r\n        return;\r\n      }\r\n    }\r\n    if (name === \"pincode\" && (!/^\\d*$/.test(value) || value.length > 6)) {\r\n      // console.log(\"Invalid pincode: Must be a number with max 6 digits\");\r\n      return;\r\n    }\r\n    if (name === \"number\" && (!/^\\d*$/.test(value) || value.length > 10)) {\r\n      // console.log(\"Invalid mobile: Must be a number with max 10 digits\");\r\n      return;\r\n    }\r\n    if (name === \"anumber\" && (!/^\\d*$/.test(value) || value.length > 10)) {\r\n      // console.log(\"Invalid mobile: Must be a number with max 10 digits\");\r\n      return;\r\n    }\r\n  };\r\n\r\n  const addAddress = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://majesticmall.net/api/user/addaddress\",\r\n        {\r\n          userId: user._id,\r\n          ...newAddress,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        toast.info(\"Address added successfully\");\r\n        getAddresses();\r\n        setNewAddress({\r\n          fullName: \"\",\r\n          street: \"\",\r\n          city: \"\",\r\n          state: \"\",\r\n          country: \"\",\r\n          pincode: \"\",\r\n          number: \"\",\r\n          anumber: \"\",\r\n          email: \"\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast.info(error.response?.data?.error || \"Error adding address\");\r\n    }\r\n  };\r\n\r\n  const deleteAddress = async (id) => {\r\n    try {\r\n      const res = await axios.delete(\r\n        `https://majesticmall.net/api/user/deleteaddress/${id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        toast.info(\"Address deleted successfully\");\r\n        getAddresses();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting address:\", error);\r\n    }\r\n  };\r\n\r\n  const applyCoupon = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://majesticmall.net/api/admin/checkpromocode\",\r\n        {\r\n          promocode: coupon,\r\n          userId: user._id,\r\n          userName: user?.name,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        setCouponDiscount(res.data.discount);\r\n        toast.success(\"Successfully Coupon applied\");\r\n      }\r\n    } catch (error) {\r\n      toast.info(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const totalDiscount = (orderType !== \"scheduled\" ? items : items1).reduce(\r\n    (total, item) => {\r\n      // Calculate the discount for the current item\r\n      const discount =\r\n        (item.selectedWeight?.price * item?.quantity || 0) *\r\n        ((item.selectedWeight?.discount ?? item?.discount ?? 0) / 100);\r\n\r\n      return total + discount; // Accumulate the total discount\r\n    },\r\n    0 // Initial total discount is 0\r\n  );\r\n\r\n  //   function calculatDisAmount(\r\n  //     minKm,\r\n  //     perKmPrice,\r\n  //     minAmount,\r\n  //     distance,\r\n  //     totalAmount\r\n  //   ) {\r\n  //     // Condition 1: If minAmount is less than totalAmount and minKm is less than distance\r\n  //     if (!distance) return 0;\r\n\r\n  //     // distance = parseFloat(distance.match(/[\\d.]+/)[0]);\r\n  //      // Extract numeric value from the distance string\r\n  //      let numericDistance = parseFloat(distance.match(/[\\d.]+/)[0]);\r\n\r\n  //      // Determine unit (meters or kilometers)\r\n  //      let unit = distance.includes('km') ? 'km' : 'm';\r\n\r\n  //      // Convert meters to kilometers if necessary\r\n  //      if (unit === 'm') {\r\n  //          numericDistance /= 1000; // Convert meters to kilometers\r\n  //      }\r\n\r\n  //     if (minAmount < totalAmount && minKm > numericDistance) {\r\n  //       return 0;\r\n  //     }\r\n\r\n  //     // Condition 2: If distance is greater than minKm, return distance * perKmPrice\r\n  //     if (numericDistance > minKm) {\r\n  //       return distance * perKmPrice;\r\n  //     }\r\n  // console.log(\"numericDistance\",numericDistance)\r\n  //     // Default: Return perKmPrice * distance\r\n  //     return perKmPrice * numericDistance;\r\n  //   }\r\n  function calculatDisAmount(\r\n    minKm,\r\n    perKmPrice,\r\n    minAmount,\r\n    distance,\r\n    totalAmount\r\n  ) {\r\n    // Check if distance is provided\r\n    if (!distance) return 0;\r\n\r\n    // Extract numeric value from the distance string\r\n    let numericDistance = parseFloat(distance.match(/[\\d.]+/)[0]);\r\n\r\n    // Determine unit (meters or kilometers)\r\n    let unit = distance.includes(\"km\") ? \"km\" : \"m\";\r\n\r\n    // Convert meters to kilometers if necessary\r\n    if (unit === \"m\") {\r\n      numericDistance /= 1000; // Convert meters to kilometers\r\n    }\r\n\r\n    // Apply conditions based on minAmount, minKm, and distance\r\n    if (minAmount < totalAmount && minKm > numericDistance) {\r\n      return 0; // Discount amount is 0\r\n    }\r\n\r\n    // Calculate discount based on perKmPrice and numericDistance\r\n    if (numericDistance > minKm) {\r\n      return numericDistance * perKmPrice; // Distance greater than minKm\r\n    }\r\n    // console.log(\"numericDistance\",numericDistance)\r\n    // Default case: Calculate discount based on perKmPrice and numericDistance\r\n    return perKmPrice * numericDistance;\r\n  }\r\n\r\n  const placeOrder = async () => {\r\n    if (!selectedAddress) {\r\n      toast.info(\"Please select a shipping address\");\r\n      return;\r\n    }\r\n    if (!paymentMethod) {\r\n      toast.info(\"Please select a payment method\");\r\n      return;\r\n    }\r\n\r\n    const orderData = {\r\n      userId: user._id,\r\n\r\n      items:\r\n        orderType !== \"scheduled\"\r\n          ? items.map((item) => ({\r\n              productId: item._id,\r\n              name: item.productname,\r\n              quantity: item.quantity,\r\n              price:\r\n                item.selectedWeight?.price -\r\n                item.selectedWeight?.price *\r\n                  ((item.selectedWeight?.discount\r\n                    ? item.selectedWeight?.discount\r\n                    : item?.discount) /\r\n                    100),\r\n              discount:\r\n                item.selectedWeight?.price *\r\n                ((item.selectedWeight?.discount\r\n                  ? item.selectedWeight?.discount\r\n                  : item?.discount) /\r\n                  100),\r\n              selecteddiscount: item.selectedWeight?.discount\r\n                ? item.selectedWeight?.discount\r\n                : item?.discount,\r\n              weight: `${item.selectedWeight.value}${item.selectedWeight.units}`,\r\n            }))\r\n          : items1.map((item) => ({\r\n              productId: item._id,\r\n              name: item.productname,\r\n              quantity: item.quantity,\r\n              price:\r\n                item.selectedWeight?.price -\r\n                item.selectedWeight?.price *\r\n                  ((item.selectedWeight?.discount\r\n                    ? item.selectedWeight?.discount\r\n                    : item?.discount) /\r\n                    100),\r\n              discount:\r\n                item.selectedWeight?.price *\r\n                ((item.selectedWeight?.discount\r\n                  ? item.selectedWeight?.discount\r\n                  : item?.discount) /\r\n                  100),\r\n              selecteddiscount: item.selectedWeight?.discount\r\n                ? item.selectedWeight?.discount\r\n                : item?.discount,\r\n              weight: `${item.selectedWeight.value}${item.selectedWeight.units}`,\r\n            })),\r\n      totalAmount: (\r\n        (orderType !== \"scheduled\" ? total : total1) +\r\n        deliveryCharge +\r\n        calculatDisAmount(\r\n          minKm,\r\n          perkmprice,\r\n          minAmount,\r\n          distance,\r\n          orderType !== \"scheduled\" ? total : total1\r\n        ) -\r\n        (orderType !== \"scheduled\" ? total : total1) * (couponDiscount / 100)\r\n      ).toFixed(2),\r\n      discount:\r\n        ((orderType !== \"scheduled\" ? subtotal : subtotal1) + totalDiscount) *\r\n          (couponDiscount / 100) +\r\n        totalDiscount,\r\n      shippingAddress: selectedAddress,\r\n      paymentMethod: paymentMethod,\r\n      additionalInstructions: additionalInstructions,\r\n      orderType: orderType,\r\n      deliveryCharge:\r\n        deliveryCharge +\r\n        calculatDisAmount(\r\n          minKm,\r\n          perkmprice,\r\n          minAmount,\r\n          distance,\r\n          orderType !== \"scheduled\" ? total : total1\r\n        ),\r\n    };\r\n    const config = {\r\n      url: \"/user/createOrder\",\r\n      method: \"post\",\r\n      baseURL: \"https://majesticmall.net/api\",\r\n      hearder: { \"content-type\": \"application/json\" },\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      data: orderData,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        paymentMethod === \"Online Payment\"\r\n          ? \"https://majesticmall.net/api/user/addPaymentPhone\"\r\n          : \"https://majesticmall.net/api/user/createOrder\",\r\n        {\r\n          ...orderData,\r\n          username: user?.name,\r\n          Mobile: user?.mobile,\r\n          orderId: orderData?.items[0]?.productId,\r\n          amount: orderData.totalAmount,\r\n          config: JSON.stringify(config),\r\n          orderType: orderType,\r\n          redirecturl: \"/account\",\r\n          callBack: \"/cart\",\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.status === 200) {\r\n        if (paymentMethod === \"Online Payment\") {\r\n          return window.location.assign(res.data?.url?.url);\r\n        }\r\n        toast.success(\"Order placed successfully!\");\r\n        if (orderType !== \"scheduled\") {\r\n          dispatch(clearCart());\r\n        } else {\r\n          dispatch(clearCart1());\r\n        }\r\n\r\n        setTimeout(() => {\r\n          window.location.assign(\"/\");\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error placing order:\", error);\r\n      toast.info(\"An error occurred while placing the order.\");\r\n    }\r\n  };\r\n  const [coponcode, setcouponcode] = useState(\"\");\r\n  const copyToClipboard = (code) => {\r\n    navigator.clipboard.writeText(code);\r\n    setcouponcode(code);\r\n    toast.success(`Coupon code \"${code}\" copied to clipboard!`);\r\n  };\r\n\r\n  const [distance, setDistance] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchDistance = async () => {\r\n      if (!selectedAddress) return;\r\n      if (!selectedAddress?.lat || !selectedAddress.lng)\r\n        return toast.error(\"Your address not able to find please update\");\r\n\r\n      if (!window.google) return;\r\n\r\n      const origin = { lat: 12.940025819400102, lng: 77.5477817106305 };\r\n      const destination = {\r\n        lat: selectedAddress?.lat,\r\n        lng: selectedAddress.lng,\r\n      };\r\n\r\n      const service = new window.google.maps.DistanceMatrixService();\r\n\r\n      service.getDistanceMatrix(\r\n        {\r\n          origins: [origin],\r\n          destinations: [destination],\r\n          travelMode: window.google.maps.TravelMode.DRIVING,\r\n        },\r\n        (response, status) => {\r\n          if (status === \"OK\") {\r\n            const result = response.rows[0].elements[0];\r\n            setDistance(result.distance.text);\r\n          } else {\r\n            console.error(\"Distance Matrix request failed:\", status);\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    fetchDistance();\r\n  }, [selectedAddress]);\r\n\r\n  console.log(\"distance====>\", distance, selectedAddress);\r\n\r\n  useEffect(() => {\r\n    getAllCupons();\r\n    getAddresses();\r\n    if (user && !selectedAddress) {\r\n      setSelectedAddress(user);\r\n    }\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (selectedAddress) {\r\n  //     const address = `${selectedAddress.address1 || selectedAddress.street} ${\r\n  //       selectedAddress.address2 || selectedAddress.city\r\n  //     } ${selectedAddress.state} `;\r\n\r\n  //     calculateDistance(address);\r\n  //   }\r\n  // }, [selectedAddress]);\r\n\r\n  return (\r\n    <div className=\"container px-4 py-8 mx-auto bg-gray-50\">\r\n      <ToastContainer />\r\n      {/* <h1 className=\"mb-8 text-4xl font-bold text-center text-gray-800\">\r\n        Checkout\r\n      </h1> */}\r\n\r\n      <h1 className=\"text-2xl md:text-4xl lg:text-4xl font-bold text-center quicksand mt-1 text-[#f2281c] mb-3\">\r\n        Checkout\r\n      </h1>\r\n\r\n      <div className=\"grid grid-cols-1 gap-12 md:grid-cols-2\">\r\n        <div className=\"p-6 bg-white rounded-lg shadow-md\">\r\n          <h2 className=\"flex items-center mb-6 text-xl font-semibold\">\r\n            <FaShippingFast className=\"mr-2 text-[#000]\" />\r\n            Shipping Address\r\n          </h2>\r\n          <select\r\n            className=\"w-full p-2 border border-gray-300 rounded-md mb-4 focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n            value={JSON.stringify(selectedAddress)}\r\n            onChange={handleAddressChange}\r\n          >\r\n            <option value=\"{}\">Select an address</option>\r\n\r\n            <option key={user._id} value={JSON.stringify(user)}>\r\n              {user.name}, {user.address1}, {user.address2}\r\n            </option>\r\n            {addresses?.map((address) => (\r\n              <option key={address._id} value={JSON?.stringify(address)}>\r\n                {address.fullName}, {address.street}, {address.city}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {selectedAddress && (\r\n            <div className=\"p-4 mb-4 bg-gray-100 rounded-md\">\r\n              <h3 className=\"mb-2 font-semibold text-gray-700\">\r\n                Selected Address\r\n              </h3>\r\n              <p>\r\n                {selectedAddress.name\r\n                  ? selectedAddress.name\r\n                  : selectedAddress.fullName}\r\n              </p>\r\n              <p>\r\n                {selectedAddress.address1\r\n                  ? selectedAddress.address1\r\n                  : selectedAddress.street}\r\n              </p>\r\n              <p>\r\n                {selectedAddress.address2\r\n                  ? selectedAddress.address2\r\n                  : selectedAddress.city}\r\n                , {selectedAddress.state} {selectedAddress.pincode}\r\n              </p>\r\n              <p>{selectedAddress.country}</p>\r\n              <p>\r\n                Phone:{\" \"}\r\n                {selectedAddress.mobile\r\n                  ? selectedAddress.mobile\r\n                  : selectedAddress.number}\r\n              </p>\r\n              <p>\r\n                Alternative Phone(Whatsapp number):{\" \"}\r\n                {selectedAddress.Amobile\r\n                  ? selectedAddress.Amobile\r\n                  : selectedAddress.anumber}\r\n              </p>\r\n              <p>Email: {selectedAddress.email}</p>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"mb-4\">\r\n            <label className=\"flex items-center text-gray-700\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={shipToDifferentAddress}\r\n                onChange={() => openship()}\r\n                className=\"mr-2 form-checkbox h-5 w-5 text-[#000]\"\r\n              />\r\n              Ship to a different address?\r\n            </label>\r\n          </div>\r\n\r\n          {shipToDifferentAddress && (\r\n            <form onSubmit={addAddress} className=\"space-y-4\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"fullName\"\r\n                value={newAddress.fullName}\r\n                onChange={handleNewAddressChange}\r\n                placeholder=\"Full Name\"\r\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                required\r\n              />\r\n              <div className=\"relative flex items-center rounded-full align-center\">\r\n                <MdMyLocation\r\n                  className=\"absolute ml-2 cursor-pointer left-3\"\r\n                  color=\"#000\"\r\n                  title=\"Current Location\"\r\n                  onClick={() => getLocation()}\r\n                />\r\n                <Autocomplete\r\n                  onLoad={setAutocomplete}\r\n                  onPlaceChanged={handlePlaceSelect}\r\n                  className=\"px-2 w-100 \"\r\n                >\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"street\"\r\n                    value={newAddress.street}\r\n                    onChange={handleNewAddressChange}\r\n                    placeholder=\"Street Address\"\r\n                    className=\"w-full    border border-gray-300  rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                    required\r\n                    style={{ paddingLeft: \"40px\" }}\r\n                  />\r\n                </Autocomplete>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  value={newAddress.city}\r\n                  onChange={handleNewAddressChange}\r\n                  placeholder=\"City\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"state\"\r\n                  value={newAddress.state}\r\n                  onChange={handleNewAddressChange}\r\n                  placeholder=\"State\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"country\"\r\n                  value={newAddress.country}\r\n                  onChange={handleNewAddressChange}\r\n                  placeholder=\"Country\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"pincode\"\r\n                  value={newAddress.pincode}\r\n                  onChange={handleNewAddressChange}\r\n                  placeholder=\"Pincode\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  value={newAddress.number}\r\n                  onChange={handleNewAddressChange}\r\n                  placeholder=\"Phone Number\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"anumber\"\r\n                  value={newAddress.anumber}\r\n                  onChange={handleNewAddressChange}\r\n                  placeholder=\"Alternative Number (Whatsapp number)\"\r\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                  required\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={newAddress.email}\r\n                onChange={handleNewAddressChange}\r\n                placeholder=\"Email\"\r\n                className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full bg-[#000] text-white p-2 rounded-md hover:bg-[#000] transition duration-300  hover:opacity-80\"\r\n              >\r\n                Add New Address\r\n              </button>\r\n            </form>\r\n          )}\r\n          {AllCupons?.length > 0 && (\r\n            <div className=\"p-4 mx-auto \">\r\n              <h1 className=\"mb-4 text-2xl font-bold text-center\">\r\n                Available Coupons\r\n              </h1>\r\n\r\n              <ul className=\"pl-5 space-y-2 overflow-y-auto list-disc max-h-80\">\r\n                {AllCupons?.map((coupon, i) => (\r\n                  <li key={i} className=\"text-gray-800\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"font-semibold\">{coupon?.code}</span>\r\n                      <span className=\"px-3 py-1 text-sm font-bold text-white bg-green-500 rounded\">\r\n                        {coupon?.discountpercentage}% OFF\r\n                      </span>\r\n                      <button\r\n                        onClick={() => copyToClipboard(coupon.code)}\r\n                        disabled={coponcode === coupon.code}\r\n                        className={`mt-2 w-10 h-10 flex items-center justify-center rounded-full \r\n                          ${\r\n                            coponcode === coupon.code\r\n                              ? \"bg-green-500 hover:bg-green-600\"\r\n                              : \"bg-red-500 hover:bg-red-600\"\r\n                          }\r\n                           text-white border-2 border-white shadow-lg`}\r\n                      >\r\n                        {coponcode === coupon.code ? (\r\n                          <FaCheckCircle\r\n                            className=\"w-5 h-5 text-white\"\r\n                            title=\"Copied\"\r\n                          />\r\n                        ) : (\r\n                          <FaRegCopy\r\n                            className=\"w-5 h-5 text-white\"\r\n                            title=\"Copy Code\"\r\n                          />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600\">{coupon?.promocode}</p>\r\n\r\n                    <hr />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-6 bg-white rounded-lg shadow-md\">\r\n          <h2 className=\"mb-6 text-xl font-semibold\">Order Summary</h2>\r\n          <div className=\"p-4 bg-gray-100 rounded-md\">\r\n            {orderType !== \"scheduled\"\r\n              ? items.map((item) => (\r\n                  <div\r\n                    key={item._id}\r\n                    className=\"flex items-center justify-between mb-2 text-gray-700\"\r\n                  >\r\n                    <span>\r\n                      {item.productname} x {item.quantity}\r\n                    </span>\r\n                    <span>\r\n                      ₹\r\n                      {(\r\n                        (item.selectedWeight?.price -\r\n                          item.selectedWeight?.price *\r\n                            ((item.selectedWeight?.discount\r\n                              ? item.selectedWeight?.discount\r\n                              : item.discount) /\r\n                              100)) *\r\n                        item.quantity\r\n                      ).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                ))\r\n              : items1.map((item) => (\r\n                  <div\r\n                    key={item._id}\r\n                    className=\"flex items-center justify-between mb-2 text-gray-700\"\r\n                  >\r\n                    <span>\r\n                      {item.productname} x {item.quantity}\r\n                    </span>\r\n                    <span>\r\n                      ₹\r\n                      {(\r\n                        (item.selectedWeight?.price -\r\n                          item.selectedWeight?.price *\r\n                            ((item.selectedWeight?.discount\r\n                              ? item.selectedWeight?.discount\r\n                              : item.discount) /\r\n                              100)) *\r\n                        item.quantity\r\n                      ).toFixed(2)}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n            <div className=\"pt-4 mt-4 border-t border-gray-300\">\r\n              <div className=\"flex justify-between mb-2 text-gray-700\">\r\n                <span>Total MRP</span>\r\n                <span>\r\n                  ₹\r\n                  {(\r\n                    (orderType !== \"scheduled\" ? subtotal : subtotal1) +\r\n                    totalDiscount\r\n                  ).toFixed(2)}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex justify-between mb-2 text-gray-700\">\r\n                <span>Shipping</span>\r\n                <span>\r\n                  ₹\r\n                  {/* {(orderType !== \"scheduled\" ? total : total1) >= 1000\r\n                    ? 0\r\n                    : 40} */}\r\n                  {(\r\n                    deliveryCharge +\r\n                    calculatDisAmount(\r\n                      minKm,\r\n                      perkmprice,\r\n                      minAmount,\r\n                      distance,\r\n                      orderType !== \"scheduled\" ? total : total1\r\n                    )\r\n                  )?.toFixed(2)}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex justify-between mb-4 text-gray-700\">\r\n                <span>Discount</span>\r\n                <span>-₹{totalDiscount?.toFixed(2)}</span>\r\n              </div>\r\n              {couponDiscount > 0 && (\r\n                <div className=\"flex justify-between text-[#000]\">\r\n                  <span>Coupon Discount</span>\r\n                  <span>\r\n                    -₹\r\n                    {(\r\n                      ((orderType !== \"scheduled\" ? subtotal : subtotal1) +\r\n                        totalDiscount) *\r\n                      (couponDiscount / 100)\r\n                    ).toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <hr />\r\n              <div className=\"flex justify-between mt-4 text-lg font-bold\">\r\n                <span>Total</span>\r\n                <span>\r\n                  ₹\r\n                  {(\r\n                    (orderType !== \"scheduled\" ? total : total1) +\r\n                    deliveryCharge +\r\n                    calculatDisAmount(\r\n                      minKm,\r\n                      perkmprice,\r\n                      minAmount,\r\n                      distance,\r\n                      orderType !== \"scheduled\" ? total : total1\r\n                    ) -\r\n                    (orderType !== \"scheduled\" ? total : total1) *\r\n                      (couponDiscount / 100)\r\n                  ).toFixed(2)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mt-6\">\r\n            <div className=\"flex items-center mb-2\">\r\n              <FaPercent className=\"mr-2 text-[#000]\" />\r\n              <h3 className=\"mt-1 font-semibold text-gray-700\">Apply Coupon</h3>\r\n            </div>\r\n            <div className=\"flex flex-grow  border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-[#000] rounded-r-md\">\r\n              <input\r\n                type=\"text\"\r\n                value={coupon}\r\n                onChange={(e) => setCoupon(e.target.value)}\r\n                placeholder=\"Enter coupon code\"\r\n                // className=\"flex-grow p-2 border border-gray-300 rounded-l-md focus:outline-none focus:ring-2 focus:ring-[#000]\"\r\n              />\r\n              <button\r\n                onClick={applyCoupon}\r\n                className=\"bg-[#000] text-white p-2 rounded-r-md hover:bg-[#000] transition duration-300  hover:opacity-80\"\r\n              >\r\n                Apply\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <div className=\"flex items-center mb-2\">\r\n              <FaComment className=\"mr-2 text-[#000]\" />\r\n              <h3 className=\"mt-2 font-semibold text-gray-700\">\r\n                Additional Instructions\r\n              </h3>\r\n            </div>\r\n            <textarea\r\n              value={additionalInstructions}\r\n              onChange={(e) => setAdditionalInstructions(e.target.value)}\r\n              placeholder=\"Enter any special instructions or notes for your order\"\r\n              className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-[#000] h-24\"\r\n            />\r\n          </div>\r\n          <div className=\"mt-6\">\r\n            <div className=\"flex items-center mb-2\">\r\n              <FaCreditCard className=\"mr-2 text-[#000]\" />\r\n              <h3 className=\"mt-2 font-semibold text-gray-700\">\r\n                Payment Method\r\n              </h3>\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <label className=\"flex items-center p-2 transition duration-300 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"Cash On Delivery\"\r\n                  checked={paymentMethod === \"Cash On Delivery\"}\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                  className=\"mr-2 form-radio h-5 w-5 text-[#000]\"\r\n                />\r\n                Cash On Delivery\r\n              </label>\r\n              <label className=\"flex items-center p-2 transition duration-300 border border-gray-300 rounded-md cursor-pointer hover:bg-gray-50\">\r\n                <input\r\n                  type=\"radio\"\r\n                  value=\"Online Payment\"\r\n                  checked={paymentMethod === \"Online Payment\"}\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                  className=\"mr-2 form-radio h-5 w-5 text-[#000]\"\r\n                />\r\n                Online Payment\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-center\">\r\n            <button\r\n              onClick={placeOrder}\r\n              className=\"bg-[#000] text-white p-2 rounded-md mt-6 hover:bg-[#000] transition duration-300 text-lg font-semibold  hover:opacity-80\"\r\n            >\r\n              Place Order\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {isModalVisible && (\r\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\r\n          <div className=\"w-full max-w-md p-4 bg-white rounded\">\r\n            <h2 className=\"mb-4 text-xl font-bold\">Address List</h2>\r\n            {addresses.map((address) => (\r\n              <div\r\n                key={address._id}\r\n                className=\"flex items-center justify-between mb-2\"\r\n              >\r\n                <span>\r\n                  {address.fullName}, {address.city}\r\n                </span>\r\n                <button\r\n                  onClick={() => deleteAddress(address._id)}\r\n                  className=\"text-red-500\"\r\n                >\r\n                  <RiDeleteBack2Line />\r\n                </button>\r\n              </div>\r\n            ))}\r\n            <button\r\n              onClick={() => setIsModalVisible(false)}\r\n              className=\"p-2 mt-4 text-black bg-gray-300 rounded hover:opacity-80\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"names":["Checkout","_ref2","dispatch","useDispatch","encryptionKey","process","encryptedToken","Cookies","get","token","CryptoJS","decrypt","toString","Utf8","shipToDifferentAddress","setShipToDifferentAddress","useState","selectedAddress","setSelectedAddress","paymentMethod","setPaymentMethod","addresses","setAddresses","newAddress","setNewAddress","fullName","street","city","state","country","pincode","number","anumber","email","autocomplete","setAutocomplete","getLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","getAddressFromCoordinates","lat","lng","fetch","then","response","json","data","status","results","length","place","components","address_components","formatted_address","forEach","component","types","includes","long_name","toast","info","catch","err","message","coupon","setCoupon","couponDiscount","setCouponDiscount","isModalVisible","setIsModalVisible","additionalInstructions","setAdditionalInstructions","encryptedUser","user","JSON","parse","items","useSelector","cart","items1","cart1","subtotal","location","useLocation","orderType","deliveryCharge","minKm","perkmprice","minAmount","total","subtotal1","total1","AllCupons","setAllCoupons","getAddresses","async","res","axios","_id","headers","Authorization","success","error","console","handleNewAddressChange","e","name","value","target","test","totalDiscount","reduce","item","_item$selectedWeight","_ref","_item$selectedWeight$","_item$selectedWeight2","selectedWeight","price","quantity","discount","calculatDisAmount","perKmPrice","distance","totalAmount","numericDistance","parseFloat","match","coponcode","setcouponcode","setDistance","useEffect","window","google","destination","maps","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","TravelMode","DRIVING","result","rows","elements","text","fetchDistance","log","availableCoupons","getAllCupons","_jsxs","className","children","_jsx","ToastContainer","FaShippingFast","stringify","onChange","address1","address2","map","address","mobile","Amobile","type","checked","onSubmit","preventDefault","post","userId","_error$response","_error$response$data","placeholder","required","MdMyLocation","color","title","onClick","Autocomplete","onLoad","onPlaceChanged","handlePlaceSelect","getPlace","geometry","addressComponents","short_name","style","paddingLeft","i","code","discountpercentage","copyToClipboard","clipboard","writeText","disabled","FaCheckCircle","FaRegCopy","promocode","_item$selectedWeight21","_item$selectedWeight22","_item$selectedWeight23","_item$selectedWeight24","productname","toFixed","_item$selectedWeight25","_item$selectedWeight26","_item$selectedWeight27","_item$selectedWeight28","FaPercent","userName","FaComment","FaCreditCard","orderData","_item$selectedWeight3","_item$selectedWeight4","_item$selectedWeight5","_item$selectedWeight6","_item$selectedWeight7","_item$selectedWeight8","_item$selectedWeight9","_item$selectedWeight10","_item$selectedWeight11","productId","selecteddiscount","weight","units","_item$selectedWeight12","_item$selectedWeight13","_item$selectedWeight14","_item$selectedWeight15","_item$selectedWeight16","_item$selectedWeight17","_item$selectedWeight18","_item$selectedWeight19","_item$selectedWeight20","shippingAddress","config","url","method","baseURL","hearder","_orderData$items$","username","Mobile","orderId","amount","redirecturl","callBack","_res$data","_res$data$url","assign","clearCart","clearCart1","setTimeout","delete","id","deleteAddress","RiDeleteBack2Line"],"sourceRoot":""}
{"version":3,"file":"static/js/6050.9653fd9a.chunk.js","mappings":"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","sources":["components/admin/pages/Addproduct.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Paper,\r\n  Grid,\r\n  Box,\r\n  IconButton,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { Upload, Trash2, Plus, Image } from \"lucide-react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\nimport axios from \"axios\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { message, Typography } from \"antd\";\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst { Title } = Typography;\r\nconst StyledDropzone = styled(Paper)(({ theme }) => ({\r\n  border: `2px dashed ${theme.palette.divider}`,\r\n  padding: theme.spacing(4),\r\n  textAlign: \"center\",\r\n  cursor: \"pointer\",\r\n  marginBottom: theme.spacing(2),\r\n  \"&:hover\": {\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst PreviewItem = styled(Card)(({ theme }) => ({\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\nconst AddProduct = () => {\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const [subCategoryData, setSubCategoryData] = useState([]);\r\n  const [tag, setTag] = useState([]);\r\n  const [units, setUnits] = useState([]);\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const encryptedToken = Cookies.get('token');\r\n  const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n  const [title, setTitle] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [subCategory, setSubCategory] = useState(\"\");\r\n  const [productTag, setProductTag] = useState(\"\");\r\n  const [discount, setDiscount] = useState(\"\");\r\n  const [clubDiscount, setClubDiscount] = useState(\"\");\r\n  const [stock, setStock] = useState(\"\");\r\n  const [miniStock, setMiniStock] = useState(\"\");\r\n  const [unit, setUnit] = useState(\"\");\r\n  const [miniUnit, setMiniUnit] = useState(\"\");\r\n  const [subscription, setSubscription] = useState(\"\");\r\n  const [productDesc, setProductDesc] = useState(\"\");\r\n  const [uploadedImages, setUploadedImages] = useState([]);\r\n  const [newOption, setNewOption] = useState({\r\n    value: \"\",\r\n    price: \"\",\r\n    units: \"\",\r\n    stock: \"\",\r\n    minStock: \"\"\r\n  });\r\n  const [previewList, setPreviewList] = useState([]);\r\n  const [previewClubList, setPreviewClubList] = useState([]);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop: (acceptedFiles) =>\r\n      setUploadedImages([...uploadedImages, ...acceptedFiles]),\r\n    accept: \"image/*,video/*\",\r\n  });\r\n  const [categoryMap, setCategoryMap] = useState({});\r\n\r\n  const [subCategoryMap, setSubCategoryMap] = useState({});\r\n  // console.log(categoryMap,subCategoryMap,category,\"subCategoryMap\");\r\n  useEffect(() => {\r\n    const fetchCategoryData = async () => {\r\n      try {\r\n        const categoryRes = await axios.get(\r\n          \"https://majesticmall.net/api/admin/getCategory\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setCategoryData(\r\n          categoryRes.data?.category.filter((item) => item.status === \"Active\")\r\n        );\r\n        const categoryMapping = {};\r\n        categoryRes.data?.category\r\n          .filter((item) => item.status === \"Active\")\r\n          .forEach((cat) => {\r\n            categoryMapping[cat._id] = cat.categoryName;\r\n          });\r\n        setCategoryMap(categoryMapping);\r\n      } catch (error) {\r\n        toast.error(\"Error fetching categories\");\r\n      }\r\n    };\r\n\r\n    const fetchSubCategoryData = async () => {\r\n      try {\r\n        const subCategoryRes = await axios.get(\r\n          \"https://majesticmall.net/api/admin/getSubcategory\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setSubCategoryData(\r\n          subCategoryRes.data?.Subcategory.filter(\r\n            (item) => item.status === \"Active\"\r\n          )\r\n        );\r\n        const subCategoryMapping = {};\r\n        subCategoryRes.data?.Subcategory.filter(\r\n          (item) => item.status === \"Active\"\r\n        ).forEach((subcat) => {\r\n          subCategoryMapping[subcat._id] = subcat.SubcategoryName;\r\n        });\r\n        setSubCategoryMap(subCategoryMapping);\r\n      } catch (error) {\r\n        toast.error(\"Error fetching subcategories\");\r\n      }\r\n    };\r\n\r\n    const fetchTagData = async () => {\r\n      try {\r\n        const tagRes = await axios.get(\r\n          \"https://majesticmall.net/api/admin/getTag\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setTag(tagRes.data?.Tag);\r\n      } catch (error) {\r\n        toast.error(\"Error fetching tags\");\r\n      }\r\n    };\r\n\r\n    const fetchUnitData = async () => {\r\n      try {\r\n        const unitRes = await axios.get(\r\n          \"https://majesticmall.net/api/admin/getUnit\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        setUnits(unitRes.data?.Unit);\r\n      } catch (error) {\r\n        toast.error(\"Error fetching units\");\r\n      }\r\n    };\r\n    fetchCategoryData();\r\n    fetchSubCategoryData();\r\n    fetchTagData();\r\n    fetchUnitData();\r\n  }, [token]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      !title ||\r\n      !productPrice ||\r\n      !productDesc ||\r\n      !category ||\r\n      !subCategory ||\r\n      !productTag\r\n    ) {\r\n      toast.info(\"Please fill in all required fields.\");\r\n      return;\r\n    }\r\n\r\n    if (previewList.length === 0 || previewClubList.length === 0) {\r\n      toast.info(\r\n        \"Please add weight and price options for both normal and club members\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (uploadedImages.length < 1) {\r\n      toast.info(\"Please add at least one image\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const productData = {\r\n        productname: title,\r\n        price: productPrice,\r\n        description: productDesc,\r\n        category,\r\n        subcategory: subCategory,\r\n        tag: productTag,\r\n        discount,\r\n        clubdiscount: clubDiscount,\r\n        stock,\r\n        unit,\r\n        miniunit: miniUnit,\r\n        ministock: miniStock,\r\n        weight: previewList,\r\n        subscribe: subscription,\r\n        Clubweight: previewClubList,\r\n      };\r\n\r\n      const response = await axios.post(\r\n        \"https://majesticmall.net/api/admin/addProduct\",\r\n        productData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        await uploadFiles(response.data.product?._id);\r\n        toast.success(\"Product added successfully\");\r\n        // setTimeout(() => {\r\n        //   window.location.assign('/admindashboard/list-product');\r\n        // }, 500);\r\n      }\r\n    } catch (error) {\r\n      message.error(error.response?.data?.error || \"Error adding product\");\r\n    }\r\n  };\r\n\r\n  const uploadFiles = async (id) => {\r\n    const formdata = new FormData();\r\n    try {\r\n      for (let i = 0; i < uploadedImages.length; i++) {\r\n        formdata.append(\"id\", id);\r\n        formdata.append(\"Photos\", uploadedImages[i]);\r\n        await fetch(\"https://majesticmall.net/api/admin/addPhotos/\", {\r\n          method: \"post\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: formdata,\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        window.location.assign('/admindashboard/list-product');\r\n      }, 500);\r\n    } catch (error) {\r\n      toast.error(\"Error uploading images\");\r\n    }\r\n  };\r\n\r\n  const calculateDiscountedPrice = (price, discountPercentage) => {\r\n    const discount = (price * discountPercentage) / 100;\r\n    return (price - discount).toFixed(2);\r\n  };\r\n\r\n  const addToPreview = () => {\r\n    if (\r\n      newOption.value &&\r\n      newOption.price &&\r\n      newOption.units &&\r\n      discount &&\r\n      clubDiscount\r\n    ) {\r\n      const normalDiscountedPrice = calculateDiscountedPrice(\r\n        Number(newOption.price),\r\n        Number(discount)\r\n      );\r\n\r\n      const clubDiscountedPrice = calculateDiscountedPrice(\r\n        Number(newOption.price),\r\n        Number(clubDiscount)\r\n      );\r\n\r\n      const newPreviewItem = {\r\n        ...newOption,\r\n        discountedPrice: normalDiscountedPrice,\r\n        id: Date.now(),\r\n      };\r\n\r\n      const newClubPreviewItem = {\r\n        ...newOption,\r\n        discountedPrice: clubDiscountedPrice,\r\n        id: Date.now(),\r\n      };\r\n\r\n      setPreviewList([...previewList, newPreviewItem]);\r\n      setPreviewClubList([...previewClubList, newClubPreviewItem]);\r\n      setNewOption({\r\n        value: \"\",\r\n        price: \"\",\r\n        units: \"\",\r\n        stock: \"\",\r\n        minStock: \"\",\r\n      });\r\n    } else {\r\n      toast.info(\"Please fill in all option details and discounts\");\r\n    }\r\n  };\r\n\r\n  const removeFromPreview = (id) => {\r\n    setPreviewList(previewList.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const removeFromClubPreview = (id) => {\r\n    setPreviewClubList(previewClubList.filter((item) => item.id !== id));\r\n  };\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n\r\n      <Title level={3} className=\"title\">\r\n        Add Product\r\n      </Title>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom className=\"mb-2\">\r\n              Basic Information\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Category</InputLabel>\r\n                  <Select\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    label=\"Category\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Category</MenuItem>\r\n                    {categoryData.map((cat, idx) => (\r\n                      <MenuItem key={idx} value={cat._id}>\r\n                        {cat.categoryName}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Sub-Category</InputLabel>\r\n                  <Select\r\n                    value={subCategory}\r\n                    onChange={(e) => setSubCategory(e.target.value)}\r\n                    label=\"Sub-Category\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Sub-Category</MenuItem>\r\n                    {subCategoryData\r\n                      .filter((sub) => sub.categoryId === category)\r\n                      .map((sub, idx) => (\r\n                        <MenuItem key={idx} value={sub._id}>\r\n                          {sub.SubcategoryName}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Product Type</InputLabel>\r\n                  <Select\r\n                    value={subscription}\r\n                    onChange={(e) => setSubscription(e.target.value)}\r\n                    label=\"Product Type\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Type</MenuItem>\r\n                    <MenuItem value=\"Normal\">Normal</MenuItem>\r\n                    <MenuItem value=\"Subscription\">Subscription</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom className=\"mb-2\">\r\n              Product Details\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  label=\"Product Title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Product Price\"\r\n                  inputProps={{ min: '1' }}\r\n                  value={productPrice}\r\n                  onChange={(e) => setProductPrice(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Product Tag</InputLabel>\r\n                  <Select\r\n                    value={productTag}\r\n                    onChange={(e) => setProductTag(e.target.value)}\r\n                    label=\"Product Tag\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Tag</MenuItem>\r\n                    {tag.map((t, idx) => (\r\n                      <MenuItem key={idx} value={t.tag}>\r\n                        {t.tag}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Stock Management</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Stock\"\r\n                  inputProps={{ min: '1' }}\r\n                  value={stock}\r\n                  onChange={(e) => setStock(e.target.value)}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Minimum Stock\"\r\n                  inputProps={{ min: '1' }}\r\n                  value={miniStock}\r\n                  onChange={(e) => setMiniStock(e.target.value)}\r\n                />\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom className=\"mb-2\">\r\n              Pricing Options\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Normal Member Discount (%)\"\r\n                  value={discount}\r\n                  inputProps={{ min: '0' }}\r\n                  onChange={(e) => setDiscount(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Club Member Discount (%)\"\r\n                  value={clubDiscount}\r\n                  inputProps={{ min: '0' }}\r\n                  onChange={(e) => setClubDiscount(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box sx={{ mt: 3 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Weight/Volume\"\r\n                    value={newOption.value}\r\n                    inputProps={{ min: '1' }}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, value: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Units</InputLabel>\r\n                    <Select\r\n                      value={newOption.units}\r\n                      onChange={(e) =>\r\n                        setNewOption({ ...newOption, units: e.target.value })\r\n                      }\r\n                      label=\"Units\"\r\n                    >\r\n                      <MenuItem value=\"\">Select Units</MenuItem>\r\n                      {units.map((u, idx) => (\r\n                        <MenuItem key={idx} value={u.unit}>\r\n                          {u.unit}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Price\"\r\n                    value={newOption.price}\r\n                    inputProps={{ min: '1' }}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, price: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Stock Quantity\"\r\n                    value={newOption.stock}\r\n                    inputProps={{ min: '1' }}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, stock: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Min Stock Alert\"\r\n                    inputProps={{ min: '1' }}\r\n                    value={newOption.minStock}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, minStock: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<Plus />}\r\n                    fullWidth\r\n                    onClick={addToPreview}\r\n                    sx={{ height: \"56px\" }}\r\n                    style={{ backgroundColor: \"#000\" }}\r\n                  >\r\n                    Add Option\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            {previewList.length > 0 && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Normal Members Preview\r\n                </Typography>\r\n                {previewList.map((option) => (\r\n                  <PreviewItem key={option.id}>\r\n                    <CardContent\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Typography>\r\n                        {option.value} {option.units} - Rs {option.price}{\" \"}\r\n                        (Discounted: Rs {option.discountedPrice})\r\n                        <br />\r\n                        <small>\r\n                          Stock: {option.stock} | Min Stock Alert:{\" \"}\r\n                          {option.minStock}\r\n                        </small>\r\n                      </Typography>\r\n                      <IconButton\r\n                        onClick={() => removeFromPreview(option.id)}\r\n                        color=\"error\"\r\n                      >\r\n                        <Trash2 />\r\n                      </IconButton>\r\n                    </CardContent>\r\n                  </PreviewItem>\r\n                ))}\r\n              </Box>\r\n            )}\r\n            {previewClubList.length > 0 && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Club Members Preview\r\n                  <Divider sx={{ my: 1 }} />\r\n                </Typography>\r\n                {previewClubList.map((option) => (\r\n                  <PreviewItem key={option.id}>\r\n                    <CardContent\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\">\r\n                          {option.value} {option.units}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                          Original Price: Rs {option.price}\r\n                        </Typography>\r\n                        <Typography color=\"primary\">\r\n                          Club Discounted Price: Rs {option.discountedPrice}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          Stock: {option.stock} | Min Stock Alert:{\" \"}\r\n                          {option.minStock}\r\n                        </Typography>\r\n                      </Box>\r\n                      <IconButton\r\n                        onClick={() => removeFromClubPreview(option.id)}\r\n                        color=\"error\"\r\n                      >\r\n                        <Trash2 />\r\n                      </IconButton>\r\n                    </CardContent>\r\n                  </PreviewItem>\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Product Description\r\n            </Typography>\r\n            <CKEditor\r\n              editor={ClassicEditor}\r\n              data={productDesc}\r\n              onChange={(event, editor) => {\r\n                const data = editor.getData();\r\n                setProductDesc(data);\r\n              }}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Product Images\r\n            </Typography>\r\n\r\n            <StyledDropzone {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <Upload size={40} className=\"mx-auto mb-2\" />\r\n              <Typography>\r\n                Drag & drop files here, or click to select files\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                Supports images and videos\r\n              </Typography>\r\n            </StyledDropzone>\r\n\r\n            {uploadedImages.length > 0 && (\r\n              <Grid container spacing={2}>\r\n                {uploadedImages.map((file, index) => (\r\n                  <Grid item xs={6} sm={4} md={3} key={index}>\r\n                    <Card>\r\n                      <Box sx={{ position: \"relative\" }}>\r\n                        {file.type.startsWith(\"video/\") ? (\r\n                          <video\r\n                            src={URL.createObjectURL(file)}\r\n                            controls\r\n                            style={{\r\n                              width: \"100%\",\r\n                              height: \"200px\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <Box\r\n                            component=\"img\"\r\n                            src={URL.createObjectURL(file)}\r\n                            alt={`Upload ${index + 1}`}\r\n                            sx={{\r\n                              width: \"100%\",\r\n                              height: \"200px\",\r\n                              objectFit: \"cover\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                        <IconButton\r\n                          sx={{\r\n                            position: \"absolute\",\r\n                            top: 8,\r\n                            right: 8,\r\n                            backgroundColor: \"rgba(255, 255, 255, 0.8)\",\r\n                            \"&:hover\": {\r\n                              backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n                            },\r\n                          }}\r\n                          onClick={() => {\r\n                            const newImages = [...uploadedImages];\r\n                            newImages.splice(index, 1);\r\n                            setUploadedImages(newImages);\r\n                          }}\r\n                        >\r\n                          <Trash2 size={20} />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={handleSubmit}\r\n              startIcon={<Plus />}\r\n              style={{ backgroundColor: \"#000\" }}\r\n            >\r\n              Add Product\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n"],"names":["Title","Typography","StyledDropzone","styled","Paper","_ref","theme","border","palette","divider","padding","spacing","textAlign","cursor","marginBottom","borderColor","primary","main","PreviewItem","Card","_ref2","AddProduct","categoryData","setCategoryData","useState","subCategoryData","setSubCategoryData","tag","setTag","units","setUnits","encryptedToken","Cookies","get","token","CryptoJS","decrypt","process","toString","Utf8","title","setTitle","productPrice","setProductPrice","category","setCategory","subCategory","setSubCategory","productTag","setProductTag","discount","setDiscount","clubDiscount","setClubDiscount","stock","setStock","miniStock","setMiniStock","unit","setUnit","miniUnit","setMiniUnit","subscription","setSubscription","productDesc","setProductDesc","uploadedImages","setUploadedImages","newOption","setNewOption","value","price","minStock","previewList","setPreviewList","previewClubList","setPreviewClubList","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","accept","categoryMap","setCategoryMap","subCategoryMap","setSubCategoryMap","useEffect","async","_categoryRes$data","_categoryRes$data2","categoryRes","axios","headers","Authorization","data","filter","item","status","categoryMapping","forEach","cat","_id","categoryName","error","toast","fetchCategoryData","_subCategoryRes$data","_subCategoryRes$data2","subCategoryRes","Subcategory","subCategoryMapping","subcat","SubcategoryName","fetchSubCategoryData","_tagRes$data","tagRes","Tag","fetchTagData","_unitRes$data","unitRes","Unit","fetchUnitData","uploadFiles","formdata","FormData","i","length","append","id","fetch","method","body","setTimeout","window","location","assign","calculateDiscountedPrice","discountPercentage","toFixed","_jsxs","Box","sx","p","children","_jsx","level","className","Grid","container","xs","variant","gutterBottom","md","FormControl","fullWidth","InputLabel","Select","onChange","e","target","label","MenuItem","map","idx","sub","categoryId","TextField","type","inputProps","min","t","mt","u","Button","startIcon","Plus","onClick","addToPreview","normalDiscountedPrice","Number","clubDiscountedPrice","newPreviewItem","discountedPrice","Date","now","newClubPreviewItem","info","height","style","backgroundColor","option","CardContent","display","justifyContent","alignItems","IconButton","removeFromPreview","color","Trash2","Divider","my","removeFromClubPreview","CKEditor","editor","ClassicEditor","event","getData","Upload","size","file","index","sm","position","startsWith","src","URL","createObjectURL","controls","width","objectFit","component","alt","top","right","newImages","splice","productData","productname","description","subcategory","clubdiscount","miniunit","ministock","weight","subscribe","Clubweight","response","post","_response$data$produc","product","success","_error$response","_error$response$data","message"],"sourceRoot":""}
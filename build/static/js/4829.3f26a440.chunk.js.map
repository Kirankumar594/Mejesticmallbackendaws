{"version":3,"file":"static/js/4829.3f26a440.chunk.js","mappings":"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","sources":["components/admin/pages/addcategory.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Upload,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Space,\r\n  Typography,\r\n} from \"antd\";\r\nimport {\r\n  PlusOutlined,\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  SearchOutlined,\r\n  UploadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Trash2, Edit, FileSpreadsheet } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst { confirm } = Modal;\r\nconst API_BASE_URL = \"https://majesticmall.net/api/admin\";\r\nconst { Title } = Typography;\r\nconst predefinedCategories = [\r\n  { categoryName: \"Grocery & Staples\" },\r\n  { categoryName: \"Milk & Dairy Products\" },\r\n  { categoryName: \"Fruits & Vegetables\" },\r\n];\r\n\r\nconst AddCategory = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\r\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n  const [editingCategory, setEditingCategory] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filteredCategories, setFilteredCategories] = useState([]);\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const encryptedToken = Cookies.get('token');\r\n  const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredCategories(\r\n      categories.filter((category) =>\r\n        Object.values(category).some(\r\n          (val) =>\r\n            val &&\r\n            val.toString().toLowerCase().includes(searchText.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  }, [categories, searchText]);\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/getCategory`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setCategories(response.data.category);\r\n    } catch (error) {\r\n      message.error(\"Failed to fetch categories\");\r\n    }\r\n  };\r\n\r\n  const handleAddCategory = async (values) => {\r\n    const isDuplicatePredefined = predefinedCategories.some(\r\n      (cat) => cat.categoryName.toLowerCase() === values.categoryName.toLowerCase()\r\n    );\r\n\r\n    if (isDuplicatePredefined) {\r\n      message.error(\"This category name is reserved and cannot be added\");\r\n      return;\r\n    }\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"categoryName\", values.categoryName);\r\n      formData.append(\"categoryimage\", values.categoryimage.file);\r\n\r\n      await axios.post(\r\n        `${API_BASE_URL}/addCategory`,\r\n        formData,\r\n        {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      message.success(\"Category added successfully\");\r\n      setIsAddModalVisible(false);\r\n      form.resetFields();\r\n      fetchCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to add category\");\r\n    }\r\n  };\r\n\r\n  const handleEditCategory = async (values) => {\r\n    const isPredefined = predefinedCategories.some(\r\n      (cat) => cat.categoryName === editingCategory.categoryName\r\n    );\r\n\r\n    if (isPredefined && values.categoryName !== editingCategory.categoryName) {\r\n      message.error(\"Cannot change the name of predefined categories\");\r\n      return;\r\n    }\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"categoryName\", values.categoryName);\r\n      if (values.categoryimage && values.categoryimage.file) {\r\n        formData.append(\"categoryimage\", values.categoryimage.file);\r\n      }\r\n\r\n      await axios.post(\r\n        `${API_BASE_URL}/editCategory/${editingCategory._id}`,\r\n        formData,\r\n        {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      message.success(\"Category updated successfully\");\r\n      setIsEditModalVisible(false);\r\n      form.resetFields();\r\n      fetchCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to update category\");\r\n    }\r\n  };\r\n  const handleStatusToggle = async (category) => {\r\n    try {\r\n      const endpoint =\r\n        category.status === \"Active\"\r\n          ? \"changecategoryActiveStatus\"\r\n          : \"changecategoryInactiveStatus\";\r\n      await axios.get(\r\n        `https://majesticmall.net/api/admin/${endpoint}/${category._id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      message.success(\r\n        `Category ${category.status === \"Active\" ? \"blocked\" : \"unblocked\"\r\n        } successfully`\r\n      );\r\n      fetchCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to update product status\");\r\n    }\r\n  };\r\n  const handleDeleteCategory = async (id, categoryName) => {\r\n    const isPredefined = predefinedCategories.some(\r\n      (cat) => cat.categoryName === categoryName\r\n    );\r\n\r\n    if (isPredefined) {\r\n      message.error(\"This category cannot be deleted as it is a predefined category\");\r\n      return;\r\n    }\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/deleteCategory/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      message.success(\"Category deleted successfully\");\r\n      fetchCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to delete category\");\r\n    }\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const dataToExport = filteredCategories.map(\r\n      ({ _id, categoryName, categoryimage }) => ({\r\n        \"Category Name\": categoryName,\r\n        \"Image URL\": `https://majesticmall.net/image/${categoryimage}`,\r\n      })\r\n    );\r\n    const worksheet = XLSX.utils.json_to_sheet(dataToExport);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Categories\");\r\n    XLSX.writeFile(workbook, \"categories.xlsx\");\r\n  };\r\n  const subcategoryCount = categories.length;\r\n  const showDeleteConfirm = (id, categoryName) => {\r\n    const isPredefined = predefinedCategories.some(\r\n      (cat) => cat.categoryName === categoryName\r\n    );\r\n\r\n    if (isPredefined) {\r\n      message.error(\"This category cannot be deleted as it is a predefined category\");\r\n      return;\r\n    }\r\n    confirm({\r\n      title: \"Are you sure you want to delete?\",\r\n      content: \"This action cannot be undone.\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        handleDeleteCategory(id, categoryName);\r\n      },\r\n      onCancel() {\r\n        // console.log(\"Deletion cancelled\");\r\n      },\r\n    });\r\n  };\r\n  const [pagination, setPagination] = useState({ current: 1, pageSize: 10 });\r\n\r\n\r\n  const handleTableChange = (newPagination) => {\r\n    setPagination(newPagination);\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"Serial No.\",\r\n      key: \"serialNo\",\r\n      render: (_, __, index) => (pagination.current - 1) * pagination.pageSize + index + 1,\r\n    },\r\n    {\r\n      title: \"Category Image\",\r\n      dataIndex: \"categoryimage\",\r\n      key: \"categoryimage\",\r\n      render: (image) => (\r\n        <img\r\n          src={`https://majesticmall.net/image/${image}`}\r\n          alt=\"Category\"\r\n          loading=\"lazy\"\r\n          style={{ width: 80, height: 80 }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: `Category (${subcategoryCount})`,\r\n      dataIndex: \"categoryName\",\r\n      key: \"categoryName\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button\r\n            type=\"text\"\r\n            icon={<Edit color=\"blue\" />}\r\n            onClick={() => {\r\n              setEditingCategory(record);\r\n              setIsEditModalVisible(true);\r\n              form.setFieldsValue(record);\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"text\"\r\n            icon={<Trash2 color=\"red\" />}\r\n            onClick={() => showDeleteConfirm(record._id, record?.categoryName)}\r\n          />\r\n          <Button\r\n            type={record.status === \"Active\" ? \"primary\" : \"danger\"}\r\n            onClick={() => handleStatusToggle(record)}\r\n          >\r\n            {record.status === \"Active\" ? \"Active\" : \"Inactive\"}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginBottom: 16,\r\n        }}\r\n      >\r\n        <Title level={3} className=\"title\">\r\n          Categories\r\n        </Title>\r\n\r\n        <Space>\r\n          <Input\r\n            placeholder=\"Search categories\"\r\n            prefix={<SearchOutlined />}\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setIsAddModalVisible(true)}\r\n          >\r\n            Add Category\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<FileSpreadsheet size={16} />}\r\n            onClick={exportToExcel}\r\n          >\r\n            Export to Excel\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={filteredCategories}\r\n        rowKey=\"_id\"\r\n        pagination={{\r\n          ...pagination,\r\n          onChange: (page, pageSize) => handleTableChange({ current: page, pageSize }),\r\n        }}\r\n        scroll={{ x: \"max-content\" }}\r\n        components={{\r\n          header: {\r\n            cell: (props) => (\r\n              <th\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  background: \"linear-gradient(#000,#000,#000)\",\r\n                  color: \"white\",\r\n                }}\r\n              />\r\n            ),\r\n          },\r\n        }}\r\n      />\r\n\r\n      <Modal\r\n        title=\"Add Category\"\r\n        visible={isAddModalVisible}\r\n        onCancel={() => setIsAddModalVisible(false)}\r\n        footer={null}\r\n      >\r\n        <Form form={form} onFinish={handleAddCategory} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"categoryName\"\r\n            label=\"Category Name\"\r\n            rules={[\r\n              { required: true, message: \"Please enter a category name\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"categoryimage\"\r\n            label=\"Category Image\"\r\n            rules={[\r\n              { required: true, message: \"Please upload a category image\" },\r\n            ]}\r\n          >\r\n            <Upload\r\n              accept=\"image/*\"\r\n              listType=\"picture-card\"\r\n              maxCount={1}\r\n              beforeUpload={() => false}\r\n            >\r\n              <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n              </div>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Add Category\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"Edit Category\"\r\n        visible={isEditModalVisible}\r\n        onCancel={() => setIsEditModalVisible(false)}\r\n        footer={null}\r\n      >\r\n        <Form form={form} onFinish={handleEditCategory} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"categoryName\"\r\n            label=\"Category Name\"\r\n            rules={[\r\n              { required: true, message: \"Please enter a category name\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item name=\"categoryimage\" label=\"Category Image\">\r\n            <Upload\r\n              accept=\"image/*\"\r\n              listType=\"picture-card\"\r\n              maxCount={1}\r\n              beforeUpload={() => false}\r\n            >\r\n              <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n              </div>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Update Category\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n"],"names":["confirm","Modal","API_BASE_URL","Title","Typography","predefinedCategories","categoryName","AddCategory","categories","setCategories","useState","isAddModalVisible","setIsAddModalVisible","isEditModalVisible","setIsEditModalVisible","editingCategory","setEditingCategory","form","Form","useForm","searchText","setSearchText","filteredCategories","setFilteredCategories","encryptedToken","Cookies","get","token","CryptoJS","decrypt","process","toString","Utf8","useEffect","fetchCategories","filter","category","Object","values","some","val","toLowerCase","includes","async","response","axios","headers","Authorization","data","error","message","subcategoryCount","length","showDeleteConfirm","id","cat","title","content","okText","okType","cancelText","onOk","delete","success","handleDeleteCategory","onCancel","pagination","setPagination","current","pageSize","columns","key","render","_","__","index","dataIndex","image","_jsx","src","alt","loading","style","width","height","record","_jsxs","Space","children","Button","type","icon","Edit","color","onClick","setFieldsValue","Trash2","_id","status","endpoint","handleStatusToggle","display","justifyContent","marginBottom","level","className","Input","placeholder","prefix","SearchOutlined","value","onChange","e","target","PlusOutlined","FileSpreadsheet","size","exportToExcel","dataToExport","map","_ref","categoryimage","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","Table","dataSource","rowKey","page","scroll","x","components","header","cell","props","background","visible","footer","onFinish","formData","FormData","append","file","post","resetFields","layout","Item","name","label","rules","required","Upload","accept","listType","maxCount","beforeUpload","marginTop","htmlType"],"sourceRoot":""}
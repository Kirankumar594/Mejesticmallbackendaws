{"version":3,"file":"static/js/2464.9735d863.chunk.js","mappings":"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","sources":["components/admin/components/CustomModal.js","components/admin/features/pcategory/pcategoryService.js","components/admin/features/pcategory/pcategorySlice.js","components/admin/pages/Categorylist.js","components/admin/utils/axiosconfig.js","components/admin/utils/baseUrl.js"],"sourcesContent":["import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst CustomModal = (props) => {\r\n  const { open, hideModal, performAction, title } = props;\r\n  return (\r\n    <Modal\r\n      title=\"Confirmation\"\r\n      open={open}\r\n      onOk={performAction}\r\n      onCancel={hideModal}\r\n      okText=\"Ok\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <p>{title}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import axios from \"axios\";\r\nimport { base_url } from \"../../utils/baseUrl\";\r\nimport { config } from \"../../utils/axiosconfig\";\r\n\r\nconst getProductCategories = async () => {\r\n  const response = await axios.get(`${base_url}category/`);\r\n\r\n  return response.data;\r\n};\r\nconst createCategory = async (category) => {\r\n  const response = await axios.post(`${base_url}category/`, category, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst getProductCategory = async (id) => {\r\n  const response = await axios.get(`${base_url}category/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteProductCategory = async (id) => {\r\n  const response = await axios.delete(`${base_url}category/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\nconst updateProductCategory = async (category) => {\r\n  // console.log(category);\r\n  const response = await axios.put(\r\n    `${base_url}category/${category.id}`,\r\n    { title: category.pCatData.title },\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\nconst pCategoryService = {\r\n  getProductCategories,\r\n  createCategory,\r\n  getProductCategory,\r\n  deleteProductCategory,\r\n  updateProductCategory,\r\n};\r\n\r\nexport default pCategoryService;\r\n","import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport pCategoryService from \"./pcategoryService\";\r\n\r\nexport const getCategories = createAsyncThunk(\r\n  \"productCategory/get-categories\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.getProductCategories();\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const createCategory = createAsyncThunk(\r\n  \"productCategory/create-category\",\r\n  async (categoryData, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.createCategory(categoryData);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const updateAProductCategory = createAsyncThunk(\r\n  \"productCategory/update-category\",\r\n  async (category, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.updateProductCategory(category);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteAProductCategory = createAsyncThunk(\r\n  \"productCategory/delete-category\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.deleteProductCategory(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const getAProductCategory = createAsyncThunk(\r\n  \"productCategory/get-product-category\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.getProductCategory(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const resetState = createAction(\"RevertAll\");\r\n\r\nconst initialState = {\r\n  pCategories: [],\r\n  isError: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\nexport const pCategorySlice = createSlice({\r\n  name: \"pCategories\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getCategories.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getCategories.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.pCategories = action.payload;\r\n      })\r\n      .addCase(getCategories.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(createCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.createdCategory = action.payload;\r\n      })\r\n      .addCase(createCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(updateAProductCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateAProductCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.updatedCategory = action.payload;\r\n      })\r\n      .addCase(updateAProductCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(deleteAProductCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteAProductCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.deletedCategory = action.payload;\r\n      })\r\n      .addCase(deleteAProductCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getAProductCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAProductCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.categoryName = action.payload.title;\r\n      })\r\n      .addCase(getAProductCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(resetState, () => initialState);\r\n  },\r\n});\r\nexport default pCategorySlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  deleteAProductCategory,\r\n  getCategories,\r\n  resetState,\r\n} from \"../features/pcategory/pcategorySlice\";\r\nimport CustomModal from \"../components/CustomModal\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"SNo\",\r\n    dataIndex: \"key\",\r\n  },\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n  },\r\n\r\n  {\r\n    title: \"Action\",\r\n    dataIndex: \"action\",\r\n  },\r\n];\r\n\r\nconst Categorylist = () => {\r\n  const [open, setOpen] = useState(false);\r\n  // const [pCatId, setpCatId] = useState(\"\");\r\n  const showModal = (e) => {\r\n    setOpen(true);\r\n    // setpCatId(e);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setOpen(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   dispatch(resetState());\r\n  //   dispatch(getCategories());\r\n  // }, []);\r\n  // const pCatStat = useSelector((state) => state.pCategory.pCategories);\r\n  const data1 = [];\r\n  // for (let i = 0; i < pCatStat.length; i++) {\r\n  //   data1.push({\r\n  //     key: i + 1,\r\n  //     name: pCatStat[i].title,\r\n  //     action: (\r\n  //       <>\r\n  //         <Link\r\n  //           to={`/admin/category/${pCatStat[i]._id}`}\r\n  //           className=\" fs-3 text-danger\"\r\n  //         >\r\n  //           <BiEdit />\r\n  //         </Link>\r\n  //         <button\r\n  //           className=\"ms-3 fs-3 text-danger bg-transparent border-0\"\r\n  //           onClick={() => showModal(pCatStat[i]._id)}\r\n  //         >\r\n  //           <AiFillDelete />\r\n  //         </button>\r\n  //       </>\r\n  //     ),\r\n  //   });\r\n  // }\r\n  // const deleteCategory = (e) => {\r\n  //   dispatch(deleteAProductCategory(e));\r\n  //   setOpen(false);\r\n  //   setTimeout(() => {\r\n  //     dispatch(getCategories());\r\n  //   }, 100);\r\n  // };\r\n  return (\r\n    <div>\r\n      <h3 className=\"mb-4 title\">Product Categories</h3>\r\n      <div>\r\n        <Table columns={columns} dataSource={data1} />\r\n      </div>\r\n      <CustomModal\r\n        hideModal={hideModal}\r\n        open={open}\r\n        // performAction={() => {\r\n        //   deleteCategory(pCatId);\r\n        // }}\r\n        title=\"Are you sure you want to delete this Product Category?\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categorylist;\r\n","import Cookies from \"js-cookie\";\r\nimport CryptoJS from \"crypto-js\";\r\nconst encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\nconst encryptedUser = Cookies.get(\"user\");\r\n\r\nconst getTokenFromLocalStorage = encryptedUser\r\n  ? JSON.parse(\r\n      CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n        CryptoJS.enc.Utf8\r\n      )\r\n    )\r\n  : null;\r\n\r\nexport const config = {\r\n  headers: {\r\n    Authorization: `Bearer ${\r\n      getTokenFromLocalStorage !== null ? getTokenFromLocalStorage.token : \"\"\r\n    }`,\r\n    Accept: \"application/json\",\r\n  },\r\n};\r\n","export const base_url = \"http://localhost:3000/api/\";\r\n"],"names":["props","open","hideModal","performAction","title","_jsx","Modal","onOk","onCancel","okText","cancelText","children","getProductCategories","async","axios","get","base_url","data","createCategory","post","category","config","getProductCategory","id","deleteProductCategory","delete","updateProductCategory","put","pCatData","getCategories","createAsyncThunk","pCategoryService","error","thunkAPI","rejectWithValue","categoryData","updateAProductCategory","deleteAProductCategory","getAProductCategory","resetState","createAction","initialState","pCategories","isError","isLoading","isSuccess","message","createSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","createdCategory","updatedCategory","deletedCategory","categoryName","columns","dataIndex","Categorylist","setOpen","useState","useDispatch","_jsxs","className","Table","dataSource","CustomModal","encryptedUser","Cookies","getTokenFromLocalStorage","JSON","parse","CryptoJS","decrypt","process","toString","Utf8","headers","Authorization","token","Accept"],"sourceRoot":""}
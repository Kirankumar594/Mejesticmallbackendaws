{"version":3,"file":"static/js/5628.cd3e62ee.chunk.js","mappings":"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","sources":["components/clublogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./login.css\";\r\nimport axios from \"axios\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nexport default function ClubLoginForm() {\r\n\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n\r\n  const [successshow, setsuccessshow] = useState(false);\r\n  const handlesuccessClose = () => setsuccessshow(false);\r\n  const handlesuccess = () => setsuccessshow(true);\r\n  const encryptedToken = Cookies.get('token');\r\n  const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n\r\n  const [errorshow, seterrorshow] = useState(false);\r\n  const handleerrorClose = () => seterrorshow(false);\r\n  const handleerror = () => seterrorshow(true);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(true);\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const config = {\r\n        url: \"/user/loginclubUser\",\r\n        method: \"post\",\r\n        baseURL: \"https://majesticmall.net/api\",\r\n        hearder: { \"content-type\": \"application/json\" },\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        data: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n      };\r\n      await axios(config).then(function (res) {\r\n        if (res.status === 200) {\r\n          if (res.data.success.status === \"pending\") {\r\n            toast.info(\"You're account is not approved yet\"\r\n            );\r\n          } else {\r\n            if (res.data) {\r\n              toast.info(\"Login success\"\r\n              );\r\n              const encryptedClube = CryptoJS.AES.encrypt(JSON.stringify(res.data.success), encryptionKey).toString();\r\n              Cookies.set('clubuser', encryptedClube, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n              // localStorage.setItem(\"clubuser\", JSON.stringify(res.data.success));\r\n              window.location.assign(\"/\");\r\n            } else {\r\n              handleerror();\r\n            }\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      toast.info(error.response.data.error\r\n      );\r\n      ////console.log(error.response.data.error);\r\n    }\r\n  };\r\n  const forgetPassword = async () => {\r\n    if (!email) {\r\n      toast.info(\"Please enter email address\"\r\n      );\r\n    } else {\r\n      try {\r\n        const config = {\r\n          url: \"/clubuserForgetPwd\",\r\n          method: \"post\",\r\n          baseURL: \"https://majesticmall.net/api/user\",\r\n          headers: { \"content-type\": \"application/json\" },\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          data: { email: email },\r\n        };\r\n        let res = await axios(config);\r\n        if (res.status === 200) {\r\n          toast.info(\"Successfully sent new password to your mail\"\r\n          );\r\n          window.location.reload(true);\r\n        } else {\r\n          toast.info(\"Something Wrong\"\r\n          );\r\n        }\r\n      } catch (error) {\r\n        if (error.response) {\r\n          toast.info(error.response.data.error\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <div class=\"logo text-center\"></div>\r\n      <div class=\"wrapper\">\r\n        <div class=\"inner-warpper text-center\">\r\n          <h4 class=\"title\">Login to Your Club Account</h4>\r\n\r\n          <div class=\"input-group\">\r\n            <input\r\n              class=\"form-control1\"\r\n              name=\"userName\"\r\n              id=\"userName\"\r\n              type=\"text\"\r\n              placeholder=\"Email / Mobile Number\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            ></input>\r\n            <span class=\"lighting\"></span>\r\n          </div>\r\n          <div className=\"input-group2\">\r\n            <input\r\n              className=\"form-control2\"\r\n              name=\"userPassword\"\r\n              id=\"userPassword\"\r\n              type={!showPassword ? \"text\" : \"password\"}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n            <span\r\n              className=\"password-toggle-icon2\"\r\n              onClick={togglePasswordVisibility}\r\n            >\r\n              <i\r\n                className={showPassword ? \"fas fa-eye\" : \"fas fa-eye-slash\"}\r\n              ></i>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"clearfix supporter\">\r\n            {/* <div class=\"pull-left remember-me\">\r\n          <input id=\"rememberMe\" type=\"checkbox\"/>\r\n          <label for=\"rememberMe\">Remember Me</label>\r\n        </div> */}\r\n            <a class=\"forgot pull-right\" onClick={() => forgetPassword()}>\r\n              Forgot Password?\r\n            </a>\r\n          </div>\r\n          <br />\r\n          <button\r\n            class=\"button1\"\r\n            type=\"submit\"\r\n            id=\"login\"\r\n            onClick={handleClick}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div class=\"signup-wrapper text-center\" style={{ fontSize: \"20px\" }}>\r\n          <a href=\"/clubregister\">\r\n            Don't have an account? <span class=\"text-primary\" style={{ fontSize: \"20px\" }}>Sign up</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        show={successshow}\r\n        onHide={handlesuccess}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton onClick={handlesuccessClose}></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"text-center\">\r\n            <img\r\n              src=\"../img/success.png\"\r\n              loading=\"lazy\"\r\n              style={{ margin: \"auto\" }}\r\n              width=\"100px\"\r\n            />\r\n\r\n            <p>Login Successfully</p>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Modal\r\n        show={errorshow}\r\n        onHide={handleerror}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton onClick={handleerrorClose}></Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"text-center\">\r\n            <img\r\n              loading=\"lazy\"\r\n              src=\"../img/close.png\"\r\n              style={{ margin: \"auto\" }}\r\n              width=\"100px\"\r\n            />\r\n\r\n            <p>Error Occured</p>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ClubLoginForm","encryptionKey","process","successshow","setsuccessshow","useState","encryptedToken","Cookies","get","token","CryptoJS","decrypt","toString","Utf8","errorshow","seterrorshow","handleerror","email","setEmail","password","setPassword","showPassword","setShowPassword","_jsxs","children","_jsx","ToastContainer","class","name","id","type","placeholder","onChange","e","target","value","className","onClick","togglePasswordVisibility","async","config","url","method","baseURL","headers","Authorization","data","axios","status","toast","info","window","location","reload","error","response","forgetPassword","preventDefault","hearder","then","res","success","encryptedClube","encrypt","JSON","stringify","set","expires","secure","sameSite","assign","style","fontSize","href","Modal","show","onHide","handlesuccess","backdrop","keyboard","Header","closeButton","handlesuccessClose","Body","src","loading","margin","width","handleerrorClose"],"sourceRoot":""}
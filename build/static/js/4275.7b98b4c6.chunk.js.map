{"version":3,"file":"static/js/4275.7b98b4c6.chunk.js","mappings":"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","sources":["components/admin/components/CustomInput.js","components/admin/pages/Login.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst CustomInput = (props) => {\r\n  const { type, label, i_id, i_class, name, val, onChng, onBlr ,style} = props;\r\n  return (\r\n    \r\n    <div className=\"form-floating mt-3\">\r\n        <label htmlFor={label}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={`form-control ${i_class}`}\r\n        id={i_id}\r\n        placeholder={label}\r\n        value={val}\r\n        onChange={onChng}\r\n        style={style}\r\n        onBlur={onBlr}\r\n      />\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getMessaging, getToken } from \"firebase/messaging\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\n\r\nconst Login = () => {\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyBn3eGlq2UU4Z5EVnCBOcKTy6UF2WdYGaw\",\r\n    authDomain: \"abhinandhan-43620.firebaseapp.com\",\r\n    projectId: \"abhinandhan-43620\",\r\n    storageBucket: \"abhinandhan-43620.appspot.com\",\r\n    messagingSenderId: \"674275225981\",\r\n    appId: \"1:674275225981:web:8c57cdca0427003658dc14\",\r\n    measurementId: \"G-82D0TPD4PS\"\r\n  };\r\n  const [deviceToken, setdeviceToken] = useState(\"\");\r\n  const app = initializeApp(firebaseConfig);\r\n  const messaging = getMessaging(app);\r\n  function requestPermission() {\r\n    // console.log(\"Requesting permission...\");\r\n    Notification.requestPermission().then((permission) => {\r\n      if (permission === \"granted\") {\r\n        // console.log(\"Notification permission granted.\");\r\n        getToken(messaging, {\r\n          vapidKey:\r\n            \"BBiWNyygG3eiMDLFIwTUdpNlY2Lhk_YC_XdDSFWMI0qhBEJ_s263UOC0zXzn_viyFfO8ywf44zyLMcIk8GLyl_U\",\r\n        }).then((currentToken) => {\r\n          if (currentToken) {\r\n\r\n            setdeviceToken(currentToken)\r\n          } else {\r\n            // console.log(\"Can not get token\");\r\n          }\r\n        });\r\n      } else {\r\n        // console.log(\"Do not have permission!\");\r\n      }\r\n    });\r\n  }\r\n  requestPermission();\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(true);\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n  const [successshow, setsuccessshow] = useState(false);\r\n  const handlesuccessClose = () => setsuccessshow(false);\r\n  const handlesuccess = () => setsuccessshow(true);\r\n\r\n  const [errorshow, seterrorshow] = useState(false);\r\n  const handleerrorClose = () => seterrorshow(false);\r\n  const handleerror = () => seterrorshow(true);\r\n\r\n  // console.log(\"encryptionKey==>\",encryptionKey);\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const config = {\r\n        url: \"/admin/login\",\r\n        method: \"post\",\r\n        baseURL: \"https://majesticmall.net/api\",\r\n        hearder: { \"content-type\": \"application/json\" },\r\n\r\n        data: {\r\n          email: email,\r\n          password: password,\r\n          deviceTokens: deviceToken,\r\n        },\r\n      };\r\n      await axios(config).then(function (res) {\r\n        if (res.status === 200) {\r\n          toast.info(\"Login Success\"\r\n          );\r\n          const encryptedToken = CryptoJS.AES.encrypt(res.data.token, encryptionKey).toString();\r\n          const encryptedAdmin = CryptoJS.AES.encrypt(JSON.stringify(res.data.success), encryptionKey).toString();\r\n          // console.log(\"admin\",encryptedAdmin);\r\n          // Store the encrypted data in cookies\r\n          Cookies.set('admin', encryptedAdmin, { expires: 7, secure: true, sameSite: 'Strict' });\r\n          Cookies.set('token', encryptedToken, { expires: 7, secure: true, sameSite: 'Strict' });\r\n\r\n\r\n          localStorage.setItem(\"admin\", encryptedAdmin);\r\n          // localStorage.setItem(\"token\",res.data.token);\r\n          setTimeout(() => {\r\n            setTimeout(() => {\r\n              window.location.assign(\"/admindashboard\");\r\n            }, 2000);\r\n\r\n          }, 1000);\r\n\r\n\r\n        } else {\r\n          toast.info(\"Something Wrong\"\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n\r\n      toast.info(\"Please enter registered email id or mobile and password!\"\r\n      );\r\n      ////console.log(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-5\" style={{ background: \"#f7c46d\", minHeight: \"100vh\" }}>\r\n      <ToastContainer />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div className=\"p-4 mx-auto my-2 bg-white rounded-3\" style={{ width: \"400px\" }}>\r\n        <h3 className=\"text-center title\">Admin Login</h3>\r\n\r\n        <CustomInput\r\n          type=\"text\"\r\n          label=\"Email Address\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          onChng={(e) => setEmail(e.target.value)}\r\n          val={email}\r\n        />\r\n        <div style={{ position: 'relative', width: '350px' }}>\r\n          <CustomInput\r\n            type={!showPassword ? \"text\" : \"password\"}\r\n            label=\"Password\"\r\n            id=\"pass\"\r\n            name=\"password\"\r\n            onChng={(e) => setPassword(e.target.value)}\r\n            val={password}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n          <i\r\n            className={showPassword ? \"fas fa-eye-slash\" : \"fas fa-eye\"}\r\n            onClick={togglePasswordVisibility}\r\n            style={{\r\n              position: 'absolute',\r\n              right: '10px',\r\n              top: '50%',\r\n              transform: 'translateY(-50%)',\r\n              cursor: 'pointer',\r\n            }}\r\n          ></i>\r\n        </div>\r\n        <button\r\n          className=\"px-3 py-2 mt-2 text-center text-white border-0 fw-bold w-100 text-decoration-none fs-5\"\r\n          style={{ background: \"#f7c46d\" }}\r\n          onClick={login}\r\n        >\r\n          Login\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["props","type","label","i_id","i_class","name","val","onChng","onBlr","style","_jsxs","className","children","_jsx","htmlFor","id","placeholder","value","onChange","onBlur","Login","encryptionKey","process","deviceToken","setdeviceToken","useState","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","getMessaging","Notification","requestPermission","then","permission","getToken","vapidKey","currentToken","useNavigate","email","setEmail","password","setPassword","showPassword","setShowPassword","successshow","setsuccessshow","errorshow","seterrorshow","background","minHeight","ToastContainer","width","CustomInput","e","target","position","onClick","togglePasswordVisibility","right","top","transform","cursor","async","preventDefault","config","url","method","baseURL","hearder","data","deviceTokens","axios","res","status","toast","info","encryptedToken","CryptoJS","encrypt","token","toString","encryptedAdmin","JSON","stringify","success","Cookies","set","expires","secure","sameSite","localStorage","setItem","setTimeout","window","location","assign","error"],"sourceRoot":""}
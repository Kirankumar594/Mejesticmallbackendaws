{"version":3,"file":"static/js/1011.4197e262.chunk.js","mappings":"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","sources":["components/admin/pages/adddisbanner.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Form, Input, Upload, Button, Table, Modal, message, Typography } from 'antd';\r\n// import { PlusOutlined, DeleteOutlined, UploadOutlined } from '@ant-design/icons';\r\n// import { Trash2 } from 'lucide-react';\r\n// import axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n// import CryptoJS from 'crypto-js';\r\n\r\n// const { Title } = Typography;\r\n// const { confirm } = Modal;\r\n\r\n// const API_BASE_URL = 'https://majesticmall.net/api/admin';\r\n\r\n// const AddDiscountBanner = () => {\r\n//   const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n//   const encryptedToken = Cookies.get('token');\r\n//   const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n\r\n//   const [banners, setBanners] = useState([]);\r\n//   const [isAddModalVisible, setIsAddModalVisible] = useState(false);\r\n//   const [form] = Form.useForm();\r\n\r\n//   useEffect(() => {\r\n//     fetchBanners();\r\n//   }, []);\r\n\r\n//   const fetchBanners = async () => {\r\n//     try {\r\n//       const response = await axios.get(`${API_BASE_URL}/getalldiscountbanner`, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//       });\r\n//       setBanners(response.data.banner);\r\n//     } catch (error) {\r\n//       message.error('Failed to fetch banners');\r\n//     }\r\n//   };\r\n\r\n//   const handleAddBanner = async (values) => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append('banner', values.banner.file);\r\n//       formData.append('link', values.type);\r\n\r\n//       await axios.post(`${API_BASE_URL}/adddiscountbanner`, formData, {\r\n//         headers: { 'Content-Type': 'multipart/form-data' }, headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//       });\r\n\r\n//       message.success('Banner added successfully');\r\n//       setIsAddModalVisible(false);\r\n//       form.resetFields();\r\n//       fetchBanners();\r\n//     } catch (error) {\r\n//       message.error('Failed to add banner');\r\n//     }\r\n//   };\r\n//   const showDeleteConfirm = (id) => {\r\n//     confirm({\r\n//       title: \"Are you sure you want to delete?\",\r\n//       content: \"This action cannot be undone.\",\r\n//       okText: \"Yes\",\r\n//       okType: \"danger\",\r\n//       cancelText: \"No\",\r\n//       onOk() {\r\n//         handleDeleteBanner(id);\r\n//       },\r\n//       onCancel() {\r\n//         // console.log(\"Deletion cancelled\");\r\n//       },\r\n//     });\r\n//   };\r\n//   const handleDeleteBanner = async (id) => {\r\n//     try {\r\n//       await axios.delete(`${API_BASE_URL}/deletediscountbanner/${id}`, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//       });\r\n//       message.success('Banner deleted successfully');\r\n//       fetchBanners();\r\n//     } catch (error) {\r\n//       message.error('Failed to delete banner');\r\n//     }\r\n//   };\r\n\r\n//   const columns = [\r\n//     { title: 'Serial No.', dataIndex: 'serialNo', key: 'serialNo' },\r\n//     { title: 'Link', dataIndex: 'link', key: 'link' },\r\n//     {\r\n//       title: 'Banner',\r\n//       dataIndex: 'banner',\r\n//       key: 'banner',\r\n//       render: (banner) => (\r\n//         <img src={`https://majesticmall.net/image/${banner}`} alt=\"Banner\" style={{ width: 200, height: 100 }} loading=\"lazy\" onError={(e) => {\r\n//           e.target.src = '../img/example.jpg'; // Replace with your default image URL\r\n//         }} />\r\n//       ),\r\n//     },\r\n//     {\r\n//       title: 'Action',\r\n//       key: 'action',\r\n//       render: (_, record) => (\r\n//         <Button\r\n//           type=\"text\"\r\n//           icon={<Trash2 color=\"red\" />}\r\n//           onClick={() => showDeleteConfirm(record._id)}\r\n//         />\r\n//       ),\r\n//     },\r\n//   ];\r\n\r\n//   const dataSource = banners.map((banner, index) => ({\r\n//     key: banner._id,\r\n//     serialNo: index + 1,\r\n//     link: banner.link,\r\n//     banner: banner.banner,\r\n//     _id: banner._id,\r\n//   }));\r\n\r\n//   return (\r\n//     <div>\r\n//       <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n//         <Title level={3} className=\"title\">Discount Banners</Title>\r\n//         <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => setIsAddModalVisible(true)}>\r\n//           Add Banner\r\n//         </Button>\r\n//       </div>\r\n\r\n//       <Table columns={columns} dataSource={dataSource} pagination={{\r\n//         pageSize: 10,\r\n//         ////showSizeChanger: true,  \r\n//       }}\r\n//         scroll={{ x: \"max-content\" }}\r\n//         components={{\r\n//           header: {\r\n//             cell: (props) => (\r\n//               <th\r\n//                 {...props}\r\n//                 style={{\r\n//                   ...props.style,\r\n//                   background: \"linear-gradient(#000,#000,#000)\",\r\n//                   color: \"white\",\r\n//                 }}\r\n//               />\r\n//             ),\r\n//           },\r\n//         }} />\r\n\r\n//       <Modal\r\n//         title=\"Add Banner\"\r\n//         visible={isAddModalVisible}\r\n//         onCancel={() => setIsAddModalVisible(false)}\r\n//         footer={null}\r\n//       >\r\n//         <Form form={form} onFinish={handleAddBanner} layout=\"vertical\">\r\n//           <Form.Item\r\n//             name=\"banner\"\r\n//             label=\"Banner Image\"\r\n//             rules={[{ required: true, message: 'Please upload a banner image' }]}\r\n//           >\r\n//             <Upload accept=\"image/*\" listType=\"picture-card\" maxCount={1} beforeUpload={() => false}>\r\n//               <div>\r\n//                 <PlusOutlined />\r\n//                 <div style={{ marginTop: 8 }}>Upload</div>\r\n//               </div>\r\n//             </Upload>\r\n//           </Form.Item>\r\n//           <Form.Item\r\n//             name=\"type\"\r\n//             label=\"Title\"\r\n//             rules={[{ required: true, message: 'Please enter a title' }]}\r\n//           >\r\n//             <Input />\r\n//           </Form.Item>\r\n//           <Form.Item>\r\n//             <Button type=\"primary\" htmlType=\"submit\">\r\n//               Add Banner\r\n//             </Button>\r\n//           </Form.Item>\r\n//         </Form>\r\n//       </Modal>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddDiscountBanner;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Upload, Button, Table, Modal, message, Typography } from 'antd';\r\nimport { PlusOutlined, DeleteOutlined, UploadOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { Trash2 } from 'lucide-react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst { Title } = Typography;\r\nconst { confirm } = Modal;\r\n\r\nconst API_BASE_URL = 'https://majesticmall.net/api/admin';\r\n\r\nconst AddDiscountBanner = () => {\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const encryptedToken = Cookies.get('token');\r\n  const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n\r\n  const [banners, setBanners] = useState([]);\r\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\r\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n  const [currentBanner, setCurrentBanner] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [editForm] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    fetchBanners();\r\n  }, []);\r\n\r\n  const fetchBanners = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/getalldiscountbanner`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setBanners(response.data.banner);\r\n    } catch (error) {\r\n      message.error('Failed to fetch banners');\r\n    }\r\n  };\r\n\r\n  const handleAddBanner = async (values) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('banner', values.banner.file);\r\n      formData.append('link', values.type);\r\n\r\n      await axios.post(`${API_BASE_URL}/adddiscountbanner`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      message.success('Banner added successfully');\r\n      setIsAddModalVisible(false);\r\n      form.resetFields();\r\n      fetchBanners();\r\n    } catch (error) {\r\n      message.error('Failed to add banner');\r\n    }\r\n  };\r\n\r\n  const handleEditBanner = async (values) => {\r\n    try {\r\n      const formData = new FormData();\r\n      if (values.banner && values.banner.file) {\r\n        formData.append('banner', values.banner.file);\r\n      }\r\n      formData.append('link', values.type);\r\n\r\n      await axios.put(`${API_BASE_URL}/updatediscountbanner/${currentBanner._id}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      message.success('Banner updated successfully');\r\n      setIsEditModalVisible(false);\r\n      editForm.resetFields();\r\n      fetchBanners();\r\n    } catch (error) {\r\n      message.error('Failed to update banner');\r\n    }\r\n  };\r\n\r\n  const showEditModal = (banner) => {\r\n    setCurrentBanner(banner);\r\n    editForm.setFieldsValue({\r\n      type: banner.link,\r\n      // Note: For the image, we'll handle it separately in the Upload component\r\n    });\r\n    setIsEditModalVisible(true);\r\n  };\r\n\r\n  const showDeleteConfirm = (id) => {\r\n    confirm({\r\n      title: \"Are you sure you want to delete?\",\r\n      content: \"This action cannot be undone.\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        handleDeleteBanner(id);\r\n      },\r\n      onCancel() {\r\n        // console.log(\"Deletion cancelled\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDeleteBanner = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/deletediscountbanner/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      message.success('Banner deleted successfully');\r\n      fetchBanners();\r\n    } catch (error) {\r\n      message.error('Failed to delete banner');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'Serial No.', dataIndex: 'serialNo', key: 'serialNo' },\r\n    { title: 'Link', dataIndex: 'link', key: 'link' },\r\n    {\r\n      title: 'Banner',\r\n      dataIndex: 'banner',\r\n      key: 'banner',\r\n      render: (banner) => (\r\n        <img\r\n          src={`https://majesticmall.net/image/${banner}`}\r\n          alt=\"Banner\"\r\n          style={{ width: 200, height: 100 }}\r\n          loading=\"lazy\"\r\n          onError={(e) => {\r\n            e.target.src = '../img/example.jpg';\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <div style={{ display: 'flex', gap: '8px' }}>\r\n          <Button\r\n            type=\"text\"\r\n            icon={<EditOutlined />}\r\n            onClick={() => showEditModal(record)}\r\n          />\r\n          <Button\r\n            type=\"text\"\r\n            icon={<Trash2 color=\"red\" />}\r\n            onClick={() => showDeleteConfirm(record._id)}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const dataSource = banners.map((banner, index) => ({\r\n    key: banner._id,\r\n    serialNo: index + 1,\r\n    link: banner.link,\r\n    banner: banner.banner,\r\n    _id: banner._id,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n        <Title level={3} className=\"title\">Discount Banners</Title>\r\n        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => setIsAddModalVisible(true)}>\r\n          Add Banner\r\n        </Button>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        pagination={{\r\n          pageSize: 10,\r\n        }}\r\n        scroll={{ x: \"max-content\" }}\r\n        components={{\r\n          header: {\r\n            cell: (props) => (\r\n              <th\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  background: \"linear-gradient(#5C870C,#5C870C,#5C870C)\",\r\n                  color: \"white\",\r\n                }}\r\n              />\r\n            ),\r\n          },\r\n        }}\r\n      />\r\n\r\n      {/* Add Banner Modal */}\r\n      <Modal\r\n        title=\"Add Banner\"\r\n        visible={isAddModalVisible}\r\n        onCancel={() => setIsAddModalVisible(false)}\r\n        footer={null}\r\n      >\r\n        <Form form={form} onFinish={handleAddBanner} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"banner\"\r\n            label=\"Banner Image\"\r\n            rules={[{ required: true, message: 'Please upload a banner image' }]}\r\n          >\r\n            <Upload accept=\"image/*\" listType=\"picture-card\" maxCount={1} beforeUpload={() => false}>\r\n              <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n              </div>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"type\"\r\n            label=\"Title\"\r\n            rules={[{ required: true, message: 'Please enter a title' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Add Banner\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      {/* Edit Banner Modal */}\r\n      <Modal\r\n        title=\"Edit Banner\"\r\n        visible={isEditModalVisible}\r\n        onCancel={() => setIsEditModalVisible(false)}\r\n        footer={null}\r\n      >\r\n        <Form form={editForm} onFinish={handleEditBanner} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"banner\"\r\n            label=\"Banner Image\"\r\n          // valuePropName=\"fileList\"\r\n          // getValueFromEvent={(e) => {\r\n          //     if (Array.isArray(e)) {\r\n          //         return e;\r\n          //     }\r\n          //     return e && e.fileList;\r\n          // }}\r\n          >\r\n            <Upload\r\n              accept=\"image/*\"\r\n              listType=\"picture-card\"\r\n              maxCount={1}\r\n              beforeUpload={() => false}\r\n              defaultFileList={\r\n                currentBanner\r\n                  ? [\r\n                    {\r\n                      uid: '-1',\r\n                      name: 'current-banner',\r\n                      status: 'done',\r\n                      url: `https://majesticmall.net/image/${currentBanner.banner}`,\r\n                    },\r\n                  ]\r\n                  : []\r\n              }\r\n            >\r\n              <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n              </div>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"type\"\r\n            label=\"Title\"\r\n            rules={[{ required: true, message: 'Please enter a title' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Update Banner\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddDiscountBanner;"],"names":["Title","Typography","confirm","Modal","API_BASE_URL","AddDiscountBanner","encryptedToken","Cookies","get","token","CryptoJS","decrypt","process","toString","Utf8","banners","setBanners","useState","isAddModalVisible","setIsAddModalVisible","isEditModalVisible","setIsEditModalVisible","currentBanner","setCurrentBanner","form","Form","useForm","editForm","useEffect","fetchBanners","async","response","axios","headers","Authorization","data","banner","error","message","handleDeleteBanner","delete","id","success","columns","title","dataIndex","key","render","_jsx","src","alt","style","width","height","loading","onError","e","target","_","record","_jsxs","display","gap","children","Button","type","icon","EditOutlined","onClick","showEditModal","setFieldsValue","link","Trash2","color","showDeleteConfirm","_id","content","okText","okType","cancelText","onOk","onCancel","dataSource","map","index","serialNo","justifyContent","marginBottom","level","className","PlusOutlined","Table","pagination","pageSize","scroll","x","components","header","cell","props","background","visible","footer","onFinish","formData","FormData","append","values","file","post","resetFields","layout","Item","name","label","rules","required","Upload","accept","listType","maxCount","beforeUpload","marginTop","Input","htmlType","put","defaultFileList","uid","status","url"],"sourceRoot":""}
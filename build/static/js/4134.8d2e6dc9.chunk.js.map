{"version":3,"file":"static/js/4134.8d2e6dc9.chunk.js","mappings":"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","sources":["components/admin/components/CustomInput.js","components/admin/features/color/colorService.js","components/admin/features/color/colorSlice.js","components/admin/pages/Addcolor.js","components/admin/utils/axiosconfig.js","components/admin/utils/baseUrl.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst CustomInput = (props) => {\r\n  const { type, label, i_id, i_class, name, val, onChng, onBlr ,style} = props;\r\n  return (\r\n    \r\n    <div className=\"form-floating mt-3\">\r\n        <label htmlFor={label}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={`form-control ${i_class}`}\r\n        id={i_id}\r\n        placeholder={label}\r\n        value={val}\r\n        onChange={onChng}\r\n        style={style}\r\n        onBlur={onBlr}\r\n      />\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","import axios from \"axios\";\r\nimport { base_url } from \"../../utils/baseUrl\";\r\nimport { config } from \"../../utils/axiosconfig\";\r\n\r\nconst getColors = async () => {\r\n  const response = await axios.get(`${base_url}color/`);\r\n\r\n  return response.data;\r\n};\r\nconst createColor = async (color) => {\r\n  const response = await axios.post(`${base_url}color/`, color, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst updateColor = async (color) => {\r\n  const response = await axios.put(\r\n    `${base_url}color/${color.id}`,\r\n    { title: color.colorData.title },\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\nconst getColor = async (id) => {\r\n  const response = await axios.get(`${base_url}color/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteColor = async (id) => {\r\n  const response = await axios.delete(`${base_url}color/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\nconst colorService = {\r\n  getColors,\r\n  createColor,\r\n  updateColor,\r\n  getColor,\r\n  deleteColor,\r\n};\r\n\r\nexport default colorService;\r\n","import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport colorService from \"./colorService\";\r\n\r\nexport const getColors = createAsyncThunk(\r\n  \"color/get-colors\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await colorService.getColors();\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const createColor = createAsyncThunk(\r\n  \"color/create-color\",\r\n  async (colorData, thunkAPI) => {\r\n    try {\r\n      return await colorService.createColor(colorData);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAColor = createAsyncThunk(\r\n  \"color/get-color\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await colorService.getColor(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const updateAColor = createAsyncThunk(\r\n  \"color/update-color\",\r\n  async (color, thunkAPI) => {\r\n    try {\r\n      return await colorService.updateColor(color);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteAColor = createAsyncThunk(\r\n  \"color/delete-color\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await colorService.deleteColor(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const resetState = createAction(\"Reset_all\");\r\n\r\nconst initialState = {\r\n  colors: [],\r\n  isError: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\nexport const colorSlice = createSlice({\r\n  name: \"colors\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getColors.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getColors.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.colors = action.payload;\r\n      })\r\n      .addCase(getColors.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(createColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.createdColor = action.payload;\r\n      })\r\n      .addCase(createColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(updateAColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateAColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.updatedColor = action.payload;\r\n      })\r\n      .addCase(updateAColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getAColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.colorName = action.payload.title;\r\n      })\r\n      .addCase(getAColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(deleteAColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteAColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.deletedColor = action.payload.title;\r\n      })\r\n      .addCase(deleteAColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(resetState, () => initialState);\r\n  },\r\n});\r\nexport default colorSlice.reducer;\r\n","import { React, useEffect } from \"react\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  createColor,\r\n  getAColor,\r\n  resetState,\r\n  updateAColor,\r\n} from \"../features/color/colorSlice\";\r\nlet schema = yup.object().shape({\r\n  title: yup.string().required(\"Color is Required\"),\r\n});\r\nconst Addcolor = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const getColorId = location.pathname.split(\"/\")[3];\r\n  const newColor = useSelector((state) => state.color);\r\n  const {\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    createdColor,\r\n    updatedColor,\r\n    colorName,\r\n  } = newColor;\r\n  useEffect(() => {\r\n    if (getColorId !== undefined) {\r\n      dispatch(getAColor(getColorId));\r\n    } else {\r\n      dispatch(resetState());\r\n    }\r\n  }, [getColorId]);\r\n  useEffect(() => {\r\n    if (isSuccess && createdColor) {\r\n      toast.success(\"Color Added Successfullly!\");\r\n    }\r\n    if (isSuccess && updatedColor) {\r\n      toast.success(\"Color Updated Successfullly!\");\r\n      navigate(\"/admin/list-color\");\r\n    }\r\n    if (isError) {\r\n      toast.error(\"Something Went Wrong!\");\r\n    }\r\n  }, [isSuccess, isError, isLoading, createdColor]);\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      title: colorName || \"\",\r\n    },\r\n    validationSchema: schema,\r\n    onSubmit: (values) => {\r\n      if (getColorId !== undefined) {\r\n        const data = { id: getColorId, colorData: values };\r\n        dispatch(updateAColor(data));\r\n        dispatch(resetState());\r\n      } else {\r\n        dispatch(createColor(values));\r\n        formik.resetForm();\r\n        setTimeout(() => {\r\n          dispatch(resetState());\r\n        }, 300);\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <div>\r\n      <h3 className=\"mb-4 title\">\r\n        {getColorId !== undefined ? \"Edit\" : \"Add\"} Color\r\n      </h3>\r\n      <div>\r\n        <form action=\"\" onSubmit={formik.handleSubmit}>\r\n          <CustomInput\r\n            type=\"color\"\r\n            label=\"Enter Product Color\"\r\n            onChng={formik.handleChange(\"title\")}\r\n            onBlr={formik.handleBlur(\"title\")}\r\n            val={formik.values.title}\r\n            id=\"color\"\r\n          />\r\n          <div className=\"error\">\r\n            {formik.touched.title && formik.errors.title}\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success border-0 rounded-3 my-5\"\r\n            type=\"submit\"\r\n          >\r\n            {getColorId !== undefined ? \"Edit\" : \"Add\"} Color\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addcolor;\r\n","import Cookies from \"js-cookie\";\r\nimport CryptoJS from \"crypto-js\";\r\nconst encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\nconst encryptedUser = Cookies.get(\"user\");\r\n\r\nconst getTokenFromLocalStorage = encryptedUser\r\n  ? JSON.parse(\r\n      CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n        CryptoJS.enc.Utf8\r\n      )\r\n    )\r\n  : null;\r\n\r\nexport const config = {\r\n  headers: {\r\n    Authorization: `Bearer ${\r\n      getTokenFromLocalStorage !== null ? getTokenFromLocalStorage.token : \"\"\r\n    }`,\r\n    Accept: \"application/json\",\r\n  },\r\n};\r\n","export const base_url = \"http://localhost:3000/api/\";\r\n"],"names":["props","type","label","i_id","i_class","name","val","onChng","onBlr","style","_jsxs","className","children","_jsx","htmlFor","id","placeholder","value","onChange","onBlur","getColors","async","axios","get","base_url","data","createColor","post","color","config","updateColor","put","title","colorData","getColor","deleteColor","delete","createAsyncThunk","colorService","error","thunkAPI","rejectWithValue","getAColor","updateAColor","deleteAColor","resetState","createAction","initialState","colors","isError","isLoading","isSuccess","message","createSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","createdColor","updatedColor","colorName","deletedColor","schema","yup","shape","required","Addcolor","dispatch","useDispatch","navigate","useNavigate","getColorId","useLocation","pathname","split","newColor","useSelector","useEffect","undefined","toast","success","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","values","resetForm","setTimeout","handleSubmit","CustomInput","handleChange","handleBlur","touched","errors","encryptedUser","Cookies","getTokenFromLocalStorage","JSON","parse","CryptoJS","decrypt","process","toString","Utf8","headers","Authorization","token","Accept"],"sourceRoot":""}
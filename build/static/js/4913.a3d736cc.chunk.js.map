{"version":3,"file":"static/js/4913.a3d736cc.chunk.js","mappings":"gJAEA,MAqBA,EArBqBA,IACnB,MAAM,KAAEC,EAAI,MAAEC,EAAK,KAAEC,EAAI,QAAEC,EAAO,KAAEC,EAAI,IAAEC,EAAG,OAAEC,EAAM,MAAEC,EAAK,MAAEC,GAAST,EACvE,OAEEU,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAOC,QAASZ,EAAMU,SAAEV,KAC1BW,EAAAA,EAAAA,KAAA,SACEZ,KAAMA,EACNU,UAAW,gBAAgBP,IAC3BW,GAAIZ,EACJa,YAAad,EACbe,MAAOX,EACPY,SAAUX,EACVE,MAAOA,EACPU,OAAQX,MAGN,C,kECfV,MAwCA,EARyB,CACvBY,qBAjC2BC,gBACJC,EAAAA,EAAMC,IAAI,GAAGC,EAAAA,eAEpBC,KA+BhBC,eA7BqBL,gBACEC,EAAAA,EAAMK,KAAK,GAAGH,EAAAA,aAAqBI,EAAUC,EAAAA,IAEpDJ,KA2BhBK,mBAxByBT,gBACFC,EAAAA,EAAMC,IAAI,GAAGC,EAAAA,aAAoBT,IAAMc,EAAAA,IAE9CJ,KAsBhBM,sBAnB4BV,gBACLC,EAAAA,EAAMU,OAAO,GAAGR,EAAAA,aAAoBT,IAAMc,EAAAA,IAEjDJ,KAiBhBQ,sBAf4BZ,gBAELC,EAAAA,EAAMY,IAC3B,GAAGV,EAAAA,aAAoBI,EAASb,KAChC,CAAEoB,MAAOP,EAASQ,SAASD,OAC3BN,EAAAA,IAGcJ,MC/BLY,GAAgBC,EAAAA,EAAAA,IAC3B,kCACAjB,UACE,IACE,aAAakB,EAAiBnB,sBAChC,CAAE,MAAOoB,GACP,OAAOC,EAASC,gBAAgBF,EAClC,KAGSd,GAAiBY,EAAAA,EAAAA,IAC5B,mCACAjB,MAAOsB,EAAcF,KACnB,IACE,aAAaF,EAAiBb,eAAeiB,EAC/C,CAAE,MAAOH,GACP,OAAOC,EAASC,gBAAgBF,EAClC,KAGSI,GAAyBN,EAAAA,EAAAA,IACpC,mCACAjB,MAAOO,EAAUa,KACf,IACE,aAAaF,EAAiBN,sBAAsBL,EACtD,CAAE,MAAOY,GACP,OAAOC,EAASC,gBAAgBF,EAClC,KAISK,GAAyBP,EAAAA,EAAAA,IACpC,mCACAjB,MAAON,EAAI0B,KACT,IACE,aAAaF,EAAiBR,sBAAsBhB,EACtD,CAAE,MAAOyB,GACP,OAAOC,EAASC,gBAAgBF,EAClC,KAGSM,GAAsBR,EAAAA,EAAAA,IACjC,wCACAjB,MAAON,EAAI0B,KACT,IACE,aAAaF,EAAiBT,mBAAmBf,EACnD,CAAE,MAAOyB,GACP,OAAOC,EAASC,gBAAgBF,EAClC,KAGSO,GAAaC,EAAAA,EAAAA,IAAa,aAEjCC,EAAe,CACnBC,YAAa,GACbC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,QAAS,KAEmBC,EAAAA,EAAAA,IAAY,CACxClD,KAAM,cACN4C,eACAO,SAAU,CAAC,EACXC,cAAgBC,IACdA,EACGC,QAAQtB,EAAcuB,SAAUC,IAC/BA,EAAMT,WAAY,CAAI,IAEvBO,QAAQtB,EAAcyB,WAAW,CAACD,EAAOE,KACxCF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMX,YAAca,EAAOC,OAAO,IAEnCL,QAAQtB,EAAc4B,UAAU,CAACJ,EAAOE,KACvCF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMP,QAAUS,EAAOvB,KAAK,IAE7BmB,QAAQjC,EAAekC,SAAUC,IAChCA,EAAMT,WAAY,CAAI,IAEvBO,QAAQjC,EAAeoC,WAAW,CAACD,EAAOE,KACzCF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMK,gBAAkBH,EAAOC,OAAO,IAEvCL,QAAQjC,EAAeuC,UAAU,CAACJ,EAAOE,KACxCF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMP,QAAUS,EAAOvB,KAAK,IAE7BmB,QAAQf,EAAuBgB,SAAUC,IACxCA,EAAMT,WAAY,CAAI,IAEvBO,QAAQf,EAAuBkB,WAAW,CAACD,EAAOE,KACjDF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMM,gBAAkBJ,EAAOC,OAAO,IAEvCL,QAAQf,EAAuBqB,UAAU,CAACJ,EAAOE,KAChDF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMP,QAAUS,EAAOvB,KAAK,IAE7BmB,QAAQd,EAAuBe,SAAUC,IACxCA,EAAMT,WAAY,CAAI,IAEvBO,QAAQd,EAAuBiB,WAAW,CAACD,EAAOE,KACjDF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMO,gBAAkBL,EAAOC,OAAO,IAEvCL,QAAQd,EAAuBoB,UAAU,CAACJ,EAAOE,KAChDF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMP,QAAUS,EAAOvB,KAAK,IAE7BmB,QAAQb,EAAoBc,SAAUC,IACrCA,EAAMT,WAAY,CAAI,IAEvBO,QAAQb,EAAoBgB,WAAW,CAACD,EAAOE,KAC9CF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMQ,aAAeN,EAAOC,QAAQ7B,KAAK,IAE1CwB,QAAQb,EAAoBmB,UAAU,CAACJ,EAAOE,KAC7CF,EAAMT,WAAY,EAClBS,EAAMV,SAAU,EAChBU,EAAMR,WAAY,EAClBQ,EAAMP,QAAUS,EAAOvB,KAAK,IAE7BmB,QAAQZ,GAAY,IAAME,GAAa,IAGT,O,qICrIrC,MAoFA,EApFeqB,MACIC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MAiDjB,OACE/D,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAaC,SAC0B,kBAGrDC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAAA,QAAMqD,OAAO,GAAEnD,SAAA,EACbC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAW,CACVzE,KAAK,OACLC,MAAM,yBAINa,GAAG,WAKLF,EAAAA,EAAAA,KAAA,UACEF,UAAU,0CACVV,KAAK,SAAQW,SAEsC,wBAKrD,C,qEC5FV,MACM+D,EAAgBC,EAAAA,EAAQrD,IAAI,QAE5BsD,EAA2BF,EAC7BG,KAAKC,MACHC,IAAAA,IAAaC,QAAQN,EALLO,iBAKmCC,SACjDH,IAAAA,IAAaI,OAGjB,KAESvD,EAAS,CACpBwD,QAAS,CACPC,cAAe,UACgB,OAA7BT,EAAoCA,EAAyBU,MAAQ,KAEvEC,OAAQ,oB,mCClBL,MAAMhE,EAAW,4B","sources":["components/admin/components/CustomInput.js","components/admin/features/pcategory/pcategoryService.js","components/admin/features/pcategory/pcategorySlice.js","components/admin/pages/Addcat.js","components/admin/utils/axiosconfig.js","components/admin/utils/baseUrl.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst CustomInput = (props) => {\r\n  const { type, label, i_id, i_class, name, val, onChng, onBlr ,style} = props;\r\n  return (\r\n    \r\n    <div className=\"form-floating mt-3\">\r\n        <label htmlFor={label}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={`form-control ${i_class}`}\r\n        id={i_id}\r\n        placeholder={label}\r\n        value={val}\r\n        onChange={onChng}\r\n        style={style}\r\n        onBlur={onBlr}\r\n      />\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","import axios from \"axios\";\r\nimport { base_url } from \"../../utils/baseUrl\";\r\nimport { config } from \"../../utils/axiosconfig\";\r\n\r\nconst getProductCategories = async () => {\r\n  const response = await axios.get(`${base_url}category/`);\r\n\r\n  return response.data;\r\n};\r\nconst createCategory = async (category) => {\r\n  const response = await axios.post(`${base_url}category/`, category, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst getProductCategory = async (id) => {\r\n  const response = await axios.get(`${base_url}category/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteProductCategory = async (id) => {\r\n  const response = await axios.delete(`${base_url}category/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\nconst updateProductCategory = async (category) => {\r\n  // console.log(category);\r\n  const response = await axios.put(\r\n    `${base_url}category/${category.id}`,\r\n    { title: category.pCatData.title },\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\nconst pCategoryService = {\r\n  getProductCategories,\r\n  createCategory,\r\n  getProductCategory,\r\n  deleteProductCategory,\r\n  updateProductCategory,\r\n};\r\n\r\nexport default pCategoryService;\r\n","import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport pCategoryService from \"./pcategoryService\";\r\n\r\nexport const getCategories = createAsyncThunk(\r\n  \"productCategory/get-categories\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.getProductCategories();\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const createCategory = createAsyncThunk(\r\n  \"productCategory/create-category\",\r\n  async (categoryData, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.createCategory(categoryData);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const updateAProductCategory = createAsyncThunk(\r\n  \"productCategory/update-category\",\r\n  async (category, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.updateProductCategory(category);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteAProductCategory = createAsyncThunk(\r\n  \"productCategory/delete-category\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.deleteProductCategory(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const getAProductCategory = createAsyncThunk(\r\n  \"productCategory/get-product-category\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await pCategoryService.getProductCategory(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const resetState = createAction(\"RevertAll\");\r\n\r\nconst initialState = {\r\n  pCategories: [],\r\n  isError: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\nexport const pCategorySlice = createSlice({\r\n  name: \"pCategories\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getCategories.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getCategories.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.pCategories = action.payload;\r\n      })\r\n      .addCase(getCategories.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(createCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.createdCategory = action.payload;\r\n      })\r\n      .addCase(createCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(updateAProductCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateAProductCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.updatedCategory = action.payload;\r\n      })\r\n      .addCase(updateAProductCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(deleteAProductCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteAProductCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.deletedCategory = action.payload;\r\n      })\r\n      .addCase(deleteAProductCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getAProductCategory.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAProductCategory.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.categoryName = action.payload.title;\r\n      })\r\n      .addCase(getAProductCategory.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(resetState, () => initialState);\r\n  },\r\n});\r\nexport default pCategorySlice.reducer;\r\n","import { React, useEffect } from \"react\";\r\nimport CustomInput from \"../components/CustomInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport {\r\n  createCategory,\r\n  getAProductCategory,\r\n  resetState,\r\n  updateAProductCategory,\r\n} from \"../features/pcategory/pcategorySlice\";\r\n\r\nconst Addcat = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  // const newCategory = useSelector((state) => state.pCategory);\r\n  // const {\r\n  //   isSuccess,\r\n  //   isError,\r\n  //   isLoading,\r\n  //   createdCategory,\r\n  //   categoryName,\r\n  //   updatedCategory,\r\n  // } = newCategory;\r\n  // useEffect(() => {\r\n  //   if (getPCatId !== undefined) {\r\n  //     dispatch(getAProductCategory(getPCatId));\r\n  //   } else {\r\n  //     dispatch(resetState());\r\n  //   }\r\n  // }, [getPCatId]);\r\n  // useEffect(() => {\r\n  //   if (isSuccess && createdCategory) {\r\n  //     toast.success(\"Category Added Successfullly!\");\r\n  //   }\r\n  //   if (isSuccess && updatedCategory) {\r\n  //     toast.success(\"Category Updated Successfullly!\");\r\n  //     navigate(\"/admin/list-category\");\r\n  //   }\r\n  //   if (isError) {\r\n  //     toast.error(\"Something Went Wrong!\");\r\n  //   }\r\n  // }, [isSuccess, isError, isLoading]);\r\n  // const formik = useFormik({\r\n  //   enableReinitialize: true,\r\n  //   initialValues: {\r\n  //     title: categoryName || \"\",\r\n  //   },\r\n  //   validationSchema: schema,\r\n  //   onSubmit: (values) => {\r\n  //     if (getPCatId !== undefined) {\r\n  //       const data = { id: getPCatId, pCatData: values };\r\n  //       dispatch(updateAProductCategory(data));\r\n  //       dispatch(resetState());\r\n  //     } else {\r\n  //       dispatch(createCategory(values));\r\n  //       formik.resetForm();\r\n  //       setTimeout(() => {\r\n  //         dispatch(resetState());\r\n  //       }, 300);\r\n  //     }\r\n  //   },\r\n  // });\r\n  return (\r\n    <div>\r\n      <h3 className=\"mb-4  title\">\r\n        {/* {getPCatId !== undefined ? \"Edit\" : \"Add\"}  */}\r\n        Add Category\r\n      </h3>\r\n      <div>\r\n        <form action=\"\">\r\n          <CustomInput\r\n            type=\"text\"\r\n            label=\"Enter Product Category\"\r\n            // onChng={formik.handleChange(\"title\")}\r\n            // onBlr={formik.handleBlur(\"title\")}\r\n            // val={formik.values.title}\r\n            id=\"brand\"\r\n          />\r\n          {/* <div className=\"error\">\r\n            {formik.touched.title && formik.errors.title}\r\n          </div> */}\r\n          <button\r\n            className=\"btn btn-success border-0 rounded-3 my-5\"\r\n            type=\"submit\"\r\n          >\r\n            {/* {getPCatId !== undefined ? \"Edit\" : \"Add\"}  */}\r\n            Add Category\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Addcat;\r\n","import Cookies from \"js-cookie\";\r\nimport CryptoJS from \"crypto-js\";\r\nconst encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\nconst encryptedUser = Cookies.get(\"user\");\r\n\r\nconst getTokenFromLocalStorage = encryptedUser\r\n  ? JSON.parse(\r\n      CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n        CryptoJS.enc.Utf8\r\n      )\r\n    )\r\n  : null;\r\n\r\nexport const config = {\r\n  headers: {\r\n    Authorization: `Bearer ${\r\n      getTokenFromLocalStorage !== null ? getTokenFromLocalStorage.token : \"\"\r\n    }`,\r\n    Accept: \"application/json\",\r\n  },\r\n};\r\n","export const base_url = \"http://localhost:3000/api/\";\r\n"],"names":["props","type","label","i_id","i_class","name","val","onChng","onBlr","style","_jsxs","className","children","_jsx","htmlFor","id","placeholder","value","onChange","onBlur","getProductCategories","async","axios","get","base_url","data","createCategory","post","category","config","getProductCategory","deleteProductCategory","delete","updateProductCategory","put","title","pCatData","getCategories","createAsyncThunk","pCategoryService","error","thunkAPI","rejectWithValue","categoryData","updateAProductCategory","deleteAProductCategory","getAProductCategory","resetState","createAction","initialState","pCategories","isError","isLoading","isSuccess","message","createSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","createdCategory","updatedCategory","deletedCategory","categoryName","Addcat","useDispatch","useLocation","useNavigate","CustomInput","encryptedUser","Cookies","getTokenFromLocalStorage","JSON","parse","CryptoJS","decrypt","process","toString","Utf8","headers","Authorization","token","Accept"],"sourceRoot":""}
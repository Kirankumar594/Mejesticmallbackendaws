{"version":3,"file":"static/js/5463.6605dacf.chunk.js","mappings":"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","sources":["components/admin/components/CustomModal.js","components/admin/features/brand/brandService.js","components/admin/features/brand/brandSlice.js","components/admin/pages/Brandlist.js","components/admin/utils/axiosconfig.js","components/admin/utils/baseUrl.js"],"sourcesContent":["import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst CustomModal = (props) => {\r\n  const { open, hideModal, performAction, title } = props;\r\n  return (\r\n    <Modal\r\n      title=\"Confirmation\"\r\n      open={open}\r\n      onOk={performAction}\r\n      onCancel={hideModal}\r\n      okText=\"Ok\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <p>{title}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import axios from \"axios\";\r\nimport { config } from \"../../utils/axiosconfig\";\r\nimport { base_url } from \"../../utils/baseUrl\";\r\nconst getBrands = async () => {\r\n  const response = await axios.get(`${base_url}brand/`);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst createBrand = async (brand) => {\r\n  const response = await axios.post(`${base_url}brand/`, brand, config);\r\n\r\n  return response.data;\r\n};\r\nconst updateBrand = async (brand) => {\r\n  const response = await axios.put(\r\n    `${base_url}brand/${brand.id}`,\r\n    { title: brand.brandData.title },\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\nconst getBrand = async (id) => {\r\n  const response = await axios.get(`${base_url}brand/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteBrand = async (id) => {\r\n  const response = await axios.delete(`${base_url}brand/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst brandService = {\r\n  getBrands,\r\n  createBrand,\r\n  getBrand,\r\n  updateBrand,\r\n  deleteBrand,\r\n};\r\n\r\nexport default brandService;\r\n","import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport brandService from \"./brandService\";\r\n\r\nexport const getBrands = createAsyncThunk(\r\n  \"brand/get-brands\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await brandService.getBrands();\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const getABrand = createAsyncThunk(\r\n  \"brand/get-brand\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await brandService.getBrand(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const createBrand = createAsyncThunk(\r\n  \"brand/create-brand\",\r\n  async (brandData, thunkAPI) => {\r\n    try {\r\n      return await brandService.createBrand(brandData);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const updateABrand = createAsyncThunk(\r\n  \"brand/update-brand\",\r\n  async (brand, thunkAPI) => {\r\n    try {\r\n      return await brandService.updateBrand(brand);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteABrand = createAsyncThunk(\r\n  \"brand/delete-brand\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await brandService.deleteBrand(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const resetState = createAction(\"Reset_all\");\r\n\r\nconst initialState = {\r\n  brands: [],\r\n  isError: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\nexport const brandSlice = createSlice({\r\n  name: \"brands\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getBrands.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getBrands.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.brands = action.payload;\r\n      })\r\n      .addCase(getBrands.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(createBrand.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createBrand.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.createdBrand = action.payload;\r\n      })\r\n      .addCase(createBrand.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getABrand.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getABrand.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.brandName = action.payload.title;\r\n      })\r\n      .addCase(getABrand.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(updateABrand.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateABrand.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.updatedBrand = action.payload;\r\n      })\r\n      .addCase(updateABrand.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(deleteABrand.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteABrand.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.deletedBrand = action.payload;\r\n      })\r\n      .addCase(deleteABrand.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(resetState, () => initialState);\r\n  },\r\n});\r\n\r\nexport default brandSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteABrand,\r\n  getBrands,\r\n  resetState,\r\n} from \"../features/brand/brandSlice\";\r\nimport CustomModal from \"../components/CustomModal\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"SNo\",\r\n    dataIndex: \"key\",\r\n  },\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    dataIndex: \"action\",\r\n  },\r\n];\r\n\r\nconst Brandlist = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const showModal = (e) => {\r\n    setOpen(true);\r\n    // setbrandId(e);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setOpen(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   dispatch(resetState());\r\n  //   dispatch(getBrands());\r\n  // }, []);\r\n  // const brandState = useSelector((state) => state.brand.brands);\r\n  const data1 = [];\r\n  // for (let i = 0; i < brandState.length; i++) {\r\n  //   data1.push({\r\n  //     key: i + 1,\r\n  //     name: brandState[i].title,\r\n  //     action: (\r\n  //       <>\r\n  //         <Link\r\n  //           to={`/admin/brand/${brandState[i]._id}`}\r\n  //           className=\" fs-3 text-danger\"\r\n  //         >\r\n  //           <BiEdit />\r\n  //         </Link>\r\n  //         <button\r\n  //           className=\"ms-3 fs-3 text-danger bg-transparent border-0\"\r\n  //           onClick={() => showModal(brandState[i]._id)}\r\n  //         >\r\n  //           <AiFillDelete />\r\n  //         </button>\r\n  //       </>\r\n  //     ),\r\n  //   });\r\n  // }\r\n  // const deleteBrand = (e) => {\r\n  //   dispatch(deleteABrand(e));\r\n\r\n  //   setOpen(false);\r\n  //   setTimeout(() => {\r\n  //     dispatch(getBrands());\r\n  //   }, 100);\r\n  // };\r\n  return (\r\n    <div>\r\n      <h3 className=\"mb-4 title\">Types</h3>\r\n      <div>\r\n        <Table columns={columns} dataSource={data1} />\r\n      </div>\r\n      <CustomModal\r\n        hideModal={hideModal}\r\n        open={open}\r\n        // performAction={() => {\r\n        //   deleteBrand(brandId);\r\n        // }}\r\n        title=\"Are you sure you want to delete this brand?\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brandlist;\r\n","import Cookies from \"js-cookie\";\r\nimport CryptoJS from \"crypto-js\";\r\nconst encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\nconst encryptedUser = Cookies.get(\"user\");\r\n\r\nconst getTokenFromLocalStorage = encryptedUser\r\n  ? JSON.parse(\r\n      CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n        CryptoJS.enc.Utf8\r\n      )\r\n    )\r\n  : null;\r\n\r\nexport const config = {\r\n  headers: {\r\n    Authorization: `Bearer ${\r\n      getTokenFromLocalStorage !== null ? getTokenFromLocalStorage.token : \"\"\r\n    }`,\r\n    Accept: \"application/json\",\r\n  },\r\n};\r\n","export const base_url = \"http://localhost:3000/api/\";\r\n"],"names":["props","open","hideModal","performAction","title","_jsx","Modal","onOk","onCancel","okText","cancelText","children","getBrands","async","axios","get","base_url","data","createBrand","post","brand","config","getBrand","id","updateBrand","put","brandData","deleteBrand","delete","createAsyncThunk","brandService","error","thunkAPI","rejectWithValue","getABrand","updateABrand","deleteABrand","resetState","createAction","initialState","brands","isError","isLoading","isSuccess","message","createSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","createdBrand","brandName","updatedBrand","deletedBrand","columns","dataIndex","Brandlist","setOpen","useState","useDispatch","_jsxs","className","Table","dataSource","CustomModal","encryptedUser","Cookies","getTokenFromLocalStorage","JSON","parse","CryptoJS","decrypt","process","toString","Utf8","headers","Authorization","token","Accept"],"sourceRoot":""}
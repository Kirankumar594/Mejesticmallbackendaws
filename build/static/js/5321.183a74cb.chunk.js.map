{"version":3,"file":"static/js/5321.183a74cb.chunk.js","mappings":"kcA4BA,MAAM,MAAEA,GAAUC,EAAAA,EACZC,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAcE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACnDE,OAAQ,cAAcD,EAAME,QAAQC,UACpCC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXC,OAAQ,UACRC,aAAcR,EAAMK,QAAQ,GAC5B,UAAW,CACTI,YAAaT,EAAME,QAAQQ,QAAQC,MAEtC,IAEKC,GAAcf,EAAAA,EAAAA,IAAOgB,EAAAA,EAAPhB,EAAaiB,IAAA,IAAC,MAAEd,GAAOc,EAAA,MAAM,CAC/CN,aAAcR,EAAMK,QAAQ,GAC7B,IA4qBD,EA1qBkBU,KAChB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,KAChDG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAS,KACxBK,EAAOC,IAAYN,EAAAA,EAAAA,UAAS,IAE7BO,EAAiBC,EAAAA,EAAQC,IAAI,SAC7BC,EAAQH,EAAiBI,IAAAA,IAAaC,QAAQL,EAF9BM,iBAE6DC,SAASH,IAAAA,IAAaI,MAAQ,MAC1GC,EAAOC,IAAYjB,EAAAA,EAAAA,UAAS,KAC5BkB,EAAcC,IAAmBnB,EAAAA,EAAAA,UAAS,KAC1CoB,EAAUC,IAAerB,EAAAA,EAAAA,UAAS,KAClCsB,EAAaC,IAAkBvB,EAAAA,EAAAA,UAAS,KACxCwB,EAAYC,IAAiBzB,EAAAA,EAAAA,UAAS,KACtC0B,EAAUC,IAAe3B,EAAAA,EAAAA,UAAS,KAClC4B,EAAcC,IAAmB7B,EAAAA,EAAAA,UAAS,KAC1C8B,EAAOC,KAAY/B,EAAAA,EAAAA,UAAS,KAC5BgC,GAAWC,KAAgBjC,EAAAA,EAAAA,UAAS,KACpCkC,GAAMC,KAAWnC,EAAAA,EAAAA,UAAS,KAC1BoC,GAAUC,KAAerC,EAAAA,EAAAA,UAAS,KAClCsC,GAAcC,KAAmBvC,EAAAA,EAAAA,UAAS,KAC1CwC,GAAaC,KAAkBzC,EAAAA,EAAAA,UAAS,KACxC0C,GAAgBC,KAAqB3C,EAAAA,EAAAA,UAAS,KAC9C4C,GAAWC,KAAgB7C,EAAAA,EAAAA,UAAS,CACzC8C,MAAO,GAAIC,MAAO,GAAI1C,MAAO,GAAIyB,MAAO,GACxCkB,SAAU,MAELC,GAAaC,KAAkBlD,EAAAA,EAAAA,UAAS,KACxCmD,GAAiBC,KAAsBpD,EAAAA,EAAAA,UAAS,KAEjD,aAAEqD,GAAY,cAAEC,KAAkBC,EAAAA,EAAAA,IAAY,CAClDC,OAASC,GAAkBd,GAAkB,IAAID,MAAmBe,IACpEC,OAAQ,qBAGHC,GAAaC,KAAkB5D,EAAAA,EAAAA,UAAS,CAAC,IAEzC6D,GAAgBC,KAAqB9D,EAAAA,EAAAA,UAAS,CAAC,GACtD+D,QAAQC,IAAIL,GAAaE,GAAgBzC,EAAU,mBACnD6C,EAAAA,EAAAA,YAAU,KACkBC,WACxB,IAAK,IAADC,EAAAC,EACF,MAAMC,QAAoBC,EAAAA,EAAM7D,IAAI,iDAAkD,CACpF8D,QAAS,CACPC,cAAe,UAAU9D,OAG7BX,EAAgC,QAAjBoE,EAACE,EAAYI,YAAI,IAAAN,OAAA,EAAhBA,EAAkB/C,SAASsD,QACxCC,GAAyB,WAAhBA,EAAKC,UAEjB,MAAMC,EAAkB,CAAC,EACT,QAAhBT,EAAAC,EAAYI,YAAI,IAAAL,GAAhBA,EAAkBhD,SACfsD,QAAQC,GAAyB,WAAhBA,EAAKC,SACtBE,SAASC,IACRF,EAAgBE,EAAIC,KAAOD,EAAIE,YAAY,IAE/CrB,GAAeiB,EACjB,CAAE,MAAOK,GACPC,EAAAA,GAAMD,MAAM,4BACd,GAkDFE,GA/C6BlB,WAC3B,IAAK,IAADmB,EAAAC,EACF,MAAMC,QAAuBjB,EAAAA,EAAM7D,IAAI,oDAAqD,CAC1F8D,QAAS,CACPC,cAAe,UAAU9D,OAG7BR,EAAsC,QAApBmF,EAACE,EAAed,YAAI,IAAAY,OAAA,EAAnBA,EAAqBG,YAAYd,QACjDC,GAAyB,WAAhBA,EAAKC,UAEjB,MAAMa,EAAqB,CAAC,EACT,QAAnBH,EAAAC,EAAed,YAAI,IAAAa,GAAnBA,EAAqBE,YAAYd,QAC9BC,GAAyB,WAAhBA,EAAKC,SACfE,SAASY,IACTD,EAAmBC,EAAOV,KAAOU,EAAOC,eAAe,IAEzD7B,GAAkB2B,EACpB,CAAE,MAAOP,GACPC,EAAAA,GAAMD,MAAM,+BACd,GA6BFU,GA1BqB1B,WACnB,IAAK,IAAD2B,EACF,MAAMC,QAAexB,EAAAA,EAAM7D,IAAI,4CAA6C,CAC1E8D,QAAS,CACPC,cAAe,UAAU9D,OAG7BN,EAAkB,QAAZyF,EAACC,EAAOrB,YAAI,IAAAoB,OAAA,EAAXA,EAAaE,IACtB,CAAE,MAAOb,GACPC,EAAAA,GAAMD,MAAM,sBACd,GAiBFc,GAdsB9B,WACpB,IAAK,IAAD+B,EACF,MAAMC,QAAgB5B,EAAAA,EAAM7D,IAAI,6CAA8C,CAC5E8D,QAAS,CACPC,cAAe,UAAU9D,OAG7BJ,EAAqB,QAAb2F,EAACC,EAAQzB,YAAI,IAAAwB,OAAA,EAAZA,EAAcE,KACzB,CAAE,MAAOjB,GACPC,EAAAA,GAAMD,MAAM,uBACd,GAKFkB,EAAe,GACd,CAAC1F,IAEJ,MAkDM2F,GAAcnC,UAClB,MAAMoC,EAAW,IAAIC,SACrB,IACE,IAAK,MAAMC,KAAS9D,GAClB4D,EAASG,OAAO,KAAMC,GACtBJ,EAASG,OAAO,SAAUD,SACpBG,MAAM,sDAAuD,CACjEC,OAAQ,OACRC,KAAMP,GACL,CACD/B,QAAS,CACPC,cAAe,UAAU9D,OAI/BoG,OAAOC,SAASC,OAAO,8BAEzB,CAAE,MAAO9B,GACPC,EAAAA,GAAMD,MAAM,yBACd,GAEI+B,GAA2BA,CAAClE,EAAOmE,KAE/BnE,EADUA,EAAQmE,EAAsB,KACtBC,QAAQ,GA6CpC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,GAAIC,SAAA,EAEhBC,EAAAA,EAAAA,KAACjJ,EAAK,CAACkJ,MAAO,EAAGC,UAAU,QAAOH,SAAC,+BACnCJ,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,WAAS,EAAC1I,QAAS,EAAEqI,SAAA,EACzBC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAGN,UAChBJ,EAAAA,EAAAA,MAACxI,EAAAA,EAAK,CAAC0I,GAAI,CAAEC,EAAG,GAAIC,SAAA,EAClBC,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAACsJ,QAAQ,KAAKC,cAAY,EAACL,UAAU,OAAMH,SAAC,uBACvDJ,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,WAAS,EAAC1I,QAAS,EAAEqI,SAAA,EACzBC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBJ,EAAAA,EAAAA,MAACc,EAAAA,EAAW,CAACC,WAAS,EAAAX,SAAA,EACpBC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAZ,SAAC,cACZJ,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLvF,MAAO1B,EACPkH,SAAWC,GAAMlH,EAAYkH,EAAEC,OAAO1F,OACtC2F,MAAM,WAAUjB,SAAA,EAEhBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAC5F,MAAM,GAAE0E,SAAC,oBAClB1H,EAAa6I,KAAI,CAAC5D,EAAK6D,KACtBnB,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAW5F,MAAOiC,EAAIC,IAAIwC,SAChCzC,EAAIE,cADQ2D,cAQvBnB,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBJ,EAAAA,EAAAA,MAACc,EAAAA,EAAW,CAACC,WAAS,EAAAX,SAAA,EACpBC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAZ,SAAC,kBACZJ,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLvF,MAAOxB,EACPgH,SAAWC,GAAMhH,EAAegH,EAAEC,OAAO1F,OACzC2F,MAAM,eAAcjB,SAAA,EAEpBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAC5F,MAAM,GAAE0E,SAAC,wBAClBvH,EACEyE,QAAQmE,GAAQA,EAAIC,aAAe1H,IACnCuH,KAAI,CAACE,EAAKD,KACTnB,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAW5F,MAAO+F,EAAI7D,IAAIwC,SAChCqB,EAAIlD,iBADQiD,cAQzBnB,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBJ,EAAAA,EAAAA,MAACc,EAAAA,EAAW,CAACC,WAAS,EAAAX,SAAA,EACpBC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAZ,SAAC,kBACZJ,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLvF,MAAOR,GACPgG,SAAWC,GAAMhG,GAAgBgG,EAAEC,OAAO1F,OAC1C2F,MAAM,eAAcjB,SAAA,EAEpBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAC5F,MAAM,GAAE0E,SAAC,iBACnBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAC5F,MAAM,SAAQ0E,SAAC,YACzBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAC5F,MAAM,eAAc0E,SAAC,kCAO3CC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAGN,UAChBJ,EAAAA,EAAAA,MAACxI,EAAAA,EAAK,CAAC0I,GAAI,CAAEC,EAAG,GAAIC,SAAA,EAClBC,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAACsJ,QAAQ,KAAKC,cAAY,EAACL,UAAU,OAAMH,SAAC,qBACvDJ,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,WAAS,EAAC1I,QAAS,EAAEqI,SAAA,EACzBC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTM,MAAM,gBACN3F,MAAO9B,EACPsH,SAAWC,GAAMtH,EAASsH,EAAEC,OAAO1F,YAGvC2E,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTa,KAAK,SACLP,MAAM,gBACN3F,MAAO5B,EACPoH,SAAWC,GAAMpH,EAAgBoH,EAAEC,OAAO1F,YAG9C2E,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBJ,EAAAA,EAAAA,MAACc,EAAAA,EAAW,CAACC,WAAS,EAAAX,SAAA,EACpBC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAZ,SAAC,iBACZJ,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLvF,MAAOtB,EACP8G,SAAWC,GAAM9G,EAAc8G,EAAEC,OAAO1F,OACxC2F,MAAM,cAAajB,SAAA,EAEnBC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAC5F,MAAM,GAAE0E,SAAC,eAClBrH,EAAIwI,KAAI,CAACM,EAAGL,KACXnB,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAW5F,MAAOmG,EAAE9I,IAAIqH,SAC9ByB,EAAE9I,KADUyI,sBAsE7BnB,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAGN,UAChBJ,EAAAA,EAAAA,MAACxI,EAAAA,EAAK,CAAC0I,GAAI,CAAEC,EAAG,GAAIC,SAAA,EAClBC,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAACsJ,QAAQ,KAAKC,cAAY,EAACL,UAAU,OAAMH,SAAC,qBAGvDJ,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,WAAS,EAAC1I,QAAS,EAAEqI,SAAA,EACzBC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTa,KAAK,SACLP,MAAM,6BACN3F,MAAOpB,EACP4G,SAAWC,GAAM5G,EAAY4G,EAAEC,OAAO1F,YAG1C2E,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTa,KAAK,SACLP,MAAM,2BACN3F,MAAOlB,EACP0G,SAAWC,GAAM1G,EAAgB0G,EAAEC,OAAO1F,eAKhD2E,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAACC,GAAI,CAAE4B,GAAI,GAAI1B,UACjBJ,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,WAAS,EAAC1I,QAAS,EAAEqI,SAAA,EACzBC,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTa,KAAK,SACLP,MAAM,gBACN3F,MAAOF,GAAUE,MACjBwF,SAAWC,GACT1F,GAAa,IAAKD,GAAWE,MAAOyF,EAAEC,OAAO1F,aAInD2E,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBJ,EAAAA,EAAAA,MAACc,EAAAA,EAAW,CAACC,WAAS,EAAAX,SAAA,EACpBC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAAZ,SAAC,WACZJ,EAAAA,EAAAA,MAACiB,EAAAA,EAAM,CACLvF,MAAOF,GAAUvC,MACjBiI,SAAWC,GACT1F,GAAa,IAAKD,GAAWvC,MAAOkI,EAAEC,OAAO1F,QAE/C2F,MAAM,QAAOjB,SAAA,EAEbC,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAC5F,MAAM,GAAE0E,SAAC,iBAClBnH,EAAMsI,KAAI,CAACQ,EAAGP,KACbnB,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAAW5F,MAAOqG,EAAEjH,KAAKsF,SAC/B2B,EAAEjH,MADU0G,cAOvBnB,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTa,KAAK,SACLP,MAAM,QACN3F,MAAOF,GAAUG,MACjBuF,SAAWC,GACT1F,GAAa,IAAKD,GAAWG,MAAOwF,EAAEC,OAAO1F,aAInD2E,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTa,KAAK,SACLP,MAAM,iBACN3F,MAAOF,GAAUd,MACjBwG,SAAWC,GACT1F,GAAa,IAAKD,GAAWd,MAAOyG,EAAEC,OAAO1F,aAInD2E,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CACRZ,WAAS,EACTa,KAAK,SACLP,MAAM,kBACN3F,MAAOF,GAAUI,SACjBsF,SAAWC,GACT1F,GAAa,IAAKD,GAAWI,SAAUuF,EAAEC,OAAO1F,aAItD2E,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAIG,GAAI,EAAET,UACvBC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLrB,QAAQ,YACRsB,WAAW5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAI,IAChBnB,WAAS,EACToB,QA/SGC,KACnB,GAAI5G,GAAUE,OAASF,GAAUG,OAASH,GAAUvC,OAASqB,GAAYE,EAAc,CACrF,MAAM6H,EAAwBxC,GAC5ByC,OAAO9G,GAAUG,OACjB2G,OAAOhI,IAGHiI,EAAsB1C,GAC1ByC,OAAO9G,GAAUG,OACjB2G,OAAO9H,IAGHgI,EAAiB,IAClBhH,GACHiH,gBAAiBJ,EACjB/C,GAAIoD,KAAKC,OAGLC,EAAqB,IACtBpH,GACHiH,gBAAiBF,EACjBjD,GAAIoD,KAAKC,OAGX7G,GAAe,IAAID,GAAa2G,IAChCxG,GAAmB,IAAID,GAAiB6G,IACxCnH,GAAa,CACXC,MAAO,GAAIC,MAAO,GAAI1C,MAAO,GAAIyB,MAAO,GACxCkB,SAAU,IAEd,MACEmC,EAAAA,GAAM8E,KAAK,kDACb,EAgRgB3C,GAAI,CAAE4C,OAAQ,QACdC,MAAO,CAAEC,gBAAiB,QAAS5C,SACpC,sBAONvE,GAAYoH,OAAS,IACpBjD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE4B,GAAI,GAAI1B,SAAA,EACjBC,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAACsJ,QAAQ,YAAYC,cAAY,EAAAR,SAAC,2BAG5CvE,GAAY0F,KAAK2B,IAChB7C,EAAAA,EAAAA,KAAC/H,EAAW,CAAA8H,UACVJ,EAAAA,EAAAA,MAACmD,EAAAA,EAAW,CACVjD,GAAI,CACFkD,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UACZlD,SAAA,EAEFJ,EAAAA,EAAAA,MAAC3I,EAAAA,EAAU,CAAA+I,SAAA,CACR8C,EAAOxH,MAAM,IAAEwH,EAAOjK,MAAM,SAAOiK,EAAOvH,MAAO,IAAI,mBACrCuH,EAAOT,gBAAgB,KACxCpC,EAAAA,EAAAA,KAAA,UACAL,EAAAA,EAAAA,MAAA,SAAAI,SAAA,CAAO,UACG8C,EAAOxI,MAAM,sBAAoB,IACxCwI,EAAOtH,gBAGZyE,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACTpB,QAASA,KAAMqB,OA9SVlE,EA8S4B4D,EAAO5D,QA7S5DxD,GAAeD,GAAYyB,QAAOC,GAAQA,EAAK+B,KAAOA,KAD7BA,KA8SuC,EAC5CmE,MAAM,QAAOrD,UAEbC,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,UArBKR,EAAO5D,SA4B9BvD,GAAgBkH,OAAS,IACxBjD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE4B,GAAI,GAAI1B,SAAA,EACjBJ,EAAAA,EAAAA,MAAC3I,EAAAA,EAAU,CAACsJ,QAAQ,YAAYC,cAAY,EAAAR,SAAA,CAAC,wBAE3CC,EAAAA,EAAAA,KAACsD,EAAAA,EAAO,CAACzD,GAAI,CAAE0D,GAAI,QAEpB7H,GAAgBwF,KAAK2B,IACpB7C,EAAAA,EAAAA,KAAC/H,EAAW,CAAA8H,UACVJ,EAAAA,EAAAA,MAACmD,EAAAA,EAAW,CACVjD,GAAI,CACFkD,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UACZlD,SAAA,EAEFJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EACFJ,EAAAA,EAAAA,MAAC3I,EAAAA,EAAU,CAACsJ,QAAQ,YAAWP,SAAA,CAC5B8C,EAAOxH,MAAM,IAAEwH,EAAOjK,UAEzB+G,EAAAA,EAAAA,MAAC3I,EAAAA,EAAU,CAACoM,MAAM,gBAAerD,SAAA,CAAC,sBACZ8C,EAAOvH,UAE7BqE,EAAAA,EAAAA,MAAC3I,EAAAA,EAAU,CAACoM,MAAM,UAASrD,SAAA,CAAC,6BACC8C,EAAOT,oBAEpCzC,EAAAA,EAAAA,MAAC3I,EAAAA,EAAU,CAACsJ,QAAQ,QAAQ8C,MAAM,gBAAerD,SAAA,CAAC,UACxC8C,EAAOxI,MAAM,sBAAoB,IACxCwI,EAAOtH,gBAGZyE,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACTpB,QAASA,KAAM0B,OAnVNvE,EAmV4B4D,EAAO5D,QAlVhEtD,GAAmBD,GAAgBuB,QAAOC,GAAQA,EAAK+B,KAAOA,KADjCA,KAmVuC,EAChDmE,MAAM,QAAOrD,UAEbC,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,UA3BKR,EAAO5D,eAoCnCe,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAGN,UAChBJ,EAAAA,EAAAA,MAACxI,EAAAA,EAAK,CAAC0I,GAAI,CAAEC,EAAG,GAAIC,SAAA,EAClBC,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAACsJ,QAAQ,KAAKC,cAAY,EAAAR,SAAC,yBACtCC,EAAAA,EAAAA,KAACyD,EAAAA,GAAQ,CACPC,OAAQC,IACR3G,KAAMjC,GACN8F,SAAUA,CAAC+C,EAAOF,KAChB,MAAM1G,EAAO0G,EAAOG,UACpB7I,GAAegC,EAAK,UAK5BgD,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAGN,UAChBJ,EAAAA,EAAAA,MAACxI,EAAAA,EAAK,CAAC0I,GAAI,CAAEC,EAAG,GAAIC,SAAA,EAClBC,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAACsJ,QAAQ,KAAKC,cAAY,EAAAR,SAAC,oBAEtCJ,EAAAA,EAAAA,MAAC1I,EAAc,IAAK2E,KAAcmE,SAAA,EAChCC,EAAAA,EAAAA,KAAA,YAAWnE,QACXmE,EAAAA,EAAAA,KAAC8D,EAAAA,EAAM,CAACC,KAAM,GAAI7D,UAAU,kBAC5BF,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAAA+I,SAAC,sDAGZC,EAAAA,EAAAA,KAAChJ,EAAAA,EAAU,CAACsJ,QAAQ,QAAQ8C,MAAM,gBAAerD,SAAC,kCAKnD9E,GAAe2H,OAAS,IACvB5C,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,WAAS,EAAC1I,QAAS,EAAEqI,SACxB9E,GAAeiG,KAAI,CAAC8C,EAAMC,KACzBjE,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,EAAG6D,GAAI,EAAG1D,GAAI,EAAET,UAC7BC,EAAAA,EAAAA,KAAC9H,EAAAA,EAAI,CAAA6H,UACHJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEsE,SAAU,YAAapE,SAAA,CAC/BiE,EAAKzC,KAAK6C,WAAW,WACpBpE,EAAAA,EAAAA,KAAA,SACEqE,IAAKC,IAAIC,gBAAgBP,GACzBQ,UAAQ,EACR9B,MAAO,CACL+B,MAAO,OACPhC,OAAQ,QACRiC,UAAW,YAIf1E,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CACF+E,UAAU,MACVN,IAAKC,IAAIC,gBAAgBP,GACzBY,IAAK,UAAUX,EAAQ,IACvBpE,GAAI,CACF4E,MAAO,OACPhC,OAAQ,QACRiC,UAAW,YAIjB1E,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACTrD,GAAI,CACFsE,SAAU,WACVU,IAAK,EACLC,MAAO,EACPnC,gBAAiB,2BACjB,UAAW,CACTA,gBAAiB,6BAGrBb,QAASA,KACP,MAAMiD,EAAY,IAAI9J,IACtB8J,EAAUC,OAAOf,EAAO,GACxB/I,GAAkB6J,EAAU,EAC5BhF,UAEFC,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CAACU,KAAM,aAzCeE,aAmD/CjE,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACjD,MAAI,EAACmD,GAAI,GAAGN,UAChBC,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAACC,GAAI,CAAEkD,QAAS,OAAQC,eAAgB,YAAajD,UACvDC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLrB,QAAQ,YACRyD,KAAK,QACLjC,QAziBSrF,UACnB,GAAKlD,GAAUE,GAAiBsB,IAAgBpB,GAAaE,GAAgBE,EAK7E,GAA2B,IAAvByB,GAAYoH,QAA2C,IAA3BlH,GAAgBkH,OAKhD,GAAI3H,GAAe2H,OAAS,EAC1BlF,EAAAA,GAAM8E,KAAK,sCAIb,IACE,MAAMyC,EAAc,CAClBC,YAAa3L,EACb+B,MAAO7B,EACP0L,YAAapK,GACbpB,SAAUA,EACVyL,YAAavL,EACbnB,IAAKqB,EACLE,WACAoL,aAAclL,EACdE,QACAI,QACA6K,SAAU3K,GACV4K,UAAWhL,GACXiL,OAAQhK,GACRiK,UAAW5K,GACX6K,WAAYhK,IAGRiK,QAAiB9I,EAAAA,EAAM+I,KAAK,+CAAgDX,EAAa,CAC7FnI,QAAS,CACPC,cAAe,UAAU9D,OAIC,IAAD4M,EAA7B,GAAwB,MAApBF,EAASxI,aACLyB,GAAgC,QAArBiH,EAACF,EAAS3I,KAAK8I,cAAM,IAAAD,OAAA,EAApBA,EAAsBtI,KACxCG,EAAAA,GAAMqI,QAAQ,6BAElB,CAAE,MAAOtI,GAAQ,IAADuI,EAAAC,EACdvI,EAAAA,GAAMD,OAAoB,QAAduI,EAAAvI,EAAMkI,gBAAQ,IAAAK,GAAM,QAANC,EAAdD,EAAgBhJ,YAAI,IAAAiJ,OAAN,EAAdA,EAAsBxI,QAAS,uBAC7C,MAxCEC,EAAAA,GAAM8E,KAAK,6EALX9E,EAAAA,GAAM8E,KAAK,sCA6Cb,EA2fUZ,WAAW5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAI,IAEhBa,MAAO,CAAEC,gBAAiB,QAAS5C,SACpC,yBAOH,C","sources":["components/admin/pages/AddvegetableFruits.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Paper,\r\n  Grid,\r\n  Box,\r\n  IconButton,\r\n  Card,\r\n  CardContent,\r\n  Divider\r\n} from '@mui/material';\r\nimport { Upload, Trash2, Plus, Image } from 'lucide-react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { Typography } from 'antd';\r\nimport { Category } from '@material-ui/icons';\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst { Title } = Typography;\r\nconst StyledDropzone = styled(Paper)(({ theme }) => ({\r\n  border: `2px dashed ${theme.palette.divider}`,\r\n  padding: theme.spacing(4),\r\n  textAlign: 'center',\r\n  cursor: 'pointer',\r\n  marginBottom: theme.spacing(2),\r\n  '&:hover': {\r\n    borderColor: theme.palette.primary.main,\r\n  }\r\n}));\r\n\r\nconst PreviewItem = styled(Card)(({ theme }) => ({\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\nconst AddFruits = () => {\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const [subCategoryData, setSubCategoryData] = useState([]);\r\n  const [tag, setTag] = useState([]);\r\n  const [units, setUnits] = useState([]);\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const encryptedToken = Cookies.get('token');\r\n  const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n  const [title, setTitle] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [subCategory, setSubCategory] = useState('');\r\n  const [productTag, setProductTag] = useState('');\r\n  const [discount, setDiscount] = useState('');\r\n  const [clubDiscount, setClubDiscount] = useState('');\r\n  const [stock, setStock] = useState('');\r\n  const [miniStock, setMiniStock] = useState('');\r\n  const [unit, setUnit] = useState('');\r\n  const [miniUnit, setMiniUnit] = useState('');\r\n  const [subscription, setSubscription] = useState('');\r\n  const [productDesc, setProductDesc] = useState('');\r\n  const [uploadedImages, setUploadedImages] = useState([]);\r\n  const [newOption, setNewOption] = useState({\r\n    value: '', price: '', units: '', stock: \"\",\r\n    minStock: \"\"\r\n  });\r\n  const [previewList, setPreviewList] = useState([]);\r\n  const [previewClubList, setPreviewClubList] = useState([]);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop: (acceptedFiles) => setUploadedImages([...uploadedImages, ...acceptedFiles]),\r\n    accept: 'image/*,video/*'\r\n  });\r\n\r\n  const [categoryMap, setCategoryMap] = useState({});\r\n\r\n  const [subCategoryMap, setSubCategoryMap] = useState({});\r\n  console.log(categoryMap, subCategoryMap, category, \"subCategoryMap\");\r\n  useEffect(() => {\r\n    const fetchCategoryData = async () => {\r\n      try {\r\n        const categoryRes = await axios.get('https://majesticmall.net/api/admin/getCategory', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setCategoryData(categoryRes.data?.category.filter(\r\n          (item) => item.status === \"Active\"\r\n        ));\r\n        const categoryMapping = {};\r\n        categoryRes.data?.category\r\n          .filter((item) => item.status === \"Active\")\r\n          .forEach((cat) => {\r\n            categoryMapping[cat._id] = cat.categoryName;\r\n          });\r\n        setCategoryMap(categoryMapping);\r\n      } catch (error) {\r\n        toast.error('Error fetching categories');\r\n      }\r\n    };\r\n\r\n    const fetchSubCategoryData = async () => {\r\n      try {\r\n        const subCategoryRes = await axios.get('https://majesticmall.net/api/admin/getSubcategory', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setSubCategoryData(subCategoryRes.data?.Subcategory.filter(\r\n          (item) => item.status === \"Active\"\r\n        ));\r\n        const subCategoryMapping = {};\r\n        subCategoryRes.data?.Subcategory.filter(\r\n          (item) => item.status === \"Active\"\r\n        ).forEach((subcat) => {\r\n          subCategoryMapping[subcat._id] = subcat.SubcategoryName;\r\n        });\r\n        setSubCategoryMap(subCategoryMapping);\r\n      } catch (error) {\r\n        toast.error('Error fetching subcategories');\r\n      }\r\n    };\r\n\r\n    const fetchTagData = async () => {\r\n      try {\r\n        const tagRes = await axios.get('https://majesticmall.net/api/admin/getTag', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setTag(tagRes.data?.Tag);\r\n      } catch (error) {\r\n        toast.error('Error fetching tags');\r\n      }\r\n    };\r\n\r\n    const fetchUnitData = async () => {\r\n      try {\r\n        const unitRes = await axios.get('https://majesticmall.net/api/admin/getUnit', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setUnits(unitRes.data?.Unit);\r\n      } catch (error) {\r\n        toast.error('Error fetching units');\r\n      }\r\n    };\r\n    fetchCategoryData();\r\n    fetchSubCategoryData();\r\n    fetchTagData();\r\n    fetchUnitData();\r\n  }, [token]);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!title || !productPrice || !productDesc || !category || !subCategory || !productTag) {\r\n      toast.info('Please fill in all required fields.');\r\n      return;\r\n    }\r\n\r\n    if (previewList.length === 0 || previewClubList.length === 0) {\r\n      toast.info('Please add weight and price options for both normal and club members');\r\n      return;\r\n    }\r\n\r\n    if (uploadedImages.length < 1) {\r\n      toast.info('Please add at least one image');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const productData = {\r\n        productname: title,\r\n        price: productPrice,\r\n        description: productDesc,\r\n        category: category,\r\n        subcategory: subCategory,\r\n        tag: productTag,\r\n        discount,\r\n        clubdiscount: clubDiscount,\r\n        stock,\r\n        unit,\r\n        miniunit: miniUnit,\r\n        ministock: miniStock,\r\n        weight: previewList,\r\n        subscribe: subscription,\r\n        Clubweight: previewClubList,\r\n      };\r\n\r\n      const response = await axios.post('https://majesticmall.net/api/admin/addfruits', productData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        await uploadFiles(response.data.fruits?._id);\r\n        toast.success('Product added successfully');\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.error || 'Error adding product');\r\n    }\r\n  };\r\n\r\n  const uploadFiles = async (id) => {\r\n    const formData = new FormData();\r\n    try {\r\n      for (const image of uploadedImages) {\r\n        formData.append('id', id);\r\n        formData.append('Photos', image);\r\n        await fetch('https://majesticmall.net/api/admin/addfruitsPhotos/', {\r\n          method: 'post',\r\n          body: formData\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n      }\r\n      window.location.assign('/admindashboard/list-Fruits');\r\n\r\n    } catch (error) {\r\n      toast.error('Error uploading images');\r\n    }\r\n  };\r\n  const calculateDiscountedPrice = (price, discountPercentage) => {\r\n    const discount = (price * discountPercentage) / 100;\r\n    return (price - discount).toFixed(2);\r\n  };\r\n\r\n  const addToPreview = () => {\r\n    if (newOption.value && newOption.price && newOption.units && discount && clubDiscount) {\r\n      const normalDiscountedPrice = calculateDiscountedPrice(\r\n        Number(newOption.price),\r\n        Number(discount)\r\n      );\r\n\r\n      const clubDiscountedPrice = calculateDiscountedPrice(\r\n        Number(newOption.price),\r\n        Number(clubDiscount)\r\n      );\r\n\r\n      const newPreviewItem = {\r\n        ...newOption,\r\n        discountedPrice: normalDiscountedPrice,\r\n        id: Date.now()\r\n      };\r\n\r\n      const newClubPreviewItem = {\r\n        ...newOption,\r\n        discountedPrice: clubDiscountedPrice,\r\n        id: Date.now()\r\n      };\r\n\r\n      setPreviewList([...previewList, newPreviewItem]);\r\n      setPreviewClubList([...previewClubList, newClubPreviewItem]);\r\n      setNewOption({\r\n        value: '', price: '', units: '', stock: \"\",\r\n        minStock: \"\",\r\n      });\r\n    } else {\r\n      toast.info('Please fill in all option details and discounts');\r\n    }\r\n  };\r\n\r\n  const removeFromPreview = (id) => {\r\n    setPreviewList(previewList.filter(item => item.id !== id));\r\n  };\r\n\r\n  const removeFromClubPreview = (id) => {\r\n    setPreviewClubList(previewClubList.filter(item => item.id !== id));\r\n  };\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n\r\n      <Title level={3} className=\"title\">Add Fruits and Vegetables</Title>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom className='mb-2'>Basic Information</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Category</InputLabel>\r\n                  <Select\r\n                    value={category}\r\n                    onChange={(e) => setCategory(e.target.value)}\r\n                    label=\"Category\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Category</MenuItem>\r\n                    {categoryData.map((cat, idx) => (\r\n                      <MenuItem key={idx} value={cat._id}>\r\n                        {cat.categoryName}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Sub-Category</InputLabel>\r\n                  <Select\r\n                    value={subCategory}\r\n                    onChange={(e) => setSubCategory(e.target.value)}\r\n                    label=\"Sub-Category\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Sub-Category</MenuItem>\r\n                    {subCategoryData\r\n                      .filter((sub) => sub.categoryId === category)\r\n                      .map((sub, idx) => (\r\n                        <MenuItem key={idx} value={sub._id}>\r\n                          {sub.SubcategoryName}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Product Type</InputLabel>\r\n                  <Select\r\n                    value={subscription}\r\n                    onChange={(e) => setSubscription(e.target.value)}\r\n                    label=\"Product Type\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Type</MenuItem>\r\n                    <MenuItem value=\"Normal\">Normal</MenuItem>\r\n                    <MenuItem value=\"Subscription\">Subscription</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom className='mb-2'>Product Details</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Product Title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Product Price\"\r\n                  value={productPrice}\r\n                  onChange={(e) => setProductPrice(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Product Tag</InputLabel>\r\n                  <Select\r\n                    value={productTag}\r\n                    onChange={(e) => setProductTag(e.target.value)}\r\n                    label=\"Product Tag\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Tag</MenuItem>\r\n                    {tag.map((t, idx) => (\r\n                      <MenuItem key={idx} value={t.tag}>\r\n                        {t.tag}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Stock Management</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Stock\"\r\n                  value={stock}\r\n                  onChange={(e) => setStock(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Stock Units</InputLabel>\r\n                  <Select\r\n                    value={unit}\r\n                    onChange={(e) => setUnit(e.target.value)}\r\n                    label=\"Stock Units\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Units</MenuItem>\r\n                    {units.map((u, idx) => (\r\n                      <MenuItem key={idx} value={u.unit}>\r\n                        {u.unit}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Minimum Stock\"\r\n                  value={miniStock}\r\n                  onChange={(e) => setMiniStock(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Minimum Stock Units</InputLabel>\r\n                  <Select\r\n                    value={miniUnit}\r\n                    onChange={(e) => setMiniUnit(e.target.value)}\r\n                    label=\"Minimum Stock Units\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Units</MenuItem>\r\n                    {units.map((u, idx) => (\r\n                      <MenuItem key={idx} value={u.unit}>\r\n                        {u.unit}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid> */}\r\n\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom className=\"mb-2\">\r\n              Pricing Options\r\n            </Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Normal Member Discount (%)\"\r\n                  value={discount}\r\n                  onChange={(e) => setDiscount(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Club Member Discount (%)\"\r\n                  value={clubDiscount}\r\n                  onChange={(e) => setClubDiscount(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Box sx={{ mt: 3 }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Weight/Volume\"\r\n                    value={newOption.value}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, value: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel>Units</InputLabel>\r\n                    <Select\r\n                      value={newOption.units}\r\n                      onChange={(e) =>\r\n                        setNewOption({ ...newOption, units: e.target.value })\r\n                      }\r\n                      label=\"Units\"\r\n                    >\r\n                      <MenuItem value=\"\">Select Units</MenuItem>\r\n                      {units.map((u, idx) => (\r\n                        <MenuItem key={idx} value={u.unit}>\r\n                          {u.unit}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Price\"\r\n                    value={newOption.price}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, price: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Stock Quantity\"\r\n                    value={newOption.stock}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, stock: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    label=\"Min Stock Alert\"\r\n                    value={newOption.minStock}\r\n                    onChange={(e) =>\r\n                      setNewOption({ ...newOption, minStock: e.target.value })\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    startIcon={<Plus />}\r\n                    fullWidth\r\n                    onClick={addToPreview}\r\n                    sx={{ height: \"56px\" }}\r\n                    style={{ backgroundColor: \"#000\" }}\r\n                  >\r\n                    Add Option\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            {previewList.length > 0 && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Normal Members Preview\r\n                </Typography>\r\n                {previewList.map((option) => (\r\n                  <PreviewItem key={option.id}>\r\n                    <CardContent\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Typography>\r\n                        {option.value} {option.units} - Rs {option.price}{\" \"}\r\n                        (Discounted: Rs {option.discountedPrice})\r\n                        <br />\r\n                        <small>\r\n                          Stock: {option.stock} | Min Stock Alert:{\" \"}\r\n                          {option.minStock}\r\n                        </small>\r\n                      </Typography>\r\n                      <IconButton\r\n                        onClick={() => removeFromPreview(option.id)}\r\n                        color=\"error\"\r\n                      >\r\n                        <Trash2 />\r\n                      </IconButton>\r\n                    </CardContent>\r\n                  </PreviewItem>\r\n                ))}\r\n              </Box>\r\n            )}\r\n            {previewClubList.length > 0 && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Club Members Preview\r\n                  <Divider sx={{ my: 1 }} />\r\n                </Typography>\r\n                {previewClubList.map((option) => (\r\n                  <PreviewItem key={option.id}>\r\n                    <CardContent\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Box>\r\n                        <Typography variant=\"subtitle2\">\r\n                          {option.value} {option.units}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">\r\n                          Original Price: Rs {option.price}\r\n                        </Typography>\r\n                        <Typography color=\"primary\">\r\n                          Club Discounted Price: Rs {option.discountedPrice}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                          Stock: {option.stock} | Min Stock Alert:{\" \"}\r\n                          {option.minStock}\r\n                        </Typography>\r\n                      </Box>\r\n                      <IconButton\r\n                        onClick={() => removeFromClubPreview(option.id)}\r\n                        color=\"error\"\r\n                      >\r\n                        <Trash2 />\r\n                      </IconButton>\r\n                    </CardContent>\r\n                  </PreviewItem>\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Product Description</Typography>\r\n            <CKEditor\r\n              editor={ClassicEditor}\r\n              data={productDesc}\r\n              onChange={(event, editor) => {\r\n                const data = editor.getData();\r\n                setProductDesc(data);\r\n              }}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>Product Images</Typography>\r\n\r\n            <StyledDropzone {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <Upload size={40} className=\"mx-auto mb-2\" />\r\n              <Typography>\r\n                Drag & drop files here, or click to select files\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                Supports images and videos\r\n              </Typography>\r\n            </StyledDropzone>\r\n\r\n            {uploadedImages.length > 0 && (\r\n              <Grid container spacing={2}>\r\n                {uploadedImages.map((file, index) => (\r\n                  <Grid item xs={6} sm={4} md={3} key={index}>\r\n                    <Card>\r\n                      <Box sx={{ position: 'relative' }}>\r\n                        {file.type.startsWith('video/') ? (\r\n                          <video\r\n                            src={URL.createObjectURL(file)}\r\n                            controls\r\n                            style={{\r\n                              width: '100%',\r\n                              height: '200px',\r\n                              objectFit: 'cover'\r\n                            }}\r\n                          />\r\n                        ) : (\r\n                          <Box\r\n                            component=\"img\"\r\n                            src={URL.createObjectURL(file)}\r\n                            alt={`Upload ${index + 1}`}\r\n                            sx={{\r\n                              width: '100%',\r\n                              height: '200px',\r\n                              objectFit: 'cover'\r\n                            }}\r\n                          />\r\n                        )}\r\n                        <IconButton\r\n                          sx={{\r\n                            position: 'absolute',\r\n                            top: 8,\r\n                            right: 8,\r\n                            backgroundColor: 'rgba(255, 255, 255, 0.8)',\r\n                            '&:hover': {\r\n                              backgroundColor: 'rgba(255, 255, 255, 0.9)'\r\n                            }\r\n                          }}\r\n                          onClick={() => {\r\n                            const newImages = [...uploadedImages];\r\n                            newImages.splice(index, 1);\r\n                            setUploadedImages(newImages);\r\n                          }}\r\n                        >\r\n                          <Trash2 size={20} />\r\n                        </IconButton>\r\n                      </Box>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              onClick={handleSubmit}\r\n              startIcon={<Plus />}\r\n\r\n              style={{ backgroundColor: \"#000\" }}\r\n            >\r\n              Add Product\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddFruits;"],"names":["Title","Typography","StyledDropzone","styled","Paper","_ref","theme","border","palette","divider","padding","spacing","textAlign","cursor","marginBottom","borderColor","primary","main","PreviewItem","Card","_ref2","AddFruits","categoryData","setCategoryData","useState","subCategoryData","setSubCategoryData","tag","setTag","units","setUnits","encryptedToken","Cookies","get","token","CryptoJS","decrypt","process","toString","Utf8","title","setTitle","productPrice","setProductPrice","category","setCategory","subCategory","setSubCategory","productTag","setProductTag","discount","setDiscount","clubDiscount","setClubDiscount","stock","setStock","miniStock","setMiniStock","unit","setUnit","miniUnit","setMiniUnit","subscription","setSubscription","productDesc","setProductDesc","uploadedImages","setUploadedImages","newOption","setNewOption","value","price","minStock","previewList","setPreviewList","previewClubList","setPreviewClubList","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","accept","categoryMap","setCategoryMap","subCategoryMap","setSubCategoryMap","console","log","useEffect","async","_categoryRes$data","_categoryRes$data2","categoryRes","axios","headers","Authorization","data","filter","item","status","categoryMapping","forEach","cat","_id","categoryName","error","toast","fetchCategoryData","_subCategoryRes$data","_subCategoryRes$data2","subCategoryRes","Subcategory","subCategoryMapping","subcat","SubcategoryName","fetchSubCategoryData","_tagRes$data","tagRes","Tag","fetchTagData","_unitRes$data","unitRes","Unit","fetchUnitData","uploadFiles","formData","FormData","image","append","id","fetch","method","body","window","location","assign","calculateDiscountedPrice","discountPercentage","toFixed","_jsxs","Box","sx","p","children","_jsx","level","className","Grid","container","xs","variant","gutterBottom","md","FormControl","fullWidth","InputLabel","Select","onChange","e","target","label","MenuItem","map","idx","sub","categoryId","TextField","type","t","mt","u","Button","startIcon","Plus","onClick","addToPreview","normalDiscountedPrice","Number","clubDiscountedPrice","newPreviewItem","discountedPrice","Date","now","newClubPreviewItem","info","height","style","backgroundColor","length","option","CardContent","display","justifyContent","alignItems","IconButton","removeFromPreview","color","Trash2","Divider","my","removeFromClubPreview","CKEditor","editor","ClassicEditor","event","getData","Upload","size","file","index","sm","position","startsWith","src","URL","createObjectURL","controls","width","objectFit","component","alt","top","right","newImages","splice","productData","productname","description","subcategory","clubdiscount","miniunit","ministock","weight","subscribe","Clubweight","response","post","_response$data$fruits","fruits","success","_error$response","_error$response$data"],"sourceRoot":""}
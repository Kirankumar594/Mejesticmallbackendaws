{"version":3,"file":"static/js/3707.5d7379b5.chunk.js","mappings":"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","sources":["components/admin/components/CustomModal.js","components/admin/features/color/colorService.js","components/admin/features/color/colorSlice.js","components/admin/pages/Colotlist.js","components/admin/utils/axiosconfig.js","components/admin/utils/baseUrl.js"],"sourcesContent":["import React from \"react\";\r\nimport { Modal } from \"antd\";\r\n\r\nconst CustomModal = (props) => {\r\n  const { open, hideModal, performAction, title } = props;\r\n  return (\r\n    <Modal\r\n      title=\"Confirmation\"\r\n      open={open}\r\n      onOk={performAction}\r\n      onCancel={hideModal}\r\n      okText=\"Ok\"\r\n      cancelText=\"Cancel\"\r\n    >\r\n      <p>{title}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CustomModal;\r\n","import axios from \"axios\";\r\nimport { base_url } from \"../../utils/baseUrl\";\r\nimport { config } from \"../../utils/axiosconfig\";\r\n\r\nconst getColors = async () => {\r\n  const response = await axios.get(`${base_url}color/`);\r\n\r\n  return response.data;\r\n};\r\nconst createColor = async (color) => {\r\n  const response = await axios.post(`${base_url}color/`, color, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst updateColor = async (color) => {\r\n  const response = await axios.put(\r\n    `${base_url}color/${color.id}`,\r\n    { title: color.colorData.title },\r\n    config\r\n  );\r\n\r\n  return response.data;\r\n};\r\nconst getColor = async (id) => {\r\n  const response = await axios.get(`${base_url}color/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteColor = async (id) => {\r\n  const response = await axios.delete(`${base_url}color/${id}`, config);\r\n\r\n  return response.data;\r\n};\r\nconst colorService = {\r\n  getColors,\r\n  createColor,\r\n  updateColor,\r\n  getColor,\r\n  deleteColor,\r\n};\r\n\r\nexport default colorService;\r\n","import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\r\nimport colorService from \"./colorService\";\r\n\r\nexport const getColors = createAsyncThunk(\r\n  \"color/get-colors\",\r\n  async (thunkAPI) => {\r\n    try {\r\n      return await colorService.getColors();\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const createColor = createAsyncThunk(\r\n  \"color/create-color\",\r\n  async (colorData, thunkAPI) => {\r\n    try {\r\n      return await colorService.createColor(colorData);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const getAColor = createAsyncThunk(\r\n  \"color/get-color\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await colorService.getColor(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\nexport const updateAColor = createAsyncThunk(\r\n  \"color/update-color\",\r\n  async (color, thunkAPI) => {\r\n    try {\r\n      return await colorService.updateColor(color);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteAColor = createAsyncThunk(\r\n  \"color/delete-color\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      return await colorService.deleteColor(id);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const resetState = createAction(\"Reset_all\");\r\n\r\nconst initialState = {\r\n  colors: [],\r\n  isError: false,\r\n  isLoading: false,\r\n  isSuccess: false,\r\n  message: \"\",\r\n};\r\nexport const colorSlice = createSlice({\r\n  name: \"colors\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getColors.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getColors.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.colors = action.payload;\r\n      })\r\n      .addCase(getColors.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(createColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(createColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.createdColor = action.payload;\r\n      })\r\n      .addCase(createColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(updateAColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(updateAColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.updatedColor = action.payload;\r\n      })\r\n      .addCase(updateAColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(getAColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getAColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.colorName = action.payload.title;\r\n      })\r\n      .addCase(getAColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(deleteAColor.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(deleteAColor.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = false;\r\n        state.isSuccess = true;\r\n        state.deletedColor = action.payload.title;\r\n      })\r\n      .addCase(deleteAColor.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.isSuccess = false;\r\n        state.message = action.error;\r\n      })\r\n      .addCase(resetState, () => initialState);\r\n  },\r\n});\r\nexport default colorSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteAColor, getColors } from \"../features/color/colorSlice\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CustomModal from \"../components/CustomModal\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"SNo\",\r\n    dataIndex: \"key\",\r\n  },\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n  },\r\n  {\r\n    title: \"Action\",\r\n    dataIndex: \"action\",\r\n  },\r\n];\r\n\r\nconst Colorlist = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [colorId, setcolorId] = useState(\"\");\r\n  const showModal = (e) => {\r\n    setOpen(true);\r\n    setcolorId(e);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setOpen(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getColors());\r\n  }, []);\r\n  const colorState = useSelector((state) => state.color.colors);\r\n  const data1 = [];\r\n  for (let i = 0; i < colorState.length; i++) {\r\n    data1.push({\r\n      key: i + 1,\r\n      name: colorState[i].title,\r\n      action: (\r\n        <>\r\n          <Link\r\n            to={`/admin/color/${colorState[i]._id}`}\r\n            className=\" fs-3 text-danger\"\r\n          >\r\n            <BiEdit />\r\n          </Link>\r\n          <button\r\n            className=\"ms-3 fs-3 text-danger bg-transparent border-0\"\r\n            onClick={() => showModal(colorState[i]._id)}\r\n          >\r\n            <AiFillDelete />\r\n          </button>\r\n        </>\r\n      ),\r\n    });\r\n  }\r\n  const deleteColor = (e) => {\r\n    dispatch(deleteAColor(e));\r\n\r\n    setOpen(false);\r\n    setTimeout(() => {\r\n      dispatch(getColors());\r\n    }, 100);\r\n  };\r\n  return (\r\n    <div>\r\n      <h3 className=\"mb-4 title\">Colors</h3>\r\n      <div>\r\n        <Table columns={columns} dataSource={data1} />\r\n      </div>\r\n      <CustomModal\r\n        hideModal={hideModal}\r\n        open={open}\r\n        performAction={() => {\r\n          deleteColor(colorId);\r\n        }}\r\n        title=\"Are you sure you want to delete this color?\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Colorlist;\r\n","import Cookies from \"js-cookie\";\r\nimport CryptoJS from \"crypto-js\";\r\nconst encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\nconst encryptedUser = Cookies.get(\"user\");\r\n\r\nconst getTokenFromLocalStorage = encryptedUser\r\n  ? JSON.parse(\r\n      CryptoJS.AES.decrypt(encryptedUser, encryptionKey).toString(\r\n        CryptoJS.enc.Utf8\r\n      )\r\n    )\r\n  : null;\r\n\r\nexport const config = {\r\n  headers: {\r\n    Authorization: `Bearer ${\r\n      getTokenFromLocalStorage !== null ? getTokenFromLocalStorage.token : \"\"\r\n    }`,\r\n    Accept: \"application/json\",\r\n  },\r\n};\r\n","export const base_url = \"http://localhost:3000/api/\";\r\n"],"names":["props","open","hideModal","performAction","title","_jsx","Modal","onOk","onCancel","okText","cancelText","children","getColors","async","axios","get","base_url","data","createColor","post","color","config","updateColor","put","id","colorData","getColor","deleteColor","delete","createAsyncThunk","colorService","error","thunkAPI","rejectWithValue","getAColor","updateAColor","deleteAColor","resetState","createAction","initialState","colors","isError","isLoading","isSuccess","message","createSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","createdColor","updatedColor","colorName","deletedColor","columns","dataIndex","Colorlist","setOpen","useState","colorId","setcolorId","dispatch","useDispatch","useEffect","colorState","useSelector","data1","i","length","push","key","_jsxs","_Fragment","Link","to","_id","className","BiEdit","onClick","showModal","e","AiFillDelete","Table","dataSource","CustomModal","setTimeout","encryptedUser","Cookies","getTokenFromLocalStorage","JSON","parse","CryptoJS","decrypt","process","toString","Utf8","headers","Authorization","token","Accept"],"sourceRoot":""}
{"version":3,"file":"static/js/4594.30026eb6.chunk.js","mappings":"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","sources":["components/admin/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Chip,\r\n  Avatar,\r\n  Divider,\r\n  useTheme,\r\n  alpha\r\n} from \"@mui/material\";\r\nimport {\r\n  Users,\r\n  Star,\r\n  ShoppingCart,\r\n  Repeat,\r\n  Package,\r\n  UserPlus,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Calendar\r\n} from \"lucide-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst DashboardCard = ({ title, value, icon: Icon, trend }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        height: \"100%\",\r\n        transition: \"all 0.3s\",\r\n        background: theme.palette.background.default,\r\n        \"&:hover\": {\r\n          transform: \"translateY(-4px)\",\r\n          boxShadow: theme.shadows[8]\r\n        },\r\n        borderRadius: 2,\r\n        position: 'relative',\r\n        overflow: 'hidden'\r\n      }}\r\n    >\r\n      <CardContent sx={{ position: 'relative', zIndex: 1 }}>\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"text.secondary\"\r\n              sx={{ mb: 1, fontWeight: 500 }}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"div\"\r\n              sx={{ fontWeight: 700, mb: 1 }}\r\n            >\r\n              {value}\r\n            </Typography>\r\n            {trend && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  gap: 0.5\r\n                }}\r\n              >\r\n                {trend > 0 ? (\r\n                  <TrendingUp size={16} color={theme.palette.success.main} />\r\n                ) : (\r\n                  <TrendingDown size={16} color={theme.palette.error.main} />\r\n                )}\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color={trend > 0 ? \"success.main\" : \"error.main\"}\r\n                  sx={{ fontWeight: 500 }}\r\n                >\r\n                  {trend > 0 ? \"+\" : \"\"}{trend}% from last month\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Avatar\r\n            sx={{\r\n              bgcolor: alpha(theme.palette.primary.main, 0.1),\r\n              width: 56,\r\n              height: 56,\r\n              color: theme.palette.primary.main\r\n            }}\r\n          >\r\n            <Icon size={24} />\r\n          </Avatar>\r\n        </Box>\r\n      </CardContent>\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          right: 0,\r\n          width: '30%',\r\n          height: '100%',\r\n          background: `linear-gradient(45deg, transparent, ${alpha(theme.palette.primary.main, 0.03)})`,\r\n          transform: 'skewX(-20deg)',\r\n          transformOrigin: 'top'\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst ActivityItem = ({ icon: Icon, title, description, timestamp, type }) => {\r\n  const theme = useTheme();\r\n\r\n  const getTypeColor = () => {\r\n    const types = {\r\n      order: theme.palette.info.main,\r\n      delivery: theme.palette.success.main,\r\n      registration: theme.palette.secondary.main,\r\n      alert: theme.palette.warning.main\r\n    };\r\n    return types[type] || theme.palette.grey[500];\r\n  };\r\n\r\n  return (\r\n    <ListItem\r\n      sx={{\r\n        py: 2,\r\n        transition: 'all 0.2s',\r\n        '&:hover': {\r\n          bgcolor: alpha(theme.palette.primary.main, 0.03)\r\n        }\r\n      }}\r\n    >\r\n      <ListItemIcon>\r\n        <Avatar\r\n          sx={{\r\n            bgcolor: alpha(getTypeColor(), 0.1),\r\n            color: getTypeColor()\r\n          }}\r\n        >\r\n          <Icon size={20} />\r\n        </Avatar>\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={\r\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 600 }}>\r\n            {title}\r\n          </Typography>\r\n        }\r\n        secondary={\r\n          <React.Fragment>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"body2\"\r\n              color=\"text.primary\"\r\n              sx={{ display: 'block', my: 0.5 }}\r\n            >\r\n              {description}\r\n            </Typography>\r\n            <Typography\r\n              component=\"span\"\r\n              variant=\"caption\"\r\n              color=\"text.secondary\"\r\n            >\r\n              {timestamp}\r\n            </Typography>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <ListItemSecondaryAction>\r\n        <Chip\r\n          size=\"small\"\r\n          label={type.charAt(0).toUpperCase() + type.slice(1)}\r\n          sx={{\r\n            bgcolor: alpha(getTypeColor(), 0.1),\r\n            color: getTypeColor(),\r\n            fontWeight: 500,\r\n            '& .MuiChip-label': {\r\n              px: 2\r\n            }\r\n          }}\r\n        />\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const [users, setUsers] = useState([]);\r\n  const [clubUsers, setClubUsers] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [subscriptions, setSubscriptions] = useState([]);\r\n  const [recentActivities, setRecentActivities] = useState([]);\r\n  const [recentOrders, setRecentOrders] = useState([]);\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const encryptedToken = Cookies.get('token');\r\n  const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n  console.log(\"tokentokentokentokentoken\", token);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n      try {\r\n        const [usersRes, ordersRes, subscriptionsRes] = await Promise.all([\r\n          axios.get(\"https://majesticmall.net/api/user/getAllUser\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n          axios.get(\"https://majesticmall.net/api/user/getallOrder\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n          axios.get(\"https://majesticmall.net/api/user/getallSubscriptions\", {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          }),\r\n        ]);\r\n\r\n        setUsers(usersRes.data.success);\r\n        setClubUsers(usersRes.data?.success?.filter((user) => user.club === true));\r\n        setOrders(ordersRes.data?.success);\r\n        setSubscriptions(subscriptionsRes.data?.success);\r\n\r\n        const recentOrder = [\r\n          ...ordersRes.data?.success?.slice(0, 3),\r\n          ...subscriptionsRes.data?.success?.slice(0, 2)\r\n        ].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n        setRecentOrders(recentOrder);\r\n        const activities = [\r\n          ...ordersRes.data?.success?.slice(0, 3).map(order => ({\r\n            type: \"order\",\r\n            icon: ShoppingCart,\r\n            title: \"New Order Received\",\r\n            description: `Order #${order._id.slice(-4)} from ${order.shippingAddress?.fullName || order.shippingAddress?.name}`,\r\n            timestamp: new Date(order.createdAt).toLocaleString()\r\n          })),\r\n          ...usersRes.data?.success?.slice(0, 2).map(user => ({\r\n            type: \"registration\",\r\n            icon: UserPlus,\r\n            title: \"New User Registration\",\r\n            description: `${user.name} joined`,\r\n            timestamp: new Date(user.createdAt).toLocaleString()\r\n          }))\r\n        ].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n\r\n        setRecentActivities(activities);\r\n\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [token]);\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, p: 3, bgcolor: 'background.default' }}>\r\n      <Typography\r\n        variant=\"h4\"\r\n        gutterBottom\r\n        sx={{\r\n          mb: 4,\r\n          fontWeight: 700,\r\n          color: 'text.primary'\r\n        }}\r\n      >\r\n        Dashboard Overview\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Link to=\"/admindashboard/customers\" style={{ textDecoration: 'none' }}>\r\n            <DashboardCard\r\n              title=\"Total Users\"\r\n              value={users.length}\r\n              icon={Users}\r\n            />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Link to=\"/admindashboard/clubcustomers\" style={{ textDecoration: 'none' }}>\r\n            <DashboardCard\r\n              title=\"Club Members\"\r\n              value={clubUsers.length}\r\n              icon={Star}\r\n            />\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          {/* <Link to=\"/admindashboard/orders\" style={{ textDecoration: 'none' }}>\r\n            <DashboardCard\r\n              title=\"Total Normal Orders\"\r\n              value={orders?.filter((data) => data.orderType === \"normal\").length}\r\n              icon={ShoppingCart}\r\n            />\r\n          </Link> */}\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Link to=\"/admindashboard/orders1\" style={{ textDecoration: 'none' }}>\r\n            {/* <DashboardCard\r\n              title=\"Total Scheduled Orders\"\r\n              value={orders?.filter((data) => data.orderType === \"scheduled\").length}\r\n              icon={Calendar}\r\n            /> */}\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={3}>\r\n          <Link to=\"/admindashboard/subscription\" style={{ textDecoration: 'none' }}>\r\n            <DashboardCard\r\n              title=\"Subscriptions\"\r\n              value={subscriptions?.length}\r\n              icon={Repeat}\r\n            />\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper\r\n            sx={{\r\n              p: 3,\r\n              height: '100%',\r\n              borderRadius: 2,\r\n              boxShadow: theme?.shadows[2],\r\n              '&:hover': {\r\n                boxShadow: theme?.shadows[4]\r\n              }\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              gutterBottom\r\n              sx={{\r\n                fontWeight: 600,\r\n                mb: 3\r\n              }}\r\n            >\r\n              Recent Activities\r\n            </Typography>\r\n            <List>\r\n              {recentActivities?.map((activity, index) => (\r\n                <React.Fragment key={index}>\r\n                  <ActivityItem {...activity} />\r\n                  {index < recentActivities.length - 1 &&\r\n                    <Divider sx={{ my: 1 }} />\r\n                  }\r\n                </React.Fragment>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Paper\r\n            sx={{\r\n              p: 3,\r\n              height: '100%',\r\n              borderRadius: 2,\r\n              boxShadow: theme.shadows[2],\r\n              '&:hover': {\r\n                boxShadow: theme.shadows[4]\r\n              }\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"h6\"\r\n              gutterBottom\r\n              sx={{\r\n                fontWeight: 600,\r\n                mb: 3\r\n              }}\r\n            >\r\n              Recent Orders\r\n            </Typography>\r\n            <List>\r\n              {recentOrders?.map((order, index) => (\r\n                <React.Fragment key={order._id}>\r\n                  <ListItem\r\n                    sx={{\r\n                      transition: 'all 0.2s',\r\n                      '&:hover': {\r\n                        bgcolor: alpha(theme.palette.primary.main, 0.03)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Avatar\r\n                        sx={{\r\n                          bgcolor: alpha(theme.palette.primary.main, 0.1),\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                      >\r\n                        <Package size={20} />\r\n                      </Avatar>\r\n                    </ListItemIcon>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Typography variant=\"subtitle2\" sx={{ fontWeight: 600 }}>\r\n                          {`Order #${order?._id?.slice(-4)}`}\r\n                        </Typography>\r\n                      }\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            sx={{ display: 'block', my: 0.5 }}\r\n                          >\r\n                            {order.shippingAddress?.fullName || order.shippingAddress?.name}\r\n                          </Typography>\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"caption\"\r\n                            color=\"text.secondary\"\r\n                          >\r\n                            {new Date(order.createdAt).toLocaleString()}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <Chip\r\n                        size=\"small\"\r\n                        label={order.status}\r\n                        sx={{\r\n                          bgcolor: order.status === \"delivered\"\r\n                            ? alpha(theme.palette.success.main, 0.1)\r\n                            : alpha(theme.palette.primary.main, 0.1),\r\n                          color: order.status === \"delivered\"\r\n                            ? theme.palette.success.main\r\n                            : theme.palette.primary.main,\r\n                          fontWeight: 500,\r\n                          '& .MuiChip-label': {\r\n                            px: 2\r\n                          }\r\n                        }}\r\n                      />\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                  {index < orders.length - 1 &&\r\n                    <Divider sx={{ my: 1 }} />\r\n                  }\r\n                </React.Fragment>\r\n              ))}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"names":["DashboardCard","_ref","title","value","icon","Icon","trend","theme","useTheme","_jsxs","Card","sx","height","transition","background","palette","default","transform","boxShadow","shadows","borderRadius","position","overflow","children","_jsx","CardContent","zIndex","Box","display","alignItems","justifyContent","Typography","variant","color","mb","fontWeight","component","gap","TrendingUp","size","success","main","TrendingDown","error","Avatar","bgcolor","alpha","primary","width","top","right","transformOrigin","ActivityItem","_ref2","description","timestamp","type","getTypeColor","order","info","delivery","registration","secondary","alert","warning","grey","ListItem","py","ListItemIcon","ListItemText","React","my","ListItemSecondaryAction","Chip","label","charAt","toUpperCase","slice","px","Dashboard","users","setUsers","useState","clubUsers","setClubUsers","orders","setOrders","subscriptions","setSubscriptions","recentActivities","setRecentActivities","recentOrders","setRecentOrders","encryptedToken","Cookies","get","token","CryptoJS","decrypt","process","toString","Utf8","console","log","useEffect","async","_usersRes$data","_usersRes$data$succes","_ordersRes$data","_subscriptionsRes$dat","_ordersRes$data2","_ordersRes$data2$succ","_subscriptionsRes$dat2","_subscriptionsRes$dat3","_ordersRes$data3","_ordersRes$data3$succ","_usersRes$data2","_usersRes$data2$succe","usersRes","ordersRes","subscriptionsRes","Promise","all","axios","headers","Authorization","data","filter","user","club","recentOrder","sort","a","b","Date","activities","map","_order$shippingAddres","_order$shippingAddres2","ShoppingCart","_id","shippingAddress","fullName","name","createdAt","toLocaleString","UserPlus","fetchData","flexGrow","p","gutterBottom","Grid","container","spacing","item","xs","sm","md","Link","to","style","textDecoration","length","Users","Star","Repeat","Paper","List","activity","index","Divider","_order$_id","_order$shippingAddres3","_order$shippingAddres4","Package","status"],"sourceRoot":""}
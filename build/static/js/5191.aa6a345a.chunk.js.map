{"version":3,"file":"static/js/5191.aa6a345a.chunk.js","mappings":"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","sources":["components/admin/pages/addsubcategory.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message,\r\n  Space,\r\n  Select,\r\n  Typography,\r\n} from \"antd\";\r\nimport { PlusOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport { Trash2, Edit, FileSpreadsheet } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\nimport Cookies from 'js-cookie';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst { Title } = Typography;\r\nconst API_BASE_URL = \"https://majesticmall.net/api/admin\";\r\nconst { confirm } = Modal;\r\nconst AddSubCategory = () => {\r\n  const [subCategories, setSubCategories] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\r\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\r\n  const [editingSubCategory, setEditingSubCategory] = useState(null);\r\n  const [form] = Form.useForm();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [pagination, setPagination] = useState({ current: 1, pageSize: 10 });\r\n\r\n\r\n  const handleTableChange = (newPagination) => {\r\n    setPagination(newPagination);\r\n  };\r\n\r\n\r\n  const [filteredSubCategories, setFilteredSubCategories] = useState([]);\r\n  const subcategoryCount = subCategories.length;\r\n  const encryptionKey = process.env.REACT_APP_ENCRYPTION_KEY;\r\n  const encryptedToken = Cookies.get('token');\r\n  const token = encryptedToken ? CryptoJS.AES.decrypt(encryptedToken, encryptionKey).toString(CryptoJS.enc.Utf8) : null;\r\n  const [categoriesLookup, setCategoriesLookup] = useState({});\r\n\r\n  useEffect(() => {\r\n    Promise.all([fetchSubCategories(), fetchCategories()]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const lookup = {};\r\n    categories.forEach((category) => {\r\n      lookup[category._id] = category.categoryName;\r\n    });\r\n    setCategoriesLookup(lookup);\r\n  }, [categories]);\r\n\r\n  useEffect(() => {\r\n    const enrichedSubCategories = subCategories.map((subcat) => ({\r\n      ...subcat,\r\n      categoryName: categoriesLookup[subcat.categoryId] || \"Unknown Category\",\r\n    }));\r\n\r\n    setFilteredSubCategories(\r\n      enrichedSubCategories.filter((subCategory) =>\r\n        Object.values(subCategory).some(\r\n          (val) =>\r\n            val &&\r\n            val.toString().toLowerCase().includes(searchText.toLowerCase())\r\n        )\r\n      )\r\n    );\r\n  }, [subCategories, categoriesLookup, searchText]);\r\n  const showDeleteConfirm = (id) => {\r\n    confirm({\r\n      title: \"Are you sure you want to delete?\",\r\n      content: \"This action cannot be undone.\",\r\n      okText: \"Yes\",\r\n      okType: \"danger\",\r\n      cancelText: \"No\",\r\n      onOk() {\r\n        handleDeleteSubCategory(id);\r\n      },\r\n      onCancel() {\r\n        // console.log(\"Deletion cancelled\");\r\n      },\r\n    });\r\n  };\r\n  const fetchSubCategories = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/getSubcategory`);\r\n      setSubCategories(response.data.Subcategory);\r\n    } catch (error) {\r\n      message.error(\"Failed to fetch sub-categories\");\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/getCategory`);\r\n      setCategories(response.data.category);\r\n    } catch (error) {\r\n      message.error(\"Failed to fetch categories\");\r\n    }\r\n  };\r\n  const handleStatusToggle = async (category) => {\r\n    try {\r\n      const endpoint =\r\n        category.status === \"Active\"\r\n          ? \"changesubcategoryActiveStatus\"\r\n          : \"changesubcategoryInactiveStatus\";\r\n      await axios.get(\r\n        `https://majesticmall.net/api/admin/${endpoint}/${category._id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      message.success(\r\n        `SubCategory ${category.status === \"Active\" ? \"blocked\" : \"unblocked\"\r\n        } successfully`\r\n      );\r\n      fetchSubCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to update product status\");\r\n    }\r\n  };\r\n  const handleAddSubCategory = async (values) => {\r\n    try {\r\n      await axios.post(\r\n        `${API_BASE_URL}/addSubcategory`,\r\n        {\r\n          categoryId: values.categoryId,\r\n          SubcategoryName: values.SubcategoryName,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      message.success(\"Sub-category added successfully\");\r\n      setIsAddModalVisible(false);\r\n      form.resetFields();\r\n      fetchSubCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to add sub-category\");\r\n    }\r\n  };\r\n\r\n  const handleEditSubCategory = async (values) => {\r\n    try {\r\n      await axios.post(\r\n        `${API_BASE_URL}/editSubcategory/${editingSubCategory._id}`,\r\n        {\r\n          categoryId: values.categoryId,\r\n          SubcategoryName: values.SubcategoryName,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      message.success(\"Sub-category updated successfully\");\r\n      setIsEditModalVisible(false);\r\n      form.resetFields();\r\n      fetchSubCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to update sub-category\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteSubCategory = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/deleteSubcategory/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      message.success(\"Sub-category deleted successfully\");\r\n      fetchSubCategories();\r\n    } catch (error) {\r\n      message.error(\"Failed to delete sub-category\");\r\n    }\r\n  };\r\n\r\n  const exportToExcel = () => {\r\n    const dataToExport = filteredSubCategories.map(\r\n      ({ categoryName, SubcategoryName }) => ({\r\n        \"Category Name\": categoryName,\r\n        \"Sub-Category Name\": SubcategoryName,\r\n      })\r\n    );\r\n    const worksheet = XLSX.utils.json_to_sheet(dataToExport);\r\n    const workbook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sub-Categories\");\r\n    XLSX.writeFile(workbook, \"sub-categories.xlsx\");\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Serial No.\",\r\n      key: \"serialNo\",\r\n      render: (_, __, index) => (pagination.current - 1) * pagination.pageSize + index + 1,\r\n    },\r\n    {\r\n      title: \"Category Name\",\r\n      dataIndex: \"categoryName\",\r\n      key: \"categoryName\",\r\n    },\r\n    {\r\n      title: `Sub-Category Name (${subcategoryCount})`,\r\n      dataIndex: \"SubcategoryName\",\r\n      key: \"SubcategoryName\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (_, record) => (\r\n        <Space>\r\n          <Button\r\n            type=\"text\"\r\n            icon={<Edit color=\"blue\" />}\r\n            onClick={() => {\r\n              setEditingSubCategory(record);\r\n              setIsEditModalVisible(true);\r\n              form.setFieldsValue({\r\n                categoryId: record.categoryId,\r\n                SubcategoryName: record.SubcategoryName,\r\n              });\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"text\"\r\n            icon={<Trash2 color=\"red\" />}\r\n            onClick={() => showDeleteConfirm(record._id)}\r\n          />\r\n          <Button\r\n            type={record.status === \"Active\" ? \"primary\" : \"danger\"}\r\n            onClick={() => handleStatusToggle(record)}\r\n          >\r\n            {record.status === \"Active\" ? \"Active\" : \"Inactive\"}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          marginBottom: 16,\r\n        }}\r\n      >\r\n        <Title level={3} className=\"title\">\r\n          Sub-Categories\r\n        </Title>\r\n        <Space>\r\n          <Input\r\n            placeholder=\"Search sub-categories\"\r\n            prefix={<SearchOutlined />}\r\n            value={searchText}\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setIsAddModalVisible(true)}\r\n          >\r\n            Add Sub-Category\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<FileSpreadsheet size={16} />}\r\n            onClick={exportToExcel}\r\n          >\r\n            Export to Excel\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={filteredSubCategories}\r\n        rowKey=\"_id\"\r\n        pagination={{\r\n          ...pagination,\r\n          onChange: (page, pageSize) => handleTableChange({ current: page, pageSize }),\r\n        }}\r\n        scroll={{ x: \"max-content\" }}\r\n        components={{\r\n          header: {\r\n            cell: (props) => (\r\n              <th\r\n                {...props}\r\n                style={{\r\n                  ...props.style,\r\n                  background: \"linear-gradient(#000,#000,#000)\",\r\n                  color: \"white\",\r\n                }}\r\n              />\r\n            ),\r\n          },\r\n        }}\r\n      />\r\n\r\n      <Modal\r\n        title=\"Add Sub-Category\"\r\n        visible={isAddModalVisible}\r\n        onCancel={() => setIsAddModalVisible(false)}\r\n        footer={null}\r\n      >\r\n        <Form form={form} onFinish={handleAddSubCategory} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"categoryId\"\r\n            label=\"Category Name\"\r\n            rules={[{ required: true, message: \"Please select a category\" }]}\r\n          >\r\n            <Select placeholder=\"Select a category\">\r\n              {categories.map((category) => (\r\n                <Select.Option key={category._id} value={category._id}>\r\n                  {category.categoryName}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"SubcategoryName\"\r\n            label=\"Sub-Category Name\"\r\n            rules={[\r\n              { required: true, message: \"Please enter a sub-category name\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Add Sub-Category\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n      <Modal\r\n        title=\"Edit Sub-Category\"\r\n        visible={isEditModalVisible}\r\n        onCancel={() => setIsEditModalVisible(false)}\r\n        footer={null}\r\n      >\r\n        <Form form={form} onFinish={handleEditSubCategory} layout=\"vertical\">\r\n          <Form.Item\r\n            name=\"categoryId\"\r\n            label=\"Category Name\"\r\n            rules={[{ required: true, message: \"Please select a category\" }]}\r\n          >\r\n            <Select placeholder=\"Select a category\">\r\n              {categories.map((category) => (\r\n                <Select.Option key={category._id} value={category._id}>\r\n                  {category.categoryName}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"SubcategoryName\"\r\n            label=\"Sub-Category Name\"\r\n            rules={[\r\n              { required: true, message: \"Please enter a sub-category name\" },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Update Sub-Category\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSubCategory;\r\n"],"names":["Title","Typography","API_BASE_URL","confirm","Modal","AddSubCategory","subCategories","setSubCategories","useState","categories","setCategories","isAddModalVisible","setIsAddModalVisible","isEditModalVisible","setIsEditModalVisible","editingSubCategory","setEditingSubCategory","form","Form","useForm","searchText","setSearchText","pagination","setPagination","current","pageSize","filteredSubCategories","setFilteredSubCategories","subcategoryCount","length","encryptedToken","Cookies","get","token","CryptoJS","decrypt","process","toString","Utf8","categoriesLookup","setCategoriesLookup","useEffect","Promise","all","fetchSubCategories","fetchCategories","lookup","forEach","category","_id","categoryName","enrichedSubCategories","map","subcat","categoryId","filter","subCategory","Object","values","some","val","toLowerCase","includes","async","response","axios","data","Subcategory","error","message","handleDeleteSubCategory","delete","id","headers","Authorization","success","columns","title","key","render","_","__","index","dataIndex","record","_jsxs","Space","children","_jsx","Button","type","icon","Edit","color","onClick","setFieldsValue","SubcategoryName","Trash2","showDeleteConfirm","content","okText","okType","cancelText","onOk","onCancel","status","endpoint","handleStatusToggle","style","display","justifyContent","marginBottom","level","className","Input","placeholder","prefix","SearchOutlined","value","onChange","e","target","PlusOutlined","FileSpreadsheet","size","exportToExcel","dataToExport","_ref","worksheet","XLSX","json_to_sheet","workbook","book_new","book_append_sheet","Table","dataSource","rowKey","page","scroll","x","components","header","cell","props","background","visible","footer","onFinish","post","resetFields","layout","Item","name","label","rules","required","Select","Option","htmlType"],"sourceRoot":""}